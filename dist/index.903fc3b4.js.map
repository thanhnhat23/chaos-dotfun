{"mappings":"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","sources":["theme/default/index.js","theme/default/app/App.jsx","theme/default/app/translations.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","theme/default/app/pages/LoginPage.jsx","theme/default/app/pages/SignupPage.jsx","theme/default/app/pages/GuestPage.jsx","theme/default/app/pages/ForgotPasswordPage.jsx","theme/default/app/pages/RoleSelectionPage.jsx","theme/default/app/pages/ViewerPage.jsx","lib/game/client/game-manager.js","lib/game/client/game-client.js","lib/rooms/constants.js","lib/game/constants.js","lib/game/client/game-engine.js","lib/game/client/fps-counter.js","lib/objects/constants.js","lib/game/client/room-events.js","lib/users/client/player-engine.js","lib/game/client/engine/sprite-text-factory.js","lib/actions/constants.js","lib/game/client/scene-dynamic.js","lib/game/client/tileset-animation.js","lib/game/client/minimap.js","lib/game/client/scene-preloader.js","lib/game/client/minimap-ui.js","lib/game/client/instructions-ui.js","lib/game/client/settings-ui.js","lib/game/client/joystick.js","lib/game/client/handlers/client-start-handler.js","lib/game/client/handlers/registration-form-handler.js","lib/game/client/handlers/errors-block-handler.js","lib/game/client/handlers/terms-and-conditions-handler.js","lib/game/client/handlers/login-form-handler.js","lib/game/client/handlers/forgot-password-form-handler.js","lib/game/client/handlers/guest-form-handler.js","lib/game/client/handlers/full-screen-handler.js","lib/features/client/manager.js","lib/features/client/config-client.js","lib/chat/client/plugin.js","lib/chat/client/chat-ui.js","lib/chat/client/chat-tabs.js","lib/chat/constants.js","lib/chat/client/messages-listener.js","lib/chat/client/templates-handler.js","lib/chat/client/snippets/en_US.js","lib/snippets/client/translations-mapper.js","lib/snippets/constants.js","lib/features/plugin-interface.js","lib/objects/client/plugin.js","lib/objects/client/animation-engine.js","lib/objects/client/objects-message-listener.js","lib/objects/client/trader-object-ui.js","lib/objects/client/drops-message-listener.js","lib/objects/client/snippets/en_US.js","lib/game/client/user-interface.js","lib/inventory/client/plugin.js","lib/inventory/client/inventory-ui.js","lib/game/client/ui-factory.js","lib/inventory/constants.js","lib/inventory/client/inventory-receiver.js","lib/inventory/client/exchange/trade-target-action.js","lib/inventory/client/trade-message-listener.js","lib/inventory/client/trade-message-handler.js","lib/inventory/client/templates-handler.js","lib/inventory/client/snippets/en_US.js","lib/actions/client/plugin.js","lib/actions/client/skills-ui.js","lib/actions/client/player-selector.js","lib/actions/client/preloader-handler.js","lib/actions/client/messages-handler.js","lib/actions/client/messages-guard.js","lib/actions/client/game-manager-enricher.js","lib/actions/client/receiver-wrapper.js","lib/actions/client/snippets/en_US.js","lib/users/client/plugin.js","lib/users/client/lifebar-ui.js","lib/users/constants.js","lib/users/client/objects-handler.js","lib/users/client/player-stats-ui.js","lib/users/client/snippets/en_US.js","lib/audio/client/plugin.js","lib/audio/client/manager.js","lib/audio/constants.js","lib/audio/client/scene-audio-player.js","lib/audio/client/messages-listener.js","lib/audio/client/audio-ui.js","lib/audio/client/audio-update.js","lib/audio/client/snippets/en_US.js","lib/rooms/client/plugin.js","lib/prediction/client/plugin.js","lib/prediction/client/prediction-world-creator.js","lib/world/server/collisions-manager.js","lib/world/server/physical-body.js","lib/world/server/p2world.js","lib/world/server/object-body-state.js","lib/world/server/body-state.js","lib/world/server/path-finder.js","lib/game/type-determiner.js","lib/world/constants.js","lib/world/world-points-validator.js","lib/world/world-timer.js","lib/prediction/client/room-events-override.js","lib/prediction/client/player-engine-prediction.js","lib/teams/client/plugin.js","lib/teams/client/target-box-enricher.js","lib/teams/constants.js","lib/teams/client/team-message-listener.js","lib/teams/client/team-message-handler.js","lib/teams/client/clan-message-listener.js","lib/teams/client/clan-message-handler.js","lib/teams/client/messages-processor.js","lib/teams/client/templates-handler.js","lib/snippets/client/plugin.js","lib/snippets/translator.js","lib/snippets/client/snippets-ui.js","lib/snippets/client/templates-handler.js","lib/snippets/client/snippets/en_US.js","lib/ads/client/plugin.js","lib/ads/client/messages-listener.js","lib/ads/constants.js","lib/ads/client/sdk-handler.js","lib/ads/client/providers-list.js","lib/ads/client/providers/crazy-games.js","lib/ads/client/providers/crazy-games/banners-handler.js","lib/ads/client/providers/crazy-games/validator.js","lib/ads/client/providers/crazy-games/videos-handler.js","lib/ads/client/ads-provider.js","lib/ads/client/providers/game-monetize.js","lib/ads/client/providers/google-ad-sense.js","lib/ads/client/snippets/en_US.js","lib/world/client/plugin.js","lib/world/client/debug-world-creator.js","lib/world/client/renderer.js","lib/scores/client/plugin.js","lib/scores/client/preloader-handler.js","lib/scores/constants.js","lib/scores/client/scores-message-listener.js","lib/scores/client/scores-message-handler.js","lib/scores/client/messages-processor.js","lib/scores/client/snippets/en_US.js","lib/rewards/client/plugin.js","lib/rewards/client/preloader-handler.js","lib/rewards/constants.js","lib/rewards/client/message-listener.js","lib/rewards/client/message-handler.js","lib/rewards/client/messages-processor.js","lib/rewards/client/snippets/en_US.js","lib/firebase/client/connector.js","lib/config/client/config-manager.js","lib/config/processor.js","lib/game/client/snippets/en_US.js","lib/game/client/game-dom.js","package.json","theme/plugins/client-plugin.js","theme/plugins/objects/client/npc1.js"],"sourcesContent":["/**\r\n *\r\n * Reldens - React Bootstrap\r\n *\r\n */\r\n\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './app/App.jsx';\r\nimport { GameManager } from '../../lib/game/client/game-manager';\r\nimport { ClientPlugin } from '../plugins/client-plugin';\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nwindow.RELDENS_LOG_LEVEL = urlParams.get('logLevel') || 7;\r\nwindow.RELDENS_ENABLE_TRACE_FOR = Number(urlParams.get('traceFor') || 'emergency,alert,critical');\r\n\r\nconst reldens = new GameManager();\r\nreldens.setupCustomClientPlugin('customPluginKey', ClientPlugin);\r\n\r\n// client event listener example with version display:\r\nreldens.events.on('reldens.afterInitEngineAndStartGame', () => {\r\n    const verEl = reldens.gameDom.getElement('#current-version');\r\n    if (verEl) {\r\n        verEl.innerHTML = reldens.config.client.gameEngine.version + ' -';\r\n    }\r\n});\r\n\r\n// demo message removal:\r\nreldens.events.on('reldens.startGameAfter', () => {\r\n    reldens.gameDom.getElement('.row-disclaimer')?.remove();\r\n});\r\n\r\nreldens.events.on('reldens.activateRoom', (room) => {\r\n    room.onMessage('*', (message) => {\r\n        if ('rski.Bc' !== message.act) {\r\n            return;\r\n        }\r\n        let skillKey = (message.data?.skillKey || '').toString();\r\n        let skillDelay = Number(message.data?.extraData?.sd || 0);\r\n        if ('' !== skillKey && 0 < skillDelay) {\r\n            let skillElement = reldens.gameDom.getElement('.skill-icon-' + skillKey);\r\n            if (!skillElement) {\r\n                return;\r\n            }\r\n            let startTime = Date.now();\r\n            let endTime = startTime + skillDelay;\r\n            function updateCooldown() {\r\n                let currentTime = Date.now();\r\n                let remainingTime = endTime - currentTime;\r\n                if (0 >= remainingTime) {\r\n                    skillElement.style.setProperty('--angle', '360deg');\r\n                    skillElement.classList.remove('cooldown');\r\n                    return;\r\n                }\r\n                let progress = (skillDelay - remainingTime) / skillDelay;\r\n                let angle = progress * 360;\r\n                skillElement.style.setProperty('--angle', `${angle}deg`);\r\n                requestAnimationFrame(updateCooldown);\r\n            }\r\n            skillElement.classList.add('cooldown');\r\n            skillElement.style.setProperty('--angle', '0deg');\r\n            updateCooldown();\r\n        }\r\n    });\r\n});\r\n\r\nwindow.reldens = reldens;\r\n\r\nfunction bootstrap() {\r\n    const container = document.getElementById('root');\r\n    if (!container) {\r\n        console.error('Missing #root element for React mount.');\r\n        return;\r\n    }\r\n    const root = createRoot(container);\r\n    root.render(<App reldens={reldens} />);\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', bootstrap);\r\n\r\n","﻿import React, { Fragment, useEffect } from \"react\";\r\nimport { BrowserRouter, Routes, Route, Navigate, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { translations } from \"./translations.js\";\r\nimport LoginPage from \"./pages/LoginPage.jsx\";\r\nimport SignupPage from \"./pages/SignupPage.jsx\";\r\nimport GuestPage from \"./pages/GuestPage.jsx\";\r\nimport ForgotPasswordPage from \"./pages/ForgotPasswordPage.jsx\";\r\nimport RoleSelectionPage from \"./pages/RoleSelectionPage.jsx\";\r\nimport ViewerPage from \"./pages/ViewerPage.jsx\";\r\n\r\nconst AuthNavigation = ({ links, activeRoute, onNavigate }) => (\r\n    <div className=\"flex flex-wrap items-center justify-center gap-3 md:justify-end\">\r\n        {links.map(({ route, label }) => {\r\n            const isActive = activeRoute === route;\r\n            const baseClasses = \"inline-flex items-center justify-center rounded-full border px-5 py-2 text-sm font-semibold uppercase tracking-wide transition-all duration-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-400/70\";\r\n            const resolvedClasses = isActive\r\n                ? `${baseClasses} border-sky-400 bg-sky-500/80 text-white shadow-lg shadow-sky-500/30`\r\n                : `${baseClasses} border-white/15 bg-white/10 text-slate-200 hover:border-sky-400 hover:bg-sky-500/30 hover:text-white`;\r\n            return (\r\n                <button\r\n                    key={route}\r\n                    type=\"button\"\r\n                    className={resolvedClasses}\r\n                    onClick={() => onNavigate(route)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        })}\r\n    </div>\r\n);\r\n\r\nconst resolveNavLinks = (pathname, copy) => {\r\n    if (!copy.nav) {\r\n        return [];\r\n    }\r\n    if (pathname.startsWith(\"/streamer\")) {\r\n        return copy.nav.streamer || [];\r\n    }\r\n    if (pathname.startsWith(\"/viewer\")) {\r\n        return copy.nav.viewer || [];\r\n    }\r\n    if (pathname.startsWith(\"/guest\")) {\r\n        return copy.nav.guest || [];\r\n    }\r\n    return copy.nav.home || [];\r\n};\r\n\r\nconst resolveActiveRoute = (pathname, links) => {\r\n    if (!links || links.length === 0) {\r\n        return pathname;\r\n    }\r\n    const exact = links.find(({ route }) => route === pathname);\r\n    if (exact) {\r\n        return exact.route;\r\n    }\r\n    const partial = links.find(({ route }) => route !== \"/\" && pathname.startsWith(route));\r\n    return partial ? partial.route : pathname;\r\n};\r\n\r\nconst Shell = ({ copy }) => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const navLinks = resolveNavLinks(location.pathname, copy);\r\n    const activeRoute = resolveActiveRoute(location.pathname, navLinks);\r\n\r\n    const handleNavigate = (route) => {\r\n        navigate(route);\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper relative min-h-screen overflow-hidden text-slate-100\">\r\n            <div className=\"pointer-events-none absolute inset-0 bg-gradient-to-br from-slate-950 via-slate-900 to-sky-950 opacity-95\"></div>\r\n            <div className=\"pointer-events-none absolute inset-0 bg-[radial-gradient(circle_at_top,_rgba(96,165,250,0.18),_transparent_60%)]\"></div>\r\n            <div className=\"relative z-10 flex min-h-screen flex-col\">\r\n                <div className=\"content flex-1 px-4 pb-16\">\r\n                    <div className=\"row row-disclaimer mx-auto mt-10 w-full max-w-4xl !max-w-4xl !bg-white/10 !p-6 !shadow-2xl border border-white/10 text-center text-sm leading-relaxed text-slate-200 backdrop-blur-xl\">\r\n                        {copy.disclaimer.map((line, index) => (\r\n                            <Fragment key={line}>\r\n                                {line}\r\n                                {index < copy.disclaimer.length - 1 && <br />}\r\n                            </Fragment>\r\n                        ))}\r\n                    </div>\r\n                    {navLinks.length > 0 && (\r\n                        <div className=\"mt-8 flex justify-center md:justify-end\">\r\n                            <AuthNavigation links={navLinks} activeRoute={activeRoute} onNavigate={handleNavigate} />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"mt-10 flex w-full justify-center px-2\">\r\n                        <div className=\"forms-container flex w-full max-w-5xl flex-col items-center gap-8\">\r\n                            <Routes>\r\n                                <Route path=\"/\" element={<RoleSelectionPage copy={copy} onSelect={handleNavigate} />} />\r\n                                <Route path=\"/streamer\">\r\n                                    <Route index element={<Navigate to=\"/streamer/login\" replace />} />\r\n                                    <Route path=\"login\" element={<LoginPage copy={copy} variant=\"streamer\" />} />\r\n                                    <Route path=\"signup\" element={<SignupPage copy={copy} />} />\r\n                                    <Route path=\"forgot\" element={<ForgotPasswordPage copy={copy} />} />\r\n                                </Route>\r\n                                <Route path=\"/viewer\" element={<ViewerPage copy={copy} />} />\r\n                                <Route path=\"/guest\" element={<GuestPage copy={copy} />} />\r\n                                <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n                            </Routes>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"selection-container hidden\">\r\n                        <div className=\"selection-forms-container rounded-3xl border border-white/10 bg-slate-900/80 p-8 shadow-2xl backdrop-blur-xl\">\r\n                            <div className=\"player-selection-form-errors\"></div>\r\n                            <form\r\n                                name=\"player-selector-form\"\r\n                                id=\"player-selector-form\"\r\n                                className=\"player-selector-form hidden\"\r\n                                action=\"#\"\r\n                                method=\"post\"\r\n                            >\r\n                                <h3 className=\"form-title text-center text-lg font-semibold text-white\">\r\n                                    <label htmlFor=\"player-select-element\">{copy.playerSelection.selectLabel}</label>\r\n                                </h3>\r\n                                <div className=\"input-box player-select-box mt-4\">\r\n                                    <select\r\n                                        className=\"input-box select-element w-full rounded-xl border border-white/15 bg-slate-900/50 px-4 py-3 text-sm text-slate-100 focus:border-sky-400 focus:outline-none focus:ring-2 focus:ring-sky-500/40\"\r\n                                        id=\"player-select-element\"\r\n                                        name=\"player-select-element\"\r\n                                    ></select>\r\n                                </div>\r\n                                <div className=\"player-selection-additional-info mt-3 text-sm text-slate-300\"></div>\r\n                                <div className=\"input-box submit-container player-select-submit mt-4 flex items-center justify-end gap-3\">\r\n                                    <div className=\"loading-container hidden\">\r\n                                        <img src=\"./assets/web/loading.gif\" alt={copy.playerSelection.loadingAlt} />\r\n                                    </div>\r\n                                    <input type=\"submit\" value={copy.playerSelection.selectSubmit} />\r\n                                </div>\r\n                            </form>\r\n                            <form\r\n                                name=\"player-create-form\"\r\n                                id=\"player-create-form\"\r\n                                className=\"player-create-form hidden\"\r\n                                action=\"#\"\r\n                                method=\"post\"\r\n                            >\r\n                                <h3 className=\"form-title text-center text-lg font-semibold text-white\">\r\n                                    {copy.playerSelection.createTitle}\r\n                                </h3>\r\n                                <div className=\"input-box player-create-name mt-4\">\r\n                                    <label htmlFor=\"new-player-name\">{copy.playerSelection.createNameLabel}</label>\r\n                                    <input type=\"text\" name=\"new-player-name\" id=\"new-player-name\" className=\"required\" required />\r\n                                </div>\r\n                                <div className=\"player-creation-additional-info mt-3 text-sm text-slate-300\"></div>\r\n                                <div className=\"input-box submit-container player-create-submit mt-4 flex items-center justify-end gap-3\">\r\n                                    <div className=\"loading-container hidden\">\r\n                                        <img src=\"./assets/web/loading.gif\" alt={copy.playerSelection.loadingAlt} />\r\n                                    </div>\r\n                                    <input type=\"submit\" value={copy.playerSelection.createSubmit} />\r\n                                </div>\r\n                                <div className=\"input-box response-error\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"game-container hidden\">\r\n                        <div id=\"reldens\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer mt-auto bg-slate-950/80 py-6 text-center text-sm text-slate-300 backdrop-blur\">\r\n                    <div className=\"copyright\">\r\n                        <a className=\"hover:text-white hover:underline\" href=\"https://www.dwdeveloper.com/\">\r\n                            by D<span className=\"text-black text-lowercase\">w</span>\r\n                            <span className=\"text-capitalize\">Developer</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst App = ({ reldens }) => {\r\n    const lang = (typeof document !== \"undefined\" && document.documentElement.lang) || \"en\";\r\n    const locale = translations[lang] ? lang : \"en\";\r\n    const copy = translations[locale];\r\n\r\n    useEffect(() => {\r\n        if (reldens && typeof reldens.clientStart === \"function\") {\r\n            reldens.clientStart();\r\n        }\r\n    }, [reldens]);\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Shell copy={copy} />\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","﻿export const translations = {\n    en: {\n        nav: {\n            home: [],\n            streamer: [\n                { route: '/', label: 'Choose role' },\n                { route: '/streamer/login', label: 'Login' },\n                { route: '/streamer/signup', label: 'Create account' },\n                { route: '/streamer/forgot', label: 'Forgot password' }\n            ],\n            viewer: [\n                { route: '/', label: 'Back to role selection' }\n            ],\n            guest: [\n                { route: '/', label: 'Back to role selection' }\n            ]\n        },\n        disclaimer: [\n            'Disclaimer: Reldens is not just a game, is a platform to create games.',\n            'This is a demo to show how many features are available on the platform.'\n        ],\n        roles: {\n            title: 'Pick your role',\n            subtitle: 'Choose how you want to step into the world of Reldens.',\n            note: 'Blockchain interactions are work in progress. Donations are simulated for now.',\n            cards: [\n                {\n                    key: 'streamer',\n                    route: '/streamer/login',\n                    title: 'Streamer',\n                    icon: 'S',\n                    description: 'Broadcast your adventure and receive viewer-triggered buffs or events.',\n                    highlights: [\n                        'Link your YouTube channel to auto-start streaming on login.',\n                        'Viewers can spend SOL to empower you or unleash challenges.',\n                        'Access full account progression and management tools.'\n                    ],\n                    action: 'I am a streamer'\n                },\n                {\n                    key: 'viewer',\n                    route: '/viewer',\n                    title: 'Viewer',\n                    icon: 'V',\n                    description: 'Support your favourite streamer and influence the match in real time.',\n                    highlights: [\n                        'Connect a SOL wallet (demo) through ethers.js.',\n                        'Trigger buffs or spawn enemies with curated donation options.',\n                        'Hang out inside the browser player while the action happens.'\n                    ],\n                    action: 'Enter as viewer'\n                },\n                {\n                    key: 'guest',\n                    route: '/guest',\n                    title: 'Guest',\n                    icon: 'G',\n                    description: 'Jump into the demo map without creating an account or wallet.',\n                    highlights: [\n                        'Create a temporary hero and explore instantly.',\n                        'Test skills, combat and movement as they are today.',\n                        'You can upgrade to a full account later without hassle.'\n                    ],\n                    action: 'Play as guest'\n                }\n            ],\n            emptyState: 'Roles are loading. Please try again in a moment.'\n        },\n        guest: {\n            title: 'Play as a Guest',\n            usernameLabel: 'Username',\n            submit: 'Play',\n            loadingAlt: 'Loading...'\n        },\n        register: {\n            title: 'Create Account',\n            emailLabel: 'Email',\n            usernameLabel: 'Username',\n            passwordLabel: 'Password',\n            rePasswordLabel: 'Re-type password',\n            termsLink: 'Accept our Terms and Conditions (click here).',\n            submit: 'Register',\n            loadingAlt: 'Loading...'\n        },\n        login: {\n            title: 'Login',\n            usernameLabel: 'Username',\n            passwordLabel: 'Password',\n            submit: 'Submit',\n            loadingAlt: 'Loading...'\n        },\n        streamer: {\n            loginTitle: 'Streamer login',\n            loginSubtitle: 'Sign in and sync your broadcast tools to go live instantly.',\n            youtube: {\n                heading: 'Link your YouTube channel',\n                description: 'Provide your channel URL and primary stream key so we can auto-start your broadcast whenever you join the server.',\n                fields: {\n                    channelLabel: 'Channel URL',\n                    streamKeyLabel: 'Stream key',\n                    autoStartLabel: 'Auto-start streaming on login'\n                },\n                linkCta: 'Link YouTube',\n                unlinkCta: 'Disconnect',\n                connected: 'Channel linked. Streaming will start automatically when you enter the world.',\n                disconnected: 'Channel disconnected. Auto streaming disabled.',\n                helper: 'Your stream key stays in this device only. We do not upload it to our servers.',\n                learnMore: 'https://support.google.com/youtube/answer/2474026',\n                learnMoreLabel: 'YouTube live help',\n                steps: [\n                    'Make sure live streaming is enabled on your YouTube studio.',\n                    'Use the same primary stream key you configured in your encoder.',\n                    'Keep this browser tab open while broadcasting to maintain the link.'\n                ],\n                status: {\n                    idle: 'Not linked yet',\n                    linked: 'Connected'\n                }\n            }\n        },\n        forgot: {\n            title: 'Forgot password',\n            emailLabel: 'Email',\n            submit: 'Request',\n            loadingAlt: 'Loading...'\n        },\n        firebase: {\n            title: 'Firebase Registration',\n            usernameLabel: 'Username',\n            loadingAlt: 'Loading...'\n        },\n        terms: {\n            heading: 'Terms and conditions',\n            acceptLabel: 'I agree to these Terms and Conditions'\n        },\n        instructions: {\n            heading: 'Instructions',\n            steps: [\n                'Move with the arrows or using W-A-S-D.',\n                'Use left click to follow a path but for now to change to another scene you need to walk through the change point (like the bridge at the top, or the houses doors).',\n                'Use right-click or TAB to target near enemies or players.',\n                'You must have a target to execute a skill/action.',\n                'Use the screen-buttons to activate the different player skills/actions.'\n            ]\n        },\n        gameOver: [\n            'You died!',\n            'Just wait...',\n            'You will be automatically revived for this demo!'\n        ],\n        viewer: {\n            title: 'Support a streamer',\n            subtitle: 'Pick a channel, watch the show and use SOL donations to influence the battle.',\n            note: 'Blockchain integration is coming soon. This flow is a UI prototype.',\n            wallet: {\n                title: 'Your wallet',\n                description: 'Connect a SOL-compatible wallet through ethers.js to simulate donations.',\n                connectCta: 'Connect wallet',\n                disconnectCta: 'Disconnect',\n                connected: 'Wallet connected. You can pledge SOL donations.',\n                disconnected: 'Wallet disconnected.',\n                noProvider: 'No Web3 wallet detected. Install Phantom or MetaMask and try again.',\n                error: 'Failed to connect the wallet. Please retry.',\n                connectPrompt: 'Connect your wallet first to unlock donation options.',\n                status: {\n                    idle: 'Status: disconnected',\n                    connecting: 'Status: connecting...',\n                    connected: 'Status: connected',\n                    error: 'Status: error'\n                },\n                labels: {\n                    address: 'Wallet address',\n                    network: 'Network',\n                    balance: 'Balance'\n                }\n            },\n            viewerCountLabel: '{count} live viewers',\n            streamListTitle: 'Live channels',\n            donations: {\n                buffTitle: 'Buff donations',\n                eventTitle: 'Event donations',\n                donateCta: 'Donate {amount} SOL',\n                requiresWallet: 'Connect your wallet to unlock donation actions.',\n                success: 'Donation for {option} in {streamer} registered. It will trigger once {amount} SOL arrives.',\n                buffOptions: [\n                    { id: 'atk-boost', label: 'Sunlance Surge', description: 'Increase damage by 25% for 3 minutes.', amount: '1' },\n                    { id: 'heal-pulse', label: 'Guardian Pulse', description: 'Restore 40% HP and add a protective shield.', amount: '1.5' },\n                    { id: 'speed', label: 'Windwalker Veil', description: 'Boost movement speed by 35% for 2 minutes.', amount: '0.8' }\n                ],\n                eventOptions: [\n                    { id: 'spawn-elites', label: 'Elite Ambush', description: 'Spawn three elite monsters around the streamer.', amount: '2' },\n                    { id: 'map-swap', label: 'Portal Roulette', description: 'Teleport the party to a random map.', amount: '3' },\n                    { id: 'boss-challenge', label: 'World Boss Call', description: 'Summon a roaming boss with rare loot.', amount: '4.5' }\n                ]\n            },\n            streamers: [\n                { id: 'luna-fox', name: 'LunaFox', activity: 'Pushing nightfall raids with guildmates.', viewers: 842, tags: ['PvE', 'Speedrun'] },\n                { id: 'ember-knight', name: 'EmberKnight', activity: 'Arena duels and build theorycrafting.', viewers: 613, tags: ['PvP', 'Builds'] },\n                { id: 'nova-mage', name: 'NovaMage', activity: 'Triggering chaos events on demand.', viewers: 455, tags: ['Events', 'Co-op'] }\n            ]\n        },\n        playerSelection: {\n            selectLabel: 'Select Player',\n            selectSubmit: 'Start',\n            createTitle: 'Create Player',\n            createNameLabel: 'Player Name',\n            createSubmit: 'Create & Start',\n            loadingAlt: 'Loading...'\n        },\n        playerCreation: {\n            loadingAlt: 'Loading...'\n        },\n        footer: 'by DwDeveloper'\n    },\n    es: {\n        nav: {\n            home: [],\n            streamer: [\n                { route: '/', label: 'Elegir rol' },\n                { route: '/streamer/login', label: 'Iniciar sesion' },\n                { route: '/streamer/signup', label: 'Crear cuenta' },\n                { route: '/streamer/forgot', label: 'Recuperar clave' }\n            ],\n            viewer: [\n                { route: '/', label: 'Volver a roles' }\n            ],\n            guest: [\n                { route: '/', label: 'Volver a roles' }\n            ]\n        },\n        disclaimer: [\n            'Descargo: Reldens no es solo un juego, es una plataforma para crear juegos.',\n            'Esta es una demostracion para mostrar cuantas funciones estan disponibles en la plataforma.'\n        ],\n        roles: {\n            title: 'Elige tu rol',\n            subtitle: 'Decide como quieres entrar al mundo de Reldens.',\n            note: 'La integracion blockchain esta en desarrollo. Las donaciones son una simulacion.',\n            cards: [\n                {\n                    key: 'streamer',\n                    route: '/streamer/login',\n                    title: 'Streamer',\n                    icon: 'S',\n                    description: 'Transmite tu aventura y recibe mejoras o eventos activados por la comunidad.',\n                    highlights: [\n                        'Vincula tu canal de YouTube y comienza directo al iniciar sesion.',\n                        'Los espectadores gastan SOL para darte buffs o invocar desafios.',\n                        'Gestiona tu cuenta completa y el progreso de tus personajes.'\n                    ],\n                    action: 'Soy streamer'\n                },\n                {\n                    key: 'viewer',\n                    route: '/viewer',\n                    title: 'Espectador',\n                    icon: 'V',\n                    description: 'Apoya a tu streamer favorito e influye en la partida en tiempo real.',\n                    highlights: [\n                        'Conecta una billetera SOL (demo) usando ethers.js.',\n                        'Lanza buffs o genera enemigos con opciones de donacion.',\n                        'Mira la accion directamente desde el navegador.'\n                    ],\n                    action: 'Entrar como espectador'\n                },\n                {\n                    key: 'guest',\n                    route: '/guest',\n                    title: 'Invitado',\n                    icon: 'G',\n                    description: 'Prueba el mapa demo sin crear cuenta ni billetera.',\n                    highlights: [\n                        'Crea un heroe temporal y juega al instante.',\n                        'Experimenta las habilidades y el combate actual.',\n                        'Mas adelante puedes pasar a cuenta completa sin perder progreso.'\n                    ],\n                    action: 'Jugar como invitado'\n                }\n            ],\n            emptyState: 'Roles en carga. Intenta nuevamente en unos segundos.'\n        },\n        guest: {\n            title: 'Jugar como invitado',\n            usernameLabel: 'Nombre de usuario',\n            submit: 'Jugar',\n            loadingAlt: 'Cargando...'\n        },\n        register: {\n            title: 'Crear Cuenta',\n            emailLabel: 'Email',\n            usernameLabel: 'Nombre de Usuario',\n            passwordLabel: 'Contrasena',\n            rePasswordLabel: 'Reescribir contrasena',\n            termsLink: 'Aceptar nuestros Terminos y Condiciones (click aqui).',\n            submit: 'Registrarse',\n            loadingAlt: 'Cargando...'\n        },\n        login: {\n            title: 'Login',\n            usernameLabel: 'Nombre de Usuario',\n            passwordLabel: 'Password',\n            submit: 'Entrar',\n            loadingAlt: 'Cargando...'\n        },\n        streamer: {\n            loginTitle: 'Login de streamer',\n            loginSubtitle: 'Inicia sesion y sincroniza tus herramientas de transmision.',\n            youtube: {\n                heading: 'Vincula tu canal de YouTube',\n                description: 'Ingresa la URL y la clave de transmision para iniciar directo automaticamente cuando entres al servidor.',\n                fields: {\n                    channelLabel: 'URL del canal',\n                    streamKeyLabel: 'Clave de transmision',\n                    autoStartLabel: 'Iniciar directo automaticamente al ingresar'\n                },\n                linkCta: 'Vincular YouTube',\n                unlinkCta: 'Desconectar',\n                connected: 'Canal vinculado. El directo se iniciara automaticamente al ingresar.',\n                disconnected: 'Canal desconectado. Auto transmision deshabilitada.',\n                helper: 'La clave de transmision queda guardada solo en este dispositivo.',\n                learnMore: 'https://support.google.com/youtube/answer/2474026',\n                learnMoreLabel: 'Ayuda YouTube Live',\n                steps: [\n                    'Verifica que tengas habilitadas las transmisiones en YouTube Studio.',\n                    'Usa la misma clave primaria configurada en tu codificador.',\n                    'Mantene abierta esta pestaña mientras transmitis para mantener el enlace.'\n                ],\n                status: {\n                    idle: 'Sin vincular',\n                    linked: 'Conectado'\n                }\n            }\n        },\n        forgot: {\n            title: 'Olvide mi contrasena',\n            emailLabel: 'Email',\n            submit: 'Solicitar',\n            loadingAlt: 'Cargando...'\n        },\n        firebase: {\n            title: 'Firebase Login',\n            usernameLabel: 'Usuario',\n            loadingAlt: 'Cargando...'\n        },\n        terms: {\n            heading: 'Terminos y Condiciones',\n            acceptLabel: 'Acepto estos Terminos y Condiciones'\n        },\n        instructions: {\n            heading: 'Instrucciones',\n            steps: [\n                'Move con las flechas o usando W-A-S-D.',\n                'Utiliza clic izquierdo para seguir un camino; para cambiar de escena debes cruzar el punto de cambio.',\n                'Utiliza clic derecho o TAB para apuntar a enemigos o jugadores cercanos.',\n                'Debes tener un objetivo para ejecutar habilidades.',\n                'Utiliza los botones en pantalla para activar las habilidades del personaje.'\n            ]\n        },\n        gameOver: [\n            'Moriste!',\n            'Solo espera...',\n            'Seras revivido automaticamente para esta demo!'\n        ],\n        viewer: {\n            title: 'Apoya a un streamer',\n            subtitle: 'Elige un canal, mira la partida y usa donaciones SOL para influir en la pelea.',\n            note: 'La integracion blockchain llegara pronto. Esta seccion es un prototipo.',\n            wallet: {\n                title: 'Tu billetera',\n                description: 'Conecta una billetera compatible con SOL mediante ethers.js para simular donaciones.',\n                connectCta: 'Conectar billetera',\n                disconnectCta: 'Desconectar',\n                connected: 'Billetera conectada. Ya puedes prometer donaciones SOL.',\n                disconnected: 'Billetera desconectada.',\n                noProvider: 'No se detecto una billetera Web3. Instala Phantom o MetaMask.',\n                error: 'No se pudo conectar la billetera. Intenta nuevamente.',\n                connectPrompt: 'Conecta tu billetera para habilitar las donaciones.',\n                status: {\n                    idle: 'Estado: desconectado',\n                    connecting: 'Estado: conectando...',\n                    connected: 'Estado: conectado',\n                    error: 'Estado: error'\n                },\n                labels: {\n                    address: 'Direccion',\n                    network: 'Red',\n                    balance: 'Balance'\n                }\n            },\n            viewerCountLabel: '{count} espectadores',\n            streamListTitle: 'Canales en vivo',\n            donations: {\n                buffTitle: 'Donaciones buff',\n                eventTitle: 'Donaciones evento',\n                donateCta: 'Donar {amount} SOL',\n                requiresWallet: 'Conecta tu billetera para activar las donaciones.',\n                success: 'Se registro la donacion {option} para {streamer}. Se ejecutara al recibir {amount} SOL.',\n                buffOptions: [\n                    { id: 'atk-boost', label: 'Impulso Solar', description: 'Aumenta el dano 25% por 3 minutos.', amount: '1' },\n                    { id: 'heal-pulse', label: 'Pulso Guardián', description: 'Recupera 40% de vida y agrega escudo.', amount: '1.5' },\n                    { id: 'speed', label: 'Velocidad del Viento', description: 'Sube la velocidad 35% por 2 minutos.', amount: '0.8' }\n                ],\n                eventOptions: [\n                    { id: 'spawn-elites', label: 'Emboscada Elite', description: 'Invoca tres elites cerca del streamer.', amount: '2' },\n                    { id: 'map-swap', label: 'Portal Aleatorio', description: 'Teletransporta al grupo a un mapa aleatorio.', amount: '3' },\n                    { id: 'boss-challenge', label: 'Llamado del Jefe', description: 'Invoca un jefe errante con botin raro.', amount: '4.5' }\n                ]\n            },\n            streamers: [\n                { id: 'luna-fox', name: 'LunaFox', activity: 'Progresando incursiones nocturnas con la hermandad.', viewers: 842, tags: ['PvE', 'Speedrun'] },\n                { id: 'ember-knight', name: 'EmberKnight', activity: 'Duelos de arena y teoria de builds.', viewers: 613, tags: ['PvP', 'Builds'] },\n                { id: 'nova-mage', name: 'NovaMage', activity: 'Desatando eventos de caos a pedido.', viewers: 455, tags: ['Eventos', 'Co-op'] }\n            ]\n        },\n        playerSelection: {\n            selectLabel: 'Seleccionar Personaje',\n            selectSubmit: 'Iniciar',\n            createTitle: 'Crear Personaje',\n            createNameLabel: 'Nombre',\n            createSubmit: 'Crear y comenzar',\n            loadingAlt: 'Cargando...'\n        },\n        playerCreation: {\n            loadingAlt: 'Cargando...'\n        },\n        footer: 'by DwDeveloper'\n    },\n    vi: {\n        nav: {\n            home: [],\n            streamer: [\n                { route: '/', label: 'Chon vai tro' },\n                { route: '/streamer/login', label: 'Dang nhap' },\n                { route: '/streamer/signup', label: 'Dang ky' },\n                { route: '/streamer/forgot', label: 'Quen mat khau' }\n            ],\n            viewer: [\n                { route: '/', label: 'Quay lai chon vai tro' }\n            ],\n            guest: [\n                { route: '/', label: 'Quay lai chon vai tro' }\n            ]\n        },\n        disclaimer: [\n            'Luu y: Reldens khong chi la mot tro choi, day la nen tang de tao game.',\n            'Ban demo nay giup ban kham pha so luong tinh nang hien co tren nen tang.'\n        ],\n        roles: {\n            title: 'Chon vai tro cua ban',\n            subtitle: 'Quyet dinh cach ban buoc vao the gioi Reldens.',\n            note: 'Tinh nang blockchain dang phat trien. Donates hien chi la mo phong.',\n            cards: [\n                {\n                    key: 'streamer',\n                    route: '/streamer/login',\n                    title: 'Streamer',\n                    icon: 'S',\n                    description: 'Phat truc tiep hanh trinh cua ban va nhan buff tu nguoi xem.',\n                    highlights: [\n                        'Lien ket kenh YouTube de tu dong phat khi dang nhap.',\n                        'Nguoi xem dung SOL de tang suc manh hoac tao su kien.',\n                        'Quan ly tai khoan va tien trinh day du.'\n                    ],\n                    action: 'Toi la streamer'\n                },\n                {\n                    key: 'viewer',\n                    route: '/viewer',\n                    title: 'Viewer',\n                    icon: 'V',\n                    description: 'Theo doi streamer va tac dong tran dau bang donate SOL.',\n                    highlights: [\n                        'Ket noi vi SOL (demo) thong qua ethers.js.',\n                        'Chon buff hoac su kien tu danh sach goi y.',\n                        'Xem truc tiep ngay tren trinh duyet.'\n                    ],\n                    action: 'Vao voi tu cach viewer'\n                },\n                {\n                    key: 'guest',\n                    route: '/guest',\n                    title: 'Guest',\n                    icon: 'G',\n                    description: 'Choi thu ban demo ma khong can tai khoan hay vi.',\n                    highlights: [\n                        'Tao nhan vat tam thoi va vao game ngay.',\n                        'Thu nghiem he thong chien dau va ky nang.',\n                        'Co the nang cap len tai khoan day du sau nay.'\n                    ],\n                    action: 'Choi che do khach'\n                }\n            ],\n            emptyState: 'Dang tai danh sach vai tro. Vui long cho giay lat.'\n        },\n        guest: {\n            title: 'Choi voi tu cach Khach',\n            usernameLabel: 'Ten nguoi choi',\n            submit: 'Bat dau',\n            loadingAlt: 'Dang tai...'\n        },\n        register: {\n            title: 'Tao tai khoan',\n            emailLabel: 'Email',\n            usernameLabel: 'Ten nguoi dung',\n            passwordLabel: 'Mat khau',\n            rePasswordLabel: 'Nhap lai mat khau',\n            termsLink: 'Dong y Dieu khoan va Dieu kien (bam vao day).',\n            submit: 'Dang ky',\n            loadingAlt: 'Dang tai...'\n        },\n        login: {\n            title: 'Dang nhap',\n            usernameLabel: 'Ten nguoi dung',\n            passwordLabel: 'Mat khau',\n            submit: 'Xac nhan',\n            loadingAlt: 'Dang tai...'\n        },\n        streamer: {\n            loginTitle: 'Dang nhap streamer',\n            loginSubtitle: 'Dang nhap va dong bo cong cu stream cua ban.',\n            youtube: {\n                heading: 'Lien ket kenh YouTube',\n                description: 'Nhap URL kenh va stream key de chung toi tu dong bat live khi ban vao game.',\n                fields: {\n                    channelLabel: 'URL kenh',\n                    streamKeyLabel: 'Stream key',\n                    autoStartLabel: 'Tu dong bat stream khi dang nhap'\n                },\n                linkCta: 'Lien ket YouTube',\n                unlinkCta: 'Ngat ket noi',\n                connected: 'Da lien ket kenh. Stream se bat khi ban vao the gioi.',\n                disconnected: 'Da huy lien ket. Tu dong stream bi tat.',\n                helper: 'Stream key chi duoc luu tren thiet bi nay, khong gui len server.',\n                learnMore: 'https://support.google.com/youtube/answer/2474026',\n                learnMoreLabel: 'Huong dan YouTube Live',\n                steps: [\n                    'Kiem tra tai khoan YouTube da bat che do Live.',\n                    'Su dung stream key giong trong phan mem ma ban cau hinh.',\n                    'Giu tab nay mo trong luc phat truc tiep de duy tri ket noi.'\n                ],\n                status: {\n                    idle: 'Chua lien ket',\n                    linked: 'Da ket noi'\n                }\n            }\n        },\n        forgot: {\n            title: 'Quen mat khau',\n            emailLabel: 'Email',\n            submit: 'Gui yeu cau',\n            loadingAlt: 'Dang tai...'\n        },\n        firebase: {\n            title: 'Dang ky qua Firebase',\n            usernameLabel: 'Ten nguoi dung',\n            loadingAlt: 'Dang tai...'\n        },\n        terms: {\n            heading: 'Dieu khoan va Dieu kien',\n            acceptLabel: 'Toi dong y voi Dieu khoan nay'\n        },\n        instructions: {\n            heading: 'Huong dan',\n            steps: [\n                'Di chuyen bang phim mui ten hoac W-A-S-D.',\n                'Click chuot trai de di chuyen, di qua diem chuyen map de sang canh khac.',\n                'Click chuot phai hoac TAB de chon muc tieu gan.',\n                'Can co muc tieu truoc khi tung ky nang.',\n                'Dung cac nut tren man hinh de kich hoat ky nang.'\n            ]\n        },\n        gameOver: [\n            'Ban da nga guc!',\n            'Hay cho trong giay lat...',\n            'Ban se duoc hoi sinh tu dong trong ban demo nay!'\n        ],\n        viewer: {\n            title: 'Ho tro streamer',\n            subtitle: 'Chon kenh, theo doi va dung SOL de tac dong tran dau.',\n            note: 'Tinh nang blockchain se som ra mat. Day la giao dien thu nghiem.',\n            wallet: {\n                title: 'Vi cua ban',\n                description: 'Ket noi vi tuong thich SOL thong qua ethers.js de mo phong donate.',\n                connectCta: 'Ket noi vi',\n                disconnectCta: 'Ngat ket noi',\n                connected: 'Da ket noi vi. Ban co the donate SOL.',\n                disconnected: 'Da ngat ket noi vi.',\n                noProvider: 'Khong tim thay vi Web3. Hay cai dat Phantom hoac MetaMask.',\n                error: 'Khong the ket noi vi. Vui long thu lai.',\n                connectPrompt: 'Hay ket noi vi truoc khi donate.',\n                status: {\n                    idle: 'Trang thai: chua ket noi',\n                    connecting: 'Trang thai: dang ket noi...',\n                    connected: 'Trang thai: da ket noi',\n                    error: 'Trang thai: loi'\n                },\n                labels: {\n                    address: 'Dia chi vi',\n                    network: 'Mang',\n                    balance: 'So du'\n                }\n            },\n            viewerCountLabel: '{count} nguoi dang xem',\n            streamListTitle: 'Kenh dang truc tiep',\n            donations: {\n                buffTitle: 'Donate buff',\n                eventTitle: 'Donate su kien',\n                donateCta: 'Donate {amount} SOL',\n                requiresWallet: 'Ket noi vi de mo khoa tinh nang donate.',\n                success: 'Da ghi nhan goi {option} cho {streamer}. Se kich hoat khi nhan {amount} SOL.',\n                buffOptions: [\n                    { id: 'atk-boost', label: 'Suc manh Mat Troi', description: 'Tang sat thuong 25% trong 3 phut.', amount: '1' },\n                    { id: 'heal-pulse', label: 'Xung Ho Ve', description: 'Hoi 40% HP va nhan la chan bao ve.', amount: '1.5' },\n                    { id: 'speed', label: 'Cuon Gio', description: 'Tang toc do di chuyen 35% trong 2 phut.', amount: '0.8' }\n                ],\n                eventOptions: [\n                    { id: 'spawn-elites', label: 'Phuc kich Tinh Anh', description: 'Trieu hoi 3 quai tinh anh gan streamer.', amount: '2' },\n                    { id: 'map-swap', label: 'Cong Dich Chuyen', description: 'Dua to doi den mot ban do ngau nhien.', amount: '3' },\n                    { id: 'boss-challenge', label: 'Keu goi Tru Boss', description: 'Trieu hoi boss lang thang voi nhieu vat pham hiem.', amount: '4.5' }\n                ]\n            },\n            streamers: [\n                { id: 'luna-fox', name: 'LunaFox', activity: 'Chinh phuc raid dem cung bang hoi.', viewers: 842, tags: ['PvE', 'Speedrun'] },\n                { id: 'ember-knight', name: 'EmberKnight', activity: 'Dau tay doi va phan tich build.', viewers: 613, tags: ['PvP', 'Builds'] },\n                { id: 'nova-mage', name: 'NovaMage', activity: 'Gay hon loan voi cac su kien dot xuat.', viewers: 455, tags: ['Events', 'Co-op'] }\n            ]\n        },\n        playerSelection: {\n            selectLabel: 'Chon nhan vat',\n            selectSubmit: 'Bat dau',\n            createTitle: 'Tao nhan vat',\n            createNameLabel: 'Ten nhan vat',\n            createSubmit: 'Tao va choi',\n            loadingAlt: 'Dang tai...'\n        },\n        playerCreation: {\n            loadingAlt: 'Dang tai...'\n        },\n        footer: 'by DwDeveloper'\n    }\n};\r\n\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","﻿import React, { useMemo, useState } from 'react';\n\nconst LoginPage = ({ copy, variant = 'default' }) => {\n    const labelClass = 'text-sm font-semibold text-slate-200 md:w-40';\n    const inputClass =\n        'required w-full rounded-xl border border-white/15 bg-slate-900/60 px-4 py-3 text-sm text-slate-100 placeholder-slate-400 transition focus:border-sky-400 focus:outline-none focus:ring-2 focus:ring-sky-500/40';\n\n    const isStreamerMode = variant === 'streamer';\n    const streamerCopy = copy.streamer || {};\n    const youtubeCopy = streamerCopy.youtube || {};\n    const hasYoutubeConfig = isStreamerMode && Object.keys(youtubeCopy).length > 0;\n\n    const loginTitle = isStreamerMode && streamerCopy.loginTitle ? streamerCopy.loginTitle : copy.login.title;\n    const loginSubtitle = isStreamerMode ? streamerCopy.loginSubtitle : null;\n\n    const [youtubeStatus, setYoutubeStatus] = useState('idle');\n    const [youtubeMessage, setYoutubeMessage] = useState('');\n\n    const youtubeStatusLabel = useMemo(() => {\n        if (!hasYoutubeConfig) {\n            return '';\n        }\n        return youtubeCopy.status?.[youtubeStatus] || youtubeCopy.status?.idle || '';\n    }, [hasYoutubeConfig, youtubeCopy.status, youtubeStatus]);\n\n    const handleYoutubeConnect = (event) => {\n        event.preventDefault();\n        if (!hasYoutubeConfig) {\n            return;\n        }\n        if (youtubeStatus === 'linked') {\n            setYoutubeStatus('idle');\n            setYoutubeMessage(youtubeCopy.disconnected || 'YouTube channel disconnected.');\n            return;\n        }\n        setYoutubeStatus('linked');\n        setYoutubeMessage(youtubeCopy.connected || 'YouTube channel linked. Streaming will auto-start.');\n    };\n\n    const youtubeBadgeClasses = youtubeStatus === 'linked'\n        ? 'inline-flex items-center rounded-full border border-emerald-400/60 bg-emerald-500/20 px-3 py-1 text-xs font-semibold text-emerald-200'\n        : 'inline-flex items-center rounded-full border border-white/20 bg-white/10 px-3 py-1 text-xs font-semibold text-slate-200';\n\n    const youtubeButtonLabel = youtubeStatus === 'linked'\n        ? youtubeCopy.unlinkCta || 'Disconnect'\n        : youtubeCopy.linkCta || 'Link YouTube';\n\n    return (\n        <div className=\"row row-1 w-full !max-w-none !bg-transparent !p-0 !shadow-none\">\n            <div className=\"grid w-full gap-6 xl:grid-cols-[1.05fr,_0.95fr]\">\n                <form\n                    name=\"login-form\"\n                    id=\"login-form\"\n                    className=\"login-form space-y-5 rounded-2xl border border-white/10 bg-slate-900/60 p-6 shadow-xl backdrop-blur\"\n                    action=\"#\"\n                    method=\"post\"\n                >\n                    <div className=\"flex flex-col gap-2\">\n                        <h3 className=\"form-title text-left text-2xl font-semibold text-white\">{loginTitle}</h3>\n                        {loginSubtitle && <p className=\"text-sm text-slate-300\">{loginSubtitle}</p>}\n                    </div>\n                    <div className=\"input-box login-username flex flex-col gap-3 md:flex-row md:items-center md:justify-between\">\n                        <label htmlFor=\"username\" className={labelClass}>\n                            {copy.login.usernameLabel}\n                        </label>\n                        <input\n                            type=\"text\"\n                            name=\"username\"\n                            id=\"username\"\n                            className={inputClass}\n                            required\n                            autoComplete=\"on\"\n                        />\n                    </div>\n                    <div className=\"input-box login-password flex flex-col gap-3 md:flex-row md:items-center md:justify-between\">\n                        <label htmlFor=\"password\" className={labelClass}>\n                            {copy.login.passwordLabel}\n                        </label>\n                        <input type=\"password\" name=\"password\" id=\"password\" className={inputClass} required />\n                    </div>\n                    <div className=\"input-box submit-container login-submit flex items-center justify-end gap-3\">\n                        <div className=\"loading-container hidden\">\n                            <img src=\"./assets/web/loading.gif\" alt={copy.login.loadingAlt} />\n                        </div>\n                        <input\n                            type=\"submit\"\n                            value={copy.login.submit}\n                            className=\"rounded-full bg-sky-500 px-6 py-2 font-semibold text-white shadow-lg shadow-sky-500/30 transition hover:bg-sky-400\"\n                        />\n                    </div>\n                    <div className=\"input-box response-error text-sm text-rose-400\"></div>\n                </form>\n                <div className=\"flex flex-col gap-6\">\n                    {hasYoutubeConfig && (\n                        <section className=\"space-y-5 rounded-2xl border border-white/10 bg-slate-900/60 p-6 shadow-xl backdrop-blur\">\n                            <div className=\"flex flex-col gap-2\">\n                                <div className=\"flex items-center justify-between gap-3\">\n                                    <h3 className=\"text-xl font-semibold text-white\">{youtubeCopy.heading}</h3>\n                                    {youtubeStatusLabel && <span className={youtubeBadgeClasses}>{youtubeStatusLabel}</span>}\n                                </div>\n                                {youtubeCopy.description && (\n                                    <p className=\"text-sm text-slate-300\">{youtubeCopy.description}</p>\n                                )}\n                            </div>\n                            <form className=\"space-y-4\" onSubmit={handleYoutubeConnect}>\n                                <div className=\"flex flex-col gap-2 text-sm text-slate-200\">\n                                    <label htmlFor=\"youtube-channel\" className=\"font-semibold\">\n                                        {youtubeCopy.fields?.channelLabel}\n                                    </label>\n                                    <input\n                                        type=\"url\"\n                                        id=\"youtube-channel\"\n                                        name=\"youtube-channel\"\n                                        className={inputClass}\n                                        placeholder=\"https://youtube.com/@your-channel\"\n                                        required\n                                    />\n                                </div>\n                                <div className=\"flex flex-col gap-2 text-sm text-slate-200\">\n                                    <label htmlFor=\"youtube-stream-key\" className=\"font-semibold\">\n                                        {youtubeCopy.fields?.streamKeyLabel}\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"youtube-stream-key\"\n                                        name=\"youtube-stream-key\"\n                                        className={inputClass}\n                                        placeholder=\"STREAM-XXXX-YYYY-ZZZZ\"\n                                        required\n                                    />\n                                </div>\n                                <div className=\"flex items-center gap-2 text-sm text-slate-200\">\n                                    <input\n                                        type=\"checkbox\"\n                                        id=\"youtube-auto-start\"\n                                        name=\"youtube-auto-start\"\n                                        className=\"h-4 w-4 rounded border-white/30 bg-slate-900/70 text-sky-500 focus:ring-sky-500/50\"\n                                        defaultChecked\n                                    />\n                                    <label htmlFor=\"youtube-auto-start\" className=\"cursor-pointer select-none\">\n                                        {youtubeCopy.fields?.autoStartLabel}\n                                    </label>\n                                </div>\n                                <div className=\"flex items-center justify-between gap-3\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"inline-flex items-center justify-center rounded-full bg-rose-500 px-5 py-2 text-sm font-semibold text-white shadow-lg shadow-rose-500/30 transition hover:bg-rose-400\"\n                                    >\n                                        {youtubeButtonLabel}\n                                    </button>\n                                    {youtubeCopy.learnMore && (\n                                        <a\n                                            className=\"text-xs font-semibold uppercase tracking-wide text-slate-300 hover:text-white hover:underline\"\n                                            href={youtubeCopy.learnMore}\n                                            target=\"_blank\"\n                                            rel=\"noreferrer\"\n                                        >\n                                            {youtubeCopy.learnMoreLabel || 'Docs'}\n                                        </a>\n                                    )}\n                                </div>\n                            </form>\n                            {Array.isArray(youtubeCopy.steps) && youtubeCopy.steps.length > 0 && (\n                                <ul className=\"space-y-2 text-xs text-slate-400\">\n                                    {youtubeCopy.steps.map((step) => (\n                                        <li key={step} className=\"flex items-start gap-2\">\n                                            <span className=\"mt-1 inline-block h-2 w-2 rounded-full bg-rose-400\"></span>\n                                            <span>{step}</span>\n                                        </li>\n                                    ))}\n                                </ul>\n                            )}\n                            {youtubeMessage && (\n                                <div className=\"rounded-2xl border border-sky-400/40 bg-sky-500/10 p-3 text-xs text-sky-100\">\n                                    {youtubeMessage}\n                                </div>\n                            )}\n                            {youtubeCopy.helper && (\n                                <p className=\"text-xs text-slate-400\">{youtubeCopy.helper}</p>\n                            )}\n                        </section>\n                    )}\n                    <div className=\"row row-2 firebase-row-container hidden !max-w-none !bg-slate-900/60 !p-6 !shadow-xl space-y-4 rounded-2xl border border-white/10 backdrop-blur\">\n                        <form name=\"firebase-login\" id=\"firebase-login\" className=\"firebase-login space-y-4\" action=\"#\" method=\"post\">\n                            <h3 className=\"form-title text-xl font-semibold text-white\">{copy.firebase.title}</h3>\n                            <div className=\"input-box firebase-username flex flex-col gap-2 text-sm text-slate-200\">\n                                <label htmlFor=\"firebase-username\" className=\"font-semibold\">\n                                    {copy.firebase.usernameLabel}\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"firebase-username\"\n                                    id=\"firebase-username\"\n                                    className={inputClass}\n                                    required\n                                />\n                            </div>\n                            <div className=\"input-box response-error text-sm text-rose-400\"></div>\n                        </form>\n                        <div className=\"firebase-container flex flex-1 items-center justify-center rounded-xl border border-dashed border-white/20 bg-slate-900/30 p-4\">\n                            <div id=\"firebaseui-auth-container\" className=\"w-full\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPage;\r\n","import React from 'react';\r\n\r\nconst SignupPage = ({ copy }) => {\r\n    const labelClass = 'text-sm font-semibold text-slate-200 md:w-44';\r\n    const inputClass =\r\n        'required w-full rounded-xl border border-white/15 bg-slate-900/60 px-4 py-3 text-sm text-slate-100 placeholder-slate-400 transition focus:border-sky-400 focus:outline-none focus:ring-2 focus:ring-sky-500/40';\r\n\r\n    return (\r\n        <div className=\"row row-1 w-full !max-w-none !bg-transparent !p-0 !shadow-none\">\r\n            <form\r\n                name=\"register-form\"\r\n                id=\"register-form\"\r\n                className=\"register-form mx-auto w-full max-w-3xl space-y-5 rounded-2xl border border-white/10 bg-slate-900/60 p-6 shadow-xl backdrop-blur\"\r\n                action=\"#\"\r\n                method=\"post\"\r\n            >\r\n                <h3 className=\"form-title text-left text-2xl font-semibold text-white\">{copy.register.title}</h3>\r\n                <div className=\"input-box reg-email flex flex-col gap-3 md:flex-row md:items-center md:justify-between\">\r\n                    <label htmlFor=\"reg-email\" className={labelClass}>\r\n                        {copy.register.emailLabel}\r\n                    </label>\r\n                    <input type=\"email\" name=\"reg-email\" id=\"reg-email\" className={inputClass} required />\r\n                </div>\r\n                <div className=\"input-box reg-username flex flex-col gap-3 md:flex-row md:items-center md:justify-between\">\r\n                    <label htmlFor=\"reg-username\" className={labelClass}>\r\n                        {copy.register.usernameLabel}\r\n                    </label>\r\n                    <input type=\"text\" name=\"reg-username\" id=\"reg-username\" className={inputClass} required />\r\n                </div>\r\n                <div className=\"input-box reg-password flex flex-col gap-3 md:flex-row md:items-center md:justify-between\">\r\n                    <label htmlFor=\"reg-password\" className={labelClass}>\r\n                        {copy.register.passwordLabel}\r\n                    </label>\r\n                    <input type=\"password\" name=\"reg-password\" id=\"reg-password\" className={inputClass} required />\r\n                </div>\r\n                <div className=\"input-box reg-re-password flex flex-col gap-3 md:flex-row md:items-center md:justify-between\">\r\n                    <label htmlFor=\"reg-re-password\" className={labelClass}>\r\n                        {copy.register.rePasswordLabel}\r\n                    </label>\r\n                    <input type=\"password\" name=\"reg-re-password\" id=\"reg-re-password\" className={inputClass} required />\r\n                </div>\r\n                <div className=\"input-box hidden terms-and-conditions-link-container justify-end\">\r\n                    <p className=\"terms-and-conditions-link cursor-pointer text-sm text-slate-300 underline\">\r\n                        {copy.register.termsLink}\r\n                    </p>\r\n                </div>\r\n                <div className=\"input-box submit-container reg-submit flex items-center justify-end gap-3\">\r\n                    <div className=\"loading-container hidden\">\r\n                        <img src=\"./assets/web/loading.gif\" alt={copy.register.loadingAlt} />\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value={copy.register.submit}\r\n                        className=\"rounded-full bg-sky-500 px-6 py-2 font-semibold text-white shadow-lg shadow-sky-500/30 transition hover:bg-sky-400\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-box response-error text-sm text-rose-400\"></div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n","import React from 'react';\r\n\r\nconst GuestPage = ({ copy }) => {\r\n    const labelClass = 'text-sm font-semibold text-slate-200 md:w-48';\r\n    const inputClass =\r\n        'required w-full rounded-xl border border-white/15 bg-slate-900/60 px-4 py-3 text-sm text-slate-100 placeholder-slate-400 transition focus:border-sky-400 focus:outline-none focus:ring-2 focus:ring-sky-500/40';\r\n\r\n    return (\r\n        <div className=\"row row-0 w-full !max-w-xl !bg-transparent !p-0 !shadow-none\">\r\n            <form\r\n                name=\"guest-form\"\r\n                id=\"guest-form\"\r\n                className=\"guest-form w-full space-y-5 rounded-2xl border border-white/10 bg-slate-900/60 p-6 shadow-xl backdrop-blur\"\r\n                action=\"#\"\r\n                method=\"post\"\r\n            >\r\n                <h3 className=\"form-title text-center text-2xl font-semibold text-white md:text-left\">{copy.guest.title}</h3>\r\n                <div className=\"input-box guest-username flex flex-col gap-3 md:flex-row md:items-center md:justify-between\">\r\n                    <label htmlFor=\"guest-username\" className={labelClass}>\r\n                        {copy.guest.usernameLabel}\r\n                    </label>\r\n                    <input type=\"text\" name=\"guest-username\" id=\"guest-username\" className={inputClass} required />\r\n                </div>\r\n                <div className=\"input-box submit-container guest-submit flex items-center justify-center gap-3 md:justify-end\">\r\n                    <div className=\"loading-container hidden\">\r\n                        <img src=\"./assets/web/loading.gif\" alt={copy.guest.loadingAlt} />\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value={copy.guest.submit}\r\n                        className=\"rounded-full bg-sky-500 px-6 py-2 font-semibold text-white shadow-lg shadow-sky-500/30 transition hover:bg-sky-400\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-box response-error text-sm text-rose-400\"></div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GuestPage;\r\n","import React from 'react';\r\n\r\nconst ForgotPasswordPage = ({ copy }) => {\r\n    const labelClass = 'text-sm font-semibold text-slate-200 md:w-44';\r\n    const inputClass = 'required w-full rounded-xl border border-white/15 bg-slate-900/60 px-4 py-3 text-sm text-slate-100 placeholder-slate-400 transition focus:border-sky-400 focus:outline-none focus:ring-2 focus:ring-sky-500/40';\r\n\r\n    return (\r\n        <div className=\"row row-2 forgot-password-container w-full !max-w-xl !bg-transparent !p-0 !shadow-none\">\r\n            <form\r\n                name=\"forgot-form\"\r\n                id=\"forgot-form\"\r\n                className=\"forgot-form w-full space-y-5 rounded-2xl border border-white/10 bg-slate-900/60 p-6 shadow-xl backdrop-blur\"\r\n                action=\"#\"\r\n                method=\"post\"\r\n            >\r\n                <h3 className=\"form-title text-center text-2xl font-semibold text-white md:text-left\">{copy.forgot.title}</h3>\r\n                <div className=\"input-box forgot-email flex flex-col gap-3 md:flex-row md:items-center md:justify-between\">\r\n                    <label htmlFor=\"forgot-email\" className={labelClass}>\r\n                        {copy.forgot.emailLabel}\r\n                    </label>\r\n                    <input type=\"email\" name=\"forgot-email\" id=\"forgot-email\" className={inputClass} required />\r\n                </div>\r\n                <div className=\"input-box submit-container forgot-submit flex items-center justify-end gap-3\">\r\n                    <div className=\"loading-container hidden\">\r\n                        <img src=\"./assets/web/loading.gif\" alt={copy.forgot.loadingAlt} />\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value={copy.forgot.submit}\r\n                        className=\"rounded-full bg-sky-500 px-6 py-2 font-semibold text-white shadow-lg shadow-sky-500/30 transition hover:bg-sky-400\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-box response-error text-sm text-rose-400\"></div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n","import React from 'react';\r\n\r\nconst RoleSelectionPage = ({ copy, onSelect }) => {\r\n    const rolesCopy = copy?.roles || {};\r\n    const cards = Array.isArray(rolesCopy.cards) ? rolesCopy.cards : [];\r\n\r\n    const handleSelect = (route) => {\r\n        if (typeof onSelect === 'function') {\r\n            onSelect(route);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full\">\r\n            <header className=\"mx-auto max-w-3xl text-center\">\r\n                <h2 className=\"text-3xl font-semibold text-white md:text-4xl\">{rolesCopy.title}</h2>\r\n                {rolesCopy.subtitle && (\r\n                    <p className=\"mt-3 text-sm text-slate-300 md:text-base\">{rolesCopy.subtitle}</p>\r\n                )}\r\n            </header>\r\n            <div className=\"mt-10 grid w-full gap-6 lg:grid-cols-3\">\r\n                {cards.length > 0 ? (\r\n                    cards.map((card) => (\r\n                        <article\r\n                            key={card.key || card.route}\r\n                            className=\"flex h-full flex-col justify-between rounded-3xl border border-white/10 bg-slate-900/60 p-6 shadow-xl backdrop-blur transition hover:-translate-y-1 hover:border-sky-400 hover:shadow-sky-500/20\"\r\n                        >\r\n                            <div>\r\n                                <div className=\"flex items-center gap-3\">\r\n                                    <span className=\"inline-flex h-10 w-10 items-center justify-center rounded-full bg-sky-500/20 text-sky-300\">\r\n                                        {card.icon || '*'}\r\n                                    </span>\r\n                                    <h3 className=\"text-xl font-semibold text-white\">{card.title}</h3>\r\n                                </div>\r\n                                {card.description && (\r\n                                    <p className=\"mt-4 text-sm text-slate-300\">{card.description}</p>\r\n                                )}\r\n                                {Array.isArray(card.highlights) && card.highlights.length > 0 && (\r\n                                    <ul className=\"mt-4 space-y-2 text-sm text-slate-300\">\r\n                                        {card.highlights.map((highlight) => (\r\n                                            <li key={highlight} className=\"flex items-start gap-2\">\r\n                                                <span className=\"mt-1 inline-block h-2 w-2 rounded-full bg-sky-400\"></span>\r\n                                                <span>{highlight}</span>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"mt-6 inline-flex items-center justify-center rounded-full bg-sky-500 px-6 py-2 text-sm font-semibold text-white shadow-lg shadow-sky-500/30 transition hover:bg-sky-400\"\r\n                                onClick={() => handleSelect(card.route || '/streamer/login')}\r\n                            >\r\n                                {card.action}\r\n                            </button>\r\n                        </article>\r\n                    ))\r\n                ) : (\r\n                    <div className=\"col-span-full rounded-3xl border border-white/10 bg-slate-900/60 p-6 text-center text-sm text-slate-300\">\r\n                        {rolesCopy.emptyState || 'No roles available right now.'}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {rolesCopy.note && (\r\n                <p className=\"mt-8 text-center text-xs text-slate-400\">{rolesCopy.note}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoleSelectionPage;\r\n","﻿import React, { useMemo, useRef, useState } from \"react\";\nimport { BrowserProvider, formatEther } from \"ethers\";\n\nconst shortenAddress = (value) => {\n    if (!value || value.length <= 10) {\n        return value || '';\n    }\n    return `${value.slice(0, 6)}...${value.slice(-4)}`;\n};\n\nconst ViewerPage = ({ copy }) => {\n    const viewerCopy = copy?.viewer || {};\n    const walletCopy = viewerCopy.wallet || {};\n    const donationCopy = viewerCopy.donations || {};\n\n    const streamers = useMemo(() => {\n        if (Array.isArray(viewerCopy.streamers) && viewerCopy.streamers.length > 0) {\n            return viewerCopy.streamers;\n        }\n        return [\n            { id: 'luna-fox', name: 'LunaFox', activity: 'Exploring the Lost Forest', viewers: 842, tags: ['PvE', 'Speedrun'] },\n            { id: 'ember-knight', name: 'EmberKnight', activity: 'Arena runs and gear checks', viewers: 613, tags: ['PvP', 'Builds'] },\n            { id: 'nova-mage', name: 'NovaMage', activity: 'Summoning chaos events', viewers: 455, tags: ['Events', 'Co-op'] }\n        ];\n    }, [viewerCopy.streamers]);\n\n    const buffOptions = Array.isArray(donationCopy.buffOptions) ? donationCopy.buffOptions : [];\n    const eventOptions = Array.isArray(donationCopy.eventOptions) ? donationCopy.eventOptions : [];\n\n    const providerRef = useRef(null);\n    const [wallet, setWallet] = useState({ address: '', balance: '', network: '' });\n    const [status, setStatus] = useState('idle');\n    const [feedback, setFeedback] = useState('');\n\n    const viewerCountLabel = (count) => {\n        const template = viewerCopy.viewerCountLabel || '{count} viewers';\n        return template.replace('{count}', Number(count || 0).toLocaleString());\n    };\n\n    const formatDonationCta = (option) => {\n        const template = donationCopy.donateCta || 'Donate {amount} SOL';\n        return template.replace('{amount}', option.amount);\n    };\n\n    const handleDonate = (streamer, option) => {\n        if (status !== 'connected') {\n            setFeedback(donationCopy.requiresWallet || walletCopy.connectPrompt || 'Please connect your wallet before donating.');\n            return;\n        }\n        const template = donationCopy.success || 'Request {option} for {streamer} registered. It will trigger once {amount} SOL is received.';\n        const message = template\n            .replace('{option}', option.label)\n            .replace('{streamer}', streamer.name)\n            .replace('{amount}', option.amount);\n        setFeedback(message);\n    };\n\n    const connectWallet = async () => {\n        setFeedback('');\n        if (typeof window === 'undefined' || !window.ethereum) {\n            setFeedback(walletCopy.noProvider || 'No Web3 wallet detected in your browser.');\n            return;\n        }\n        try {\n            setStatus('connecting');\n            const browserProvider = new BrowserProvider(window.ethereum);\n            const accounts = await browserProvider.send('eth_requestAccounts', []);\n            const address = accounts?.[0] || '';\n            const network = await browserProvider.getNetwork();\n            let balance = '0';\n            if (address) {\n                const rawBalance = await browserProvider.getBalance(address);\n                balance = formatEther(rawBalance);\n            }\n            providerRef.current = browserProvider;\n            setWallet({\n                address,\n                balance,\n                network: network?.name || `chain-${network?.chainId ?? ''}`\n            });\n            setStatus('connected');\n            setFeedback(walletCopy.connected || 'Wallet connected. You can donate now.');\n        } catch (error) {\n            console.error('Wallet connect error:', error);\n            setStatus('error');\n            setFeedback(walletCopy.error || 'Could not connect wallet. Please try again.');\n        }\n    };\n\n    const disconnectWallet = () => {\n        providerRef.current = null;\n        setWallet({ address: '', balance: '', network: '' });\n        setStatus('idle');\n        setFeedback(walletCopy.disconnected || 'Wallet disconnected.');\n    };\n\n    const statusLabel = walletCopy.status?.[status] || walletCopy.status?.idle || '';\n\n    return (\n        <div className=\"w-full\">\n            <header className=\"mx-auto max-w-3xl text-center\">\n                <h2 className=\"text-3xl font-semibold text-white md:text-4xl\">{viewerCopy.title}</h2>\n                {viewerCopy.subtitle && (\n                    <p className=\"mt-3 text-sm text-slate-300 md:text-base\">{viewerCopy.subtitle}</p>\n                )}\n                {viewerCopy.note && (\n                    <p className=\"mt-2 text-xs uppercase tracking-wide text-slate-400\">{viewerCopy.note}</p>\n                )}\n            </header>\n            <section className=\"mt-8 w-full rounded-3xl border border-white/10 bg-slate-900/60 p-6 shadow-xl backdrop-blur\">\n                <div className=\"flex flex-col gap-6 md:flex-row md:items-center md:justify-between\">\n                    <div>\n                        <h3 className=\"text-xl font-semibold text-white\">{walletCopy.title}</h3>\n                        {walletCopy.description && (\n                            <p className=\"mt-2 text-sm text-slate-300\">{walletCopy.description}</p>\n                        )}\n                        {statusLabel && (\n                            <p className=\"mt-3 text-xs uppercase tracking-wide text-sky-300\">{statusLabel}</p>\n                        )}\n                    </div>\n                    <div className=\"flex gap-3\">\n                        {status === 'connected' ? (\n                            <button\n                                type=\"button\"\n                                className=\"rounded-full border border-rose-400/40 bg-rose-500/20 px-5 py-2 text-sm font-semibold text-rose-200 transition hover:bg-rose-500/30\"\n                                onClick={disconnectWallet}\n                            >\n                                {walletCopy.disconnectCta || 'Disconnect'}\n                            </button>\n                        ) : (\n                            <button\n                                type=\"button\"\n                                className=\"rounded-full bg-emerald-500 px-5 py-2 text-sm font-semibold text-white shadow-lg shadow-emerald-500/30 transition hover:bg-emerald-400\"\n                                onClick={connectWallet}\n                            >\n                                {walletCopy.connectCta || 'Connect wallet'}\n                            </button>\n                        )}\n                    </div>\n                </div>\n                {wallet.address && (\n                    <dl className=\"mt-6 grid gap-4 rounded-2xl border border-white/10 bg-slate-900/80 p-4 text-sm text-slate-200 md:grid-cols-3\">\n                        <div>\n                            <dt className=\"text-xs uppercase tracking-wide text-slate-400\">{walletCopy.labels?.address || 'Address'}</dt>\n                            <dd className=\"mt-1 font-mono text-sm\">{shortenAddress(wallet.address)}</dd>\n                        </div>\n                        <div>\n                            <dt className=\"text-xs uppercase tracking-wide text-slate-400\">{walletCopy.labels?.network || 'Network'}</dt>\n                            <dd className=\"mt-1 text-sm capitalize\">{wallet.network}</dd>\n                        </div>\n                        <div>\n                            <dt className=\"text-xs uppercase tracking-wide text-slate-400\">{walletCopy.labels?.balance || 'Balance'}</dt>\n                            <dd className=\"mt-1 text-sm\">{Number(wallet.balance || 0).toFixed(4)} SOL</dd>\n                        </div>\n                    </dl>\n                )}\n            </section>\n            {feedback && (\n                <div className=\"mt-6 w-full rounded-3xl border border-sky-400/40 bg-sky-500/10 p-4 text-sm text-sky-100\">\n                    {feedback}\n                </div>\n            )}\n            <section className=\"mt-8 w-full space-y-6\">\n                <h3 className=\"text-xl font-semibold text-white\">{viewerCopy.streamListTitle}</h3>\n                <div className=\"space-y-6\">\n                    {streamers.map((streamer) => (\n                        <article\n                            key={streamer.id}\n                            className=\"rounded-3xl border border-white/10 bg-slate-900/60 p-6 shadow-xl backdrop-blur\"\n                        >\n                            <div className=\"flex flex-col gap-4 md:flex-row md:items-start md:justify-between\">\n                                <div>\n                                    <div className=\"flex items-center gap-3\">\n                                        <span className=\"inline-flex h-10 w-10 items-center justify-center rounded-full bg-sky-500/20 text-xs font-semibold text-sky-200\">\n                                            LIVE\n                                        </span>\n                                        <div>\n                                            <h4 className=\"text-lg font-semibold text-white\">{streamer.name}</h4>\n                                            <p className=\"text-sm text-slate-300\">{streamer.activity}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"mt-3 flex flex-wrap items-center gap-2 text-xs text-slate-400\">\n                                        <span className=\"rounded-full bg-white/5 px-3 py-1 text-slate-200\">\n                                            {viewerCountLabel(streamer.viewers)}\n                                        </span>\n                                        {Array.isArray(streamer.tags) &&\n                                            streamer.tags.map((tag) => (\n                                                <span key={tag} className=\"rounded-full bg-white/5 px-3 py-1\">\n                                                    #{tag}\n                                                </span>\n                                            ))}\n                                    </div>\n                                </div>\n                                <div className=\"grid w-full gap-4 md:max-w-md\">\n                                    <div className=\"rounded-2xl border border-white/10 bg-slate-900/70 p-4\">\n                                        <h5 className=\"text-sm font-semibold text-sky-200\">{donationCopy.buffTitle}</h5>\n                                        {buffOptions.length > 0 ? (\n                                            <ul className=\"mt-3 space-y-3 text-sm text-slate-200\">\n                                                {buffOptions.map((option) => (\n                                                    <li key={option.id} className=\"flex flex-col gap-2 rounded-xl border border-white/10 bg-slate-900/60 p-3 md:flex-row md:items-center md:justify-between\">\n                                                        <div>\n                                                            <p className=\"font-semibold text-white\">{option.label}</p>\n                                                            {option.description && (\n                                                                <p className=\"text-xs text-slate-400\">{option.description}</p>\n                                                            )}\n                                                        </div>\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"inline-flex items-center justify-center rounded-full bg-sky-500 px-3 py-2 text-xs font-semibold uppercase tracking-wide text-white shadow-lg shadow-sky-500/30 transition hover:bg-sky-400\"\n                                                            onClick={() => handleDonate(streamer, option)}\n                                                        >\n                                                            {formatDonationCta(option)}\n                                                        </button>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        ) : (\n                                            <p className=\"mt-3 text-xs text-slate-400\">{donationCopy.emptyBuffs || 'Buff options will appear here soon.'}</p>\n                                        )}\n                                    </div>\n                                    <div className=\"rounded-2xl border border-white/10 bg-slate-900/70 p-4\">\n                                        <h5 className=\"text-sm font-semibold text-amber-200\">{donationCopy.eventTitle}</h5>\n                                        {eventOptions.length > 0 ? (\n                                            <ul className=\"mt-3 space-y-3 text-sm text-slate-200\">\n                                                {eventOptions.map((option) => (\n                                                    <li key={option.id} className=\"flex flex-col gap-2 rounded-xl border border-white/10 bg-slate-900/60 p-3 md:flex-row md:items-center md:justify-between\">\n                                                        <div>\n                                                            <p className=\"font-semibold text-white\">{option.label}</p>\n                                                            {option.description && (\n                                                                <p className=\"text-xs text-slate-400\">{option.description}</p>\n                                                            )}\n                                                        </div>\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"inline-flex items-center justify-center rounded-full bg-amber-500 px-3 py-2 text-xs font-semibold uppercase tracking-wide text-slate-900 shadow-lg shadow-amber-500/30 transition hover:bg-amber-400\"\n                                                            onClick={() => handleDonate(streamer, option)}\n                                                        >\n                                                            {formatDonationCta(option)}\n                                                        </button>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        ) : (\n                                            <p className=\"mt-3 text-xs text-slate-400\">{donationCopy.emptyEvents || 'Event options will appear here soon.'}</p>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </article>\n                    ))}\n                </div>\n            </section>\n        </div>\n    );\n};\n\nexport default ViewerPage;\r\n","/**\r\n *\r\n * Reldens - GameManager\r\n *\r\n */\r\n\r\nconst { GameClient } = require('./game-client');\r\nconst { GameEngine } = require('./game-engine');\r\nconst { RoomEvents } = require('./room-events');\r\nconst { ClientStartHandler } = require('./handlers/client-start-handler');\r\nconst { FeaturesManager } = require('../../features/client/manager');\r\nconst { FirebaseConnector } = require('../../firebase/client/connector');\r\nconst { ConfigManager } = require('../../config/client/config-manager');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst Translations = require('./snippets/en_US');\r\nconst { GameDom } = require('./game-dom');\r\nconst { RoomsConst } = require('../../rooms/constants');\r\nconst { GameConst } = require('../constants');\r\nconst { ErrorManager, EventsManagerSingleton, Logger, sc } = require('@reldens/utils');\r\nconst PackageData = require('../../../package.json');\r\n\r\nclass GameManager\r\n{\r\n\r\n    constructor()\r\n    {\r\n        // @NOTE: the game engine will be initialized after the user logged in the game that way we will get the full\r\n        // game configuration from the server when the game starts.\r\n        this.gameEngine = false;\r\n        /** @type {?RoomEvents} */\r\n        this.activeRoomEvents = null; // active room is the currently connected server room\r\n        this.events = EventsManagerSingleton;\r\n        /** @type {GameDom} */\r\n        this.gameDom = GameDom;\r\n        /** @type {ConfigManager} */\r\n        this.config = new ConfigManager();\r\n        let initialConfig = this.gameDom.getWindow()?.reldensInitialConfig || {};\r\n        sc.deepMergeProperties(this.config, initialConfig);\r\n        this.features = new FeaturesManager({gameManager: this, events: this.events});\r\n        this.firebase = new FirebaseConnector(this);\r\n        this.joinedRooms = {};\r\n        this.userData = {};\r\n        this.plugins = {};\r\n        this.services = {};\r\n        this.elements = {};\r\n        this.playerData = false;\r\n        this.gameOver = false;\r\n        this.forcedDisconnection = false;\r\n        this.isChangingScene = false;\r\n        this.canInitEngine = true;\r\n        this.appServerUrl = '';\r\n        this.gameServerUrl = '';\r\n        this.locale = '';\r\n        TranslationsMapper.forConfig(this.config.client, Translations, GameConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    setupCustomClientPlugin(customPluginKey, customPlugin)\r\n    {\r\n        this.plugins[customPluginKey] = new customPlugin();\r\n        this.plugins[customPluginKey].setup({gameManager: this, events: this.events});\r\n    }\r\n\r\n    clientStart()\r\n    {\r\n        this.events.emitSync('reldens.clientStartBefore', this);\r\n        this.startHandler = new ClientStartHandler(this);\r\n        this.startHandler.clientStart();\r\n    }\r\n\r\n    async startGame(formData, isNewUser)\r\n    {\r\n        this.events.emitSync('reldens.startGameBefore', this);\r\n        let gameRoom = await this.joinGame(formData, isNewUser);\r\n        if(gameRoom){\r\n            this.handleLoginSuccess();\r\n            return true;\r\n        }\r\n        this.handleLoginError(formData);\r\n        return false;\r\n    }\r\n\r\n    handleLoginSuccess()\r\n    {\r\n        let body = this.gameDom.getElement(GameConst.SELECTORS.BODY);\r\n        body.classList.add(GameConst.CLASSES.GAME_STARTED);\r\n        body.classList.remove(GameConst.CLASSES.GAME_ERROR);\r\n        this.gameDom.getElement(GameConst.SELECTORS.FORMS_CONTAINER).remove();\r\n        this.events.emitSync('reldens.startGameAfter', this);\r\n    }\r\n\r\n    handleLoginError(formData)\r\n    {\r\n        let body = this.gameDom.getElement(GameConst.SELECTORS.BODY);\r\n        body.classList.remove(GameConst.CLASSES.GAME_STARTED);\r\n        body.classList.add(GameConst.CLASSES.GAME_ERROR);\r\n        // @NOTE: game room errors should be always because some wrong login or registration data. For these cases\r\n        // we will check the isNewUser variable to know where display the error.\r\n        this.submitedForm = false;\r\n        this.events.emitSync('reldens.gameRoomError', this);\r\n        // @TODO - BETA - Move to firebase plugin with an event subscriber.\r\n        if(this.firebase && 'firebase-login' === formData.formId){\r\n            this.firebase.app.auth().signOut();\r\n        }\r\n    }\r\n\r\n    async joinGame(formData, isNewUser = false)\r\n    {\r\n        // reset the user data in the object in case another form was used before:\r\n        this.userData = {};\r\n        await this.events.emit('reldens.beforeJoinGame', {gameManager: this, formData, isNewUser});\r\n        this.mapFormDataToUserData(formData, isNewUser);\r\n        // join initial game room, since we return the promise we don't need to catch the error here:\r\n        this.gameRoom = await this.gameClient.joinOrCreate(GameConst.ROOM_GAME, this.userData);\r\n        if(!this.gameRoom){\r\n            this.displayFormError('#'+formData.formId, this.gameClient.lastErrorMessage);\r\n            return false;\r\n        }\r\n        await this.events.emit('reldens.beforeJoinGameRoom', this.gameRoom);\r\n        this.handleGameRoomMessages();\r\n        this.activateResponsiveBehavior();\r\n        return this.gameRoom;\r\n    }\r\n\r\n    mapFormDataToUserData(formData, isNewUser)\r\n    {\r\n        if(sc.hasOwn(formData, 'forgot')){\r\n            this.userData.forgot = 1;\r\n            this.userData.email = formData['email'];\r\n        }\r\n        this.initializeClient();\r\n        if(!this.userData.clientVersion){\r\n            this.userData.clientVersion = PackageData && PackageData.version ? PackageData.version : '0.0.0';\r\n        }\r\n        if(formData.isGuest){\r\n            this.userData.isGuest = true;\r\n            this.userData.isNewUser = true;\r\n        }\r\n        if(isNewUser){\r\n            this.userData.isNewUser = true;\r\n            this.userData.email = formData['email'];\r\n        }\r\n        this.userData.username = formData['username'];\r\n        this.userData.password = formData['password'];\r\n    }\r\n\r\n    handleGameRoomMessages()\r\n    {\r\n        this.gameRoom.onMessage('*', async (message) => {\r\n            if(message.error){\r\n                Logger.error('Game Room message error.', message.message);\r\n                this.displayFormError(GameConst.SELECTORS.PLAYER_CREATE_FORM, message.message);\r\n                return false;\r\n            }\r\n            if(GameConst.START_GAME === message.act){\r\n                this.initialGameData = message;\r\n                return await this.beforeStartGame();\r\n            }\r\n            if(GameConst.CREATE_PLAYER_RESULT !== message.act){\r\n                return false;\r\n            }\r\n            this.initialGameData.player = message.player;\r\n            let playerSelection = this.gameDom.getElement(GameConst.SELECTORS.PLAYER_SELECTION);\r\n            if(playerSelection){\r\n                playerSelection.classList.add('hidden');\r\n            }\r\n            await this.initEngine();\r\n        });\r\n    }\r\n\r\n    activateResponsiveBehavior()\r\n    {\r\n        this.events.on('reldens.afterSceneDynamicCreate', async () => {\r\n            if(!this.config.getWithoutLogs('client/ui/screen/responsive', true)){\r\n                return;\r\n            }\r\n            this.gameEngine.updateGameSize(this);\r\n            this.gameDom.getWindow().addEventListener('resize', () => {\r\n                this.gameEngine.updateGameSize(this);\r\n            });\r\n        });\r\n    }\r\n\r\n    displayFormError(formId, message)\r\n    {\r\n        let errorElement = this.gameDom.getElement(formId+' '+GameConst.SELECTORS.RESPONSE_ERROR);\r\n        if(!errorElement){\r\n            return false;\r\n        }\r\n        errorElement.innerHTML = message;\r\n        let loadingContainer = this.gameDom.getElement(formId+' '+GameConst.SELECTORS.LOADING_CONTAINER);\r\n        if(loadingContainer){\r\n            loadingContainer?.classList.add(GameConst.CLASSES.HIDDEN);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    initializeClient()\r\n    {\r\n        this.appServerUrl = this.getAppServerUrl();\r\n        this.gameServerUrl = this.getGameServerUrl();\r\n        this.gameClient = new GameClient(this.gameServerUrl, this.config);\r\n    }\r\n\r\n    async beforeStartGame()\r\n    {\r\n        await this.events.emit('reldens.beforeInitEngineAndStartGame', this.initialGameData, this);\r\n        if(!sc.hasOwn(this.initialGameData, 'gameConfig')){\r\n            ErrorManager.error('Missing game configuration.');\r\n        }\r\n        // apply the initial config to the processor:\r\n        sc.deepMergeProperties(this.config, (this.initialGameData?.gameConfig || {}));\r\n        this.userData.clientVersion = this.config.getWithoutLogs('client/gameEngine/version', this.userData.clientVersion);\r\n        // features list:\r\n        await this.features.loadFeatures((this.initialGameData?.features || {}));\r\n        await this.events.emit('reldens.beforeCreateEngine', this.initialGameData, this);\r\n        if(!this.canInitEngine){\r\n            return false;\r\n        }\r\n        return await this.initEngine();\r\n    }\r\n\r\n    async initEngine()\r\n    {\r\n        // @NOTE we could leave the game room after the game initialized because at that point the user already\r\n        // joined the scene room and this room doesn't listen for anything, BUT we keep it to track all logged users.\r\n        // await this.gameRoom.leave();\r\n        this.playerData = this.initialGameData?.player || false;\r\n        if(!this.playerData || !this.playerData.state){\r\n            return this.gameDom.alertReload(this.services?.translator.t('game.errors.missingPlayerData'));\r\n        }\r\n        this.userData.selectedPlayer = this.playerData.id;\r\n        let selectedScene = this.initialGameData?.selectedScene || '';\r\n        this.userData.selectedScene = selectedScene;\r\n        let config = this.initialGameData?.gameConfig || {};\r\n        this.gameEngine = new GameEngine({config: config.client.gameEngine, events: this.events});\r\n        // since the user is now registered:\r\n        this.userData.isNewUser = false;\r\n        // for guests use the password from the server:\r\n        if(this.userData.isGuest){\r\n            if(this.initialGameData?.guestPassword){\r\n                this.userData.password = this.initialGameData.guestPassword;\r\n            }\r\n            if(this.initialGameData?.userName){\r\n                this.userData.username = this.initialGameData.userName;\r\n            }\r\n        }\r\n        await this.joinFeaturesRooms();\r\n        let useLastLocation = '' !== selectedScene && selectedScene !== RoomsConst.ROOM_LAST_LOCATION_KEY;\r\n        let playerScene = useLastLocation ? selectedScene : this.playerData.state.scene;\r\n        this.playerData.state.scene = playerScene;\r\n        let joinedFirstRoom = await this.gameClient.joinOrCreate(playerScene, this.userData);\r\n        if(!joinedFirstRoom){\r\n            // @NOTE: the errors while trying to join a rooms/scene will always be originated in the\r\n            // server. For these errors we will alert the user and reload the window automatically.\r\n            return this.gameDom.alertReload(\r\n                this.services?.translator.t('game.errors.joiningRoom', {joinRoomName: playerScene})\r\n            );\r\n        }\r\n        this.gameDom.getElement(GameConst.SELECTORS.BODY).classList.add(GameConst.CLASSES.GAME_ENGINE_STARTED);\r\n        this.gameDom.getElement(GameConst.SELECTORS.GAME_CONTAINER).classList.remove(GameConst.CLASSES.HIDDEN);\r\n        let playerSelection = this.gameDom.getElement(GameConst.SELECTORS.PLAYER_SELECTION);\r\n        if(playerSelection){\r\n            playerSelection.classList.add(GameConst.CLASSES.HIDDEN);\r\n        }\r\n        // @NOTE: remove the selected scene after the player used it because the login data will be used again every\r\n        // time the player change the scene.\r\n        delete this.initialGameData['selectedScene'];\r\n        delete this.userData['selectedScene'];\r\n        await this.emitJoinedRoom(joinedFirstRoom, playerScene);\r\n        this.activeRoomEvents = this.createRoomEventsInstance(playerScene);\r\n        await this.events.emit('reldens.createdRoomsEventsInstance', joinedFirstRoom, this);\r\n        await this.activeRoomEvents.activateRoom(joinedFirstRoom);\r\n        await this.emitActivatedRoom(joinedFirstRoom, playerScene);\r\n        await this.events.emit('reldens.afterInitEngineAndStartGame', this.initialGameData, joinedFirstRoom);\r\n        return joinedFirstRoom;\r\n    }\r\n\r\n    async joinFeaturesRooms()\r\n    {\r\n        let featuresListKeys = Object.keys(this.features.featuresList);\r\n        if(0 === featuresListKeys.length){\r\n            return;\r\n        }\r\n        let featuresRoomsNames = [];\r\n        for(let i of featuresListKeys){\r\n            let feature = this.features.featuresList[i];\r\n            if(!sc.hasOwn(feature, 'joinRooms')){\r\n                continue;\r\n            }\r\n            for(let joinRoomName of feature.joinRooms){\r\n                let joinedRoom = await this.gameClient.joinOrCreate(joinRoomName, this.userData);\r\n                if(!joinedRoom){\r\n                    // @NOTE: any join room error will always be originated in the server. For these errors we\r\n                    // will alert the user and reload the window automatically. Here the received \"data\" will\r\n                    // be the actual error message.\r\n                    return this.gameDom.alertReload(\r\n                        this.services.translator.t('game.errors.joiningFeatureRoom', {joinRoomName})\r\n                    );\r\n                }\r\n                //Logger.debug('Joined room: '+joinRoomName);\r\n                // after the room was joined added to the joinedRooms list:\r\n                this.joinedRooms[joinRoomName] = joinedRoom;\r\n                await this.emitJoinedRoom(joinedRoom, joinRoomName);\r\n                featuresRoomsNames.push(joinRoomName);\r\n            }\r\n        }\r\n        sc.deepMergeProperties(this.config, {client: {rooms: {featuresRoomsNames}}});\r\n    }\r\n\r\n    async reconnectGameClient(message, previousRoom)\r\n    {\r\n        this.isChangingScene = true;\r\n        let newRoomEvents = this.createRoomEventsInstance(message.player.state.scene);\r\n        this.gameClient.joinOrCreate(newRoomEvents.roomName, this.userData).then(async (sceneRoom) => {\r\n            // leave old room:\r\n            previousRoom.leave();\r\n            this.activeRoomEvents = newRoomEvents;\r\n            this.room = sceneRoom;\r\n            await this.emitJoinedRoom(sceneRoom, message.player.state.scene);\r\n            // start listen to the new room events:\r\n            await newRoomEvents.activateRoom(sceneRoom, message.prev);\r\n            await this.emitActivatedRoom(sceneRoom, message.player.state.scene);\r\n        }).catch((error) => {\r\n            // @NOTE: the errors while trying to reconnect will always be originated in the server. For these errors we\r\n            // will alert the user and reload the window automatically.\r\n            Logger.error('Reconnect Game Client error.', {error, message, previousRoom});\r\n            this.gameDom.alertReload(this.services.translator.t('game.errors.reconnectClient'));\r\n        });\r\n    }\r\n\r\n    async emitActivatedRoom(sceneRoom, playerScene)\r\n    {\r\n        await this.events.emit('reldens.activatedRoom', sceneRoom, this);\r\n        await this.events.emit('reldens.activatedRoom_'+playerScene, sceneRoom, this);\r\n    }\r\n\r\n    async emitJoinedRoom(sceneRoom, playerScene)\r\n    {\r\n        await this.events.emit('reldens.joinedRoom', sceneRoom, this);\r\n        await this.events.emit('reldens.joinedRoom_'+playerScene, sceneRoom, this);\r\n    }\r\n\r\n    /**\r\n     * @param roomName\r\n     * @returns {RoomEvents}\r\n     */\r\n    createRoomEventsInstance(roomName)\r\n    {\r\n        return new RoomEvents(roomName, this);\r\n    }\r\n\r\n    getAppServerUrl()\r\n    {\r\n        if('' === this.appServerUrl){\r\n            this.appServerUrl = this.getUrlFromCurrentReferer();\r\n        }\r\n        return this.appServerUrl;\r\n    }\r\n\r\n    getGameServerUrl()\r\n    {\r\n        if('' === this.gameServerUrl){\r\n            this.gameServerUrl = this.getUrlFromCurrentReferer(true);\r\n        }\r\n        return this.gameServerUrl;\r\n    }\r\n\r\n    getUrlFromCurrentReferer(useWebSocket = false)\r\n    {\r\n        let location = this.gameDom.getWindow().location;\r\n        let protocol = location.protocol;\r\n        if(useWebSocket){\r\n            protocol = 0 === protocol.indexOf('https') ? 'wss:' : 'ws:';\r\n        }\r\n        return protocol + '//'+location.hostname+(location.port ? ':'+location.port : '');\r\n    }\r\n\r\n    getActiveScene()\r\n    {\r\n        return this.activeRoomEvents.getActiveScene();\r\n    }\r\n\r\n    getActiveScenePreloader()\r\n    {\r\n        return this.gameEngine.scene.getScene(GameConst.SCENE_PRELOADER+this.getActiveScene().key);\r\n    }\r\n\r\n    /**\r\n     * @returns {PlayerEngine|boolean}\r\n     */\r\n    getCurrentPlayer()\r\n    {\r\n        let activeScene = this.getActiveScene();\r\n        if(!activeScene){\r\n            //Logger.debug('Missing active scene.');\r\n            return false;\r\n        }\r\n        return activeScene.player;\r\n    }\r\n\r\n    currentPlayerName()\r\n    {\r\n        let currentPlayer = this.getCurrentPlayer();\r\n        if(!currentPlayer){\r\n            return '';\r\n        }\r\n        return currentPlayer.player_id+' - '+currentPlayer.playerName;\r\n    }\r\n\r\n    getCurrentPlayerAnimation()\r\n    {\r\n        let current = this.getCurrentPlayer();\r\n        return current.players[current.playerId];\r\n    }\r\n\r\n    getUiElement(uiName, logError = true)\r\n    {\r\n        let uiScene = sc.get(this.gameEngine, 'uiScene', false);\r\n        if(uiScene){\r\n            return uiScene.getUiElement(uiName, logError);\r\n        }\r\n        if(logError){\r\n            Logger.error('UI Scene not defined.');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFeature(featureKey)\r\n    {\r\n        let featuresList = this.features.featuresList;\r\n        if(!sc.hasOwn(featuresList, featureKey)){\r\n            Logger.error('Feature key not defined.', featureKey);\r\n            return false;\r\n        }\r\n        return featuresList[featureKey];\r\n    }\r\n\r\n    getAnimationByKey(key)\r\n    {\r\n        return this.getActiveScene().getAnimationByKey(key);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.GameManager = GameManager;\r\n\r\n","/**\r\n *\r\n * Reldens - GameClient\r\n *\r\n */\r\n\r\nconst { Client } = require('colyseus.js');\r\nconst { RoomsConst } = require('../../rooms/constants');\r\nconst { GameConst } = require('../constants');\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass GameClient\r\n{\r\n\r\n    constructor(serverUrl, config)\r\n    {\r\n        this.serverUrl = serverUrl;\r\n        this.config = config;\r\n        this.autoConnectServerGameRoom = this.config.getWithoutLogs(\r\n            'client/rooms/autoConnectServerGameRoom',\r\n            true\r\n        );\r\n        this.autoConnectServerFeatureRooms = this.config.getWithoutLogs(\r\n            'client/rooms/autoConnectServerFeatureRooms',\r\n            true\r\n        );\r\n        this.roomsUrls = {};\r\n        this.roomClients = {};\r\n        this.gameRoomsByServer = {};\r\n        this.featuresByServerFlag = {};\r\n        this.featuresRoomsByServer = {};\r\n        this.lastErrorMessage = '';\r\n    }\r\n\r\n    async joinOrCreate(roomName, options)\r\n    {\r\n        this.lastErrorMessage = '';\r\n        try {\r\n            let client = this.roomClient(roomName);\r\n            if(!client){\r\n                Logger.error('Client not found for room name \"'+roomName+'\".');\r\n                return false;\r\n            }\r\n            let roomUrl = this.roomsUrls[roomName];\r\n            await this.connectToGlobalGameRoom(roomUrl, client, options);\r\n            await this.connectToGlobalFeaturesRooms(roomUrl, client, options);\r\n            return await client.joinOrCreate(roomName, options);\r\n        } catch (error) {\r\n            if(RoomsConst.ERRORS.CREATING_ROOM_AWAIT === error.message){\r\n                await new Promise(resolve => setTimeout(resolve, 500));\r\n                return await this.joinOrCreate(roomName, options);\r\n            }\r\n            this.lastErrorMessage = error.message;\r\n            // any connection errors will be handled in the higher level class\r\n            Logger.error('Joining room error: '+error.message);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async connectToGlobalGameRoom(roomUrl, client, options)\r\n    {\r\n        if(!this.autoConnectServerGameRoom){\r\n            return;\r\n        }\r\n        if('' === roomUrl || this.serverUrl === roomUrl){\r\n            Logger.debug('Avoid connect to global game room.', this.serverUrl, roomUrl);\r\n            return;\r\n        }\r\n        if(this.gameRoomsByServer[roomUrl]){\r\n            return;\r\n        }\r\n        Logger.debug('Registering GameRoom for server: '+roomUrl);\r\n        this.gameRoomsByServer[roomUrl] = await client.joinOrCreate(GameConst.ROOM_GAME, options);\r\n        // required to avoid unregistered messages warning:\r\n        this.gameRoomsByServer[roomUrl].onMessage('*', () => {});\r\n    }\r\n\r\n    async connectToGlobalFeaturesRooms(roomUrl, client, options)\r\n    {\r\n        if(!this.autoConnectServerFeatureRooms){\r\n            return;\r\n        }\r\n        if('' === roomUrl || this.serverUrl === roomUrl){\r\n            Logger.debug('Avoid connect to features rooms.', this.serverUrl, roomUrl);\r\n            return;\r\n        }\r\n        if(this.featuresByServerFlag[roomUrl]){\r\n            return;\r\n        }\r\n        Logger.debug('Registering features rooms for server: '+roomUrl);\r\n        this.featuresByServerFlag[roomUrl] = true;\r\n        let featuresRoomsNames = this.config.getWithoutLogs('client/rooms/featuresRoomsNames', []);\r\n        if(0 < featuresRoomsNames.length){\r\n            return;\r\n        }\r\n        this.featuresRoomsByServer[roomUrl] = {};\r\n        for(let featureRoomName of featuresRoomsNames){\r\n            this.featuresRoomsByServer[roomUrl][featureRoomName] = await client.joinOrCreate(featureRoomName, options);\r\n        }\r\n    }\r\n\r\n    roomClient(roomName)\r\n    {\r\n        if(!this.roomClients[roomName]){\r\n            this.roomsUrls[roomName] = this.config.getWithoutLogs('client/rooms/servers/'+roomName, this.serverUrl);\r\n            Logger.debug('Creating client with URL \"'+this.roomsUrls[roomName]+'\" for room \"'+roomName+'\".');\r\n            this.roomClients[roomName] = new Client(\r\n                this.roomsUrls[roomName]\r\n            );\r\n        }\r\n        return this.roomClients[roomName];\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.GameClient = GameClient;\r\n","/**\r\n *\r\n * Reldens - rooms/constants\r\n *\r\n */\r\n\r\nmodule.exports.RoomsConst = {\r\n    ROOM_TYPE_SCENE: 'scene',\r\n    ROOM_TYPE_LOGIN: 'login',\r\n    ROOM_TYPE_GAME: 'game',\r\n    TILE_INDEX: 'i',\r\n    NEXT_SCENE: 'n',\r\n    MAPS_BUCKET: '/assets/maps',\r\n    ROOM_LAST_LOCATION_KEY: '@lastLocation',\r\n    RETURN_POINT_KEYS: {\r\n        DIRECTION: 'd',\r\n        X: 'x',\r\n        Y: 'y',\r\n        DEFAULT: 'de',\r\n        PREVIOUS: 'p'\r\n    },\r\n    ERRORS: {\r\n        CREATING_ROOM_AWAIT: 'CREATING-ROOM-AWAIT'\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - GameConst\r\n *\r\n */\r\n\r\nmodule.exports.GameConst = {\r\n    // @TODO - BETA - Move all the actions like \"START_GAME\" into ACTIONS property.\r\n    START_GAME: 's',\r\n    ACTION_KEY: 'act',\r\n    CREATE_PLAYER: 'cp',\r\n    CREATE_PLAYER_RESULT: 'cps',\r\n    CHANGING_SCENE: 'cgs',\r\n    CHANGED_SCENE: 'cs',\r\n    RECONNECT: 'r',\r\n    // @TODO - BETA - Move into \"rooms\" plugin.\r\n    ROOM_GAME: 'room_game',\r\n    ROOM_NAME_MAP: 'Map',\r\n    SCENE_PRELOADER: 'ScenePreloader',\r\n    PLAYER_STATS: 'ps',\r\n    ICON_STATS: 'player-stats',\r\n    CLIENT_JOINED: 'cj',\r\n    UI: 'ui',\r\n    CLOSE_UI_ACTION: 'closeUi',\r\n    TYPE_PLAYER: 'pj',\r\n    GAME_OVER: 'go',\r\n    REVIVED: 'rv',\r\n    BUTTON_OPTION: 'btn-opt',\r\n    UI_BOX: 'box',\r\n    UI_CLOSE: '-close',\r\n    UI_OPEN: '-open',\r\n    // @TODO - BETA - Move into DIRECTIONS property.\r\n    UP: 'up',\r\n    LEFT: 'left',\r\n    DOWN: 'down',\r\n    RIGHT: 'right',\r\n    STOP: 'stop',\r\n    POINTER: 'mp',\r\n    ARROW_DOWN: 'ard',\r\n    IMAGE_PLAYER: 'player',\r\n    ACTIONS: {\r\n        LOGIN_UPDATE_ERROR: 'luer'\r\n    },\r\n    STATUS: {\r\n        ACTIVE: 1,\r\n        DISABLED: 2,\r\n        DEATH: 3,\r\n        AVOID_INTERPOLATION: 4\r\n    },\r\n    STRUCTURE: {\r\n        DEFAULT: 'default',\r\n        ASSETS: 'assets',\r\n        CSS: 'css',\r\n        DIST: 'dist',\r\n        THEME: 'theme',\r\n        LIB: 'lib',\r\n        SERVER: 'server',\r\n        CLIENT: 'client',\r\n        PLUGINS: 'plugins',\r\n        INDEX: 'index.html',\r\n        SCSS_FILE: 'styles.scss',\r\n        CSS_FILE: 'styles.css',\r\n        ADMIN: 'admin',\r\n        TEMPLATES: 'templates',\r\n        ADMIN_JS_FILE: 'reldens-admin-client.js',\r\n        ADMIN_SCSS_FILE: 'reldens-admin-client.scss',\r\n        ADMIN_CSS_FILE: 'reldens-admin-client.css',\r\n        INSTALLER_FOLDER: 'install',\r\n        INSTALL_LOCK: 'install.lock'\r\n    },\r\n    ROUTE_PATHS: {\r\n        DISCONNECT_USER: '/reldens-disconnect-user',\r\n        TERMS_AND_CONDITIONS: '/terms-and-conditions',\r\n        MAILER: '/reldens-mailer-enabled',\r\n        FIREBASE: '/reldens-firebase'\r\n    },\r\n    SELECTORS: {\r\n        BODY: 'body',\r\n        CANVAS: 'CANVAS',\r\n        INPUT: 'input',\r\n        FORMS_CONTAINER: '.forms-container',\r\n        REGISTER_FORM: '#register-form',\r\n        GUEST_FORM: '#guest-form',\r\n        LOGIN_FORM: '#login-form',\r\n        FORGOT_PASSWORD_FORM: '#forgot-form',\r\n        PLAYER_CREATE_FORM: '.player-create-form',\r\n        PLAYER_SELECTION: '#player-selection',\r\n        PLAYER_SELECTION_FORM: '#player-selector-form',\r\n        PLAYER_SELECT_ELEMENT: '#player-select-element',\r\n        PLAYER_SELECTION_ADDITIONAL_INFO: '.player-selection-additional-info',\r\n        FULL_SCREEN_BUTTON: '.full-screen-btn',\r\n        RESPONSE_ERROR: '.response-error',\r\n        LOADING_CONTAINER: '.loading-container',\r\n        REGISTRATION: {\r\n            PASSWORD: '#reg-password',\r\n            RE_PASSWORD: '#reg-re-password',\r\n            EMAIL: '#reg-email',\r\n            USERNAME: '#reg-username'\r\n        },\r\n        GUEST: {\r\n            USERNAME: '#guest-username'\r\n        },\r\n        LOGIN: {\r\n            USERNAME: '#username',\r\n            PASSWORD: '#password',\r\n        },\r\n        FORGOT_PASSWORD: {\r\n            EMAIL: '#forgot-email',\r\n            CONTAINER: '.forgot-password-container',\r\n        },\r\n        TERMS: {\r\n            BOX: '#terms-and-conditions',\r\n            CONTAINER: '.terms-and-conditions-container',\r\n            LINK_CONTAINER: '.terms-and-conditions-link-container',\r\n            LINK: '.terms-and-conditions-link',\r\n            ACCEPT: '#accept-terms-and-conditions',\r\n            ACCEPT_LABEL: '.accept-terms-and-conditions-label',\r\n            HEADING: '.terms-heading',\r\n            BODY: '.terms-body',\r\n            CLOSE: '#terms-and-conditions-close'\r\n        },\r\n        GAME_CONTAINER: '.game-container',\r\n        BUTTONS_CLOSE: '.box-close'\r\n    },\r\n    CLASSES: {\r\n        HIDDEN: 'hidden',\r\n        GAME_STARTED: 'game-started',\r\n        GAME_ERROR: 'game-error',\r\n        GAME_ENGINE_STARTED: 'game-engine-started',\r\n        FULL_SCREEN_ON: 'full-screen-on'\r\n    },\r\n    MESSAGE: {\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'game'\r\n        }\r\n    },\r\n    LABELS: {\r\n        YES: 'Yes',\r\n        NO: 'No'\r\n    },\r\n    ANIMATIONS_TYPE: {\r\n        SPRITESHEET: 'spritesheet'\r\n    },\r\n    FILES: {\r\n        EXTENSIONS: {\r\n            PNG: '.png'\r\n        }\r\n    },\r\n    GRAPHICS: {\r\n        FRAME_WIDTH: 32,\r\n        FRAME_HEIGHT: 32\r\n    },\r\n    SHOW_PLAYER_TIME: {\r\n        NONE: -1,\r\n        ONLY_OWN_PLAYER: 0,\r\n        ALL_PLAYERS: 2\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - GameEngine\r\n *\r\n */\r\n\r\nconst TemplateEngineRender = require('mustache');\r\nconst { Game, Input } = require('phaser');\r\nconst { FPSCounter } = require('./fps-counter');\r\nconst { GameConst } = require('../constants');\r\nconst { ObjectsConst } = require('../../objects/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass GameEngine extends Game\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props.config);\r\n        Logger.debug('Game Engine configuration.', props.config);\r\n        // @TODO - BETA - Refactor the entire class:\r\n        //      - Extract all Phaser methods into the engine driver class and implement the engine on the GameManager.\r\n        //      - Extract the template parsing into a new \"template\" or \"elements\" domain driver.\r\n        //      - Extract the screen resize methods into a new ScreenHandler class.\r\n        //      - Extract the tab target methods into a new TabPlugin class.\r\n        // uiScene is where we will keep all the game UI elements:\r\n        this.uiScene = false;\r\n        this.TemplateEngine = TemplateEngineRender;\r\n        this.eventsManager = props.events;\r\n        this.eventsManager.on('reldens.beforeReconnectGameClient', () => {\r\n            this.clearTarget();\r\n        });\r\n        this.eventsManager.on('reldens.beforeSceneDynamicCreate', (sceneDynamic) => {\r\n            this.setupTabTarget(sceneDynamic);\r\n        });\r\n    }\r\n\r\n    parseTemplate(template, view, partials, tags)\r\n    {\r\n        return this.TemplateEngine.render(template, view, partials, tags);\r\n    }\r\n\r\n    updateGameSize(manager)\r\n    {\r\n        let {newWidth, newHeight} = this.getCurrentScreenSize(manager);\r\n        setTimeout(() => {\r\n            this.eventsManager.emit('reldens.updateGameSizeBefore', this, newWidth, newHeight);\r\n            this.scale.setGameSize(newWidth, newHeight);\r\n            for(let key of Object.keys(this.uiScene.elementsUi)){\r\n                let uiElement = this.uiScene.elementsUi[key];\r\n                let positionKey = sc.get(this.uiScene.userInterfaces[key], 'uiPositionKey', key);\r\n                let {uiX, uiY} = this.uiScene.getUiConfig(positionKey, newWidth, newHeight);\r\n                uiElement.x = uiX;\r\n                uiElement.y = uiY;\r\n            }\r\n            this.eventsManager.emit('reldens.updateGameSizeAfter', this, newWidth, newHeight);\r\n        }, manager.config.getWithoutLogs('client/general/gameEngine/updateGameSizeTimeOut', 500));\r\n    }\r\n\r\n    getCurrentScreenSize(manager)\r\n    {\r\n        let gameContainer = manager.gameDom.getElement(GameConst.SELECTORS.GAME_CONTAINER);\r\n        let containerWidth = gameContainer.offsetWidth;\r\n        let containerHeight = gameContainer.offsetHeight;\r\n        let newWidth = containerWidth;\r\n        let newHeight = containerHeight;\r\n        let mapWidth = 0, mapHeight = 0;\r\n        let activeScene = manager.getActiveScene();\r\n        if(activeScene && activeScene.map){\r\n            mapWidth = activeScene.map.width * activeScene.map.tileWidth;\r\n            newWidth = Math.min(containerWidth, mapWidth);\r\n            mapHeight = activeScene.map.height * activeScene.map.tileHeight;\r\n            newHeight = Math.min(containerHeight, mapHeight);\r\n        }\r\n        let maxUiW = Number(manager.config.get('client/ui/maximum/x'));\r\n        newWidth = Math.min(newWidth, maxUiW);\r\n        let maxUiY = Number(manager.config.get('client/ui/maximum/y'));\r\n        newHeight = Math.min(newHeight, maxUiY);\r\n        return {newWidth, newHeight};\r\n    }\r\n\r\n    showTarget(targetName, target, previousTarget)\r\n    {\r\n        if(sc.hasOwn(this.uiScene, 'uiTarget')){\r\n            this.uiScene.uiTarget.getChildByID('box-target').style.display = 'block';\r\n            this.uiScene.uiTarget.getChildByID('target-container').innerHTML = this.targetDisplay(targetName, target);\r\n        }\r\n        this.eventsManager.emit('reldens.gameEngineShowTarget', this, target, previousTarget, targetName);\r\n    }\r\n\r\n    targetDisplay(targetName, target)\r\n    {\r\n        let targetDisplayContent = targetName;\r\n        if(GameConst.TYPE_PLAYER === target.type){\r\n            targetDisplayContent += this.generateTargetPlayedTime(target);\r\n        }\r\n        return targetDisplayContent;\r\n    }\r\n\r\n    generateTargetPlayedTime(target)\r\n    {\r\n        let playerTimeText = '';\r\n        let showPlayedTimeConfig = this.uiScene.gameManager.config.getWithoutLogs(\r\n            'client/players/playedTime/show',\r\n            GameConst.SHOW_PLAYER_TIME.ONLY_OWN_PLAYER\r\n        );\r\n        if(GameConst.SHOW_PLAYER_TIME.NONE === showPlayedTimeConfig){\r\n            return playerTimeText;\r\n        }\r\n        let currentPlayer = this.uiScene.gameManager.getCurrentPlayer();\r\n        if(GameConst.SHOW_PLAYER_TIME.ALL_PLAYERS === showPlayedTimeConfig || currentPlayer.playerId === target.id){\r\n            let targetPlayedTime = this.obtainPlayedTime(target, currentPlayer);\r\n            playerTimeText += this.createPlayedTimeLabel(targetPlayedTime);\r\n        }\r\n        return playerTimeText;\r\n    }\r\n\r\n    createPlayedTimeLabel(playedTime)\r\n    {\r\n        let htmlElement = this.uiScene.gameManager.gameDom.createElement('p');\r\n        htmlElement.innerHTML = this.uiScene.gameManager.config.get('client/players/playedTime/label').replace(\r\n            '%playedTimeInHs',\r\n            playedTime\r\n        );\r\n        return htmlElement.outerHTML;\r\n    }\r\n\r\n    obtainPlayedTime(target, currentPlayer)\r\n    {\r\n        return (currentPlayer.players[target.id].playedTime / 60 / 60).toFixed(1);\r\n    }\r\n\r\n    clearTarget()\r\n    {\r\n        let currentScene = this.uiScene.gameManager.activeRoomEvents.getActiveScene();\r\n        let clearedTargetData = Object.assign({}, currentScene.player.currentTarget);\r\n        if(sc.hasOwn(this.uiScene, 'uiTarget')){\r\n            currentScene.player.currentTarget = false;\r\n            // @TODO - BETA - Refactor to replace styles by classes.\r\n            this.uiScene.uiTarget.getChildByID('box-target').style.display = 'none';\r\n            this.uiScene.uiTarget.getChildByID('target-container').innerHTML = '';\r\n        }\r\n        this.eventsManager.emit('reldens.gameEngineClearTarget', this, clearedTargetData);\r\n    }\r\n\r\n    setupTabTarget(sceneDynamic)\r\n    {\r\n        sceneDynamic.keyTab = sceneDynamic.input.keyboard.addKey(Input.Keyboard.KeyCodes.TAB);\r\n        sceneDynamic.input.keyboard['addCapture'](Input.Keyboard.KeyCodes.TAB);\r\n        sceneDynamic.input.keyboard.on('keydown', (event) => {\r\n            if(9 === event.keyCode){\r\n                this.tabTarget();\r\n            }\r\n        });\r\n    }\r\n\r\n    tabTarget()\r\n    {\r\n        let currentPlayer = this.uiScene.gameManager.getCurrentPlayer();\r\n        let objects = this.uiScene.gameManager.getActiveScene().objectsAnimations;\r\n        let players = currentPlayer.players;\r\n        let closerTarget = false;\r\n        let targetName = '';\r\n        let previousTarget = currentPlayer.currentTarget ? Object.assign({}, currentPlayer.currentTarget) : false;\r\n        for(let i of Object.keys(objects)){\r\n            if(!objects[i].targetName){\r\n                continue;\r\n            }\r\n            let dist = Math.hypot(objects[i].x-currentPlayer.state.x, objects[i].y-currentPlayer.state.y);\r\n            if(currentPlayer.currentTarget.id !== objects[i].key && (!closerTarget || closerTarget.dist > dist)){\r\n                closerTarget = {id: objects[i].key, type: ObjectsConst.TYPE_OBJECT, dist};\r\n                targetName = objects[i].targetName;\r\n            }\r\n        }\r\n        for(let i of Object.keys(players)){\r\n            if(currentPlayer.playerName === players[i].playerName){\r\n                continue;\r\n            }\r\n            let dist = Math.hypot(players[i].x-currentPlayer.state.x, players[i].y-currentPlayer.state.y);\r\n            if(currentPlayer.currentTarget.id !== players[i].id && (!closerTarget || closerTarget.dist > dist)){\r\n                closerTarget = {id: i, type: GameConst.TYPE_PLAYER, dist};\r\n                targetName = players[i].playerName;\r\n            }\r\n        }\r\n        currentPlayer.currentTarget = closerTarget;\r\n        this.showTarget(targetName, closerTarget, previousTarget);\r\n        this.eventsManager.emit('reldens.gameEngineTabTarget', this, closerTarget, previousTarget);\r\n    }\r\n\r\n    showFPS()\r\n    {\r\n        this.fpsCounter = new FPSCounter(this.uiScene.gameManager.gameDom);\r\n        this.fpsCounter.start();\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.GameEngine = GameEngine;\r\n","/**\r\n *\r\n * Reldens - GameDom\r\n *\r\n */\r\n\r\nclass FPSCounter\r\n{\r\n\r\n    constructor(gameDom)\r\n    {\r\n        this.lastFrameTime = performance.now();\r\n        this.frameCount = 0;\r\n        this.fpsDisplay = gameDom.createElementWithStyles('div', 'fps-counter', {\r\n            padding: '0 20px',\r\n            background: '#000',\r\n            color: '#00ff00'\r\n        });\r\n        gameDom.getElement('.header').appendChild(this.fpsDisplay);\r\n    }\r\n\r\n    updateFPS()\r\n    {\r\n        let currentTime = performance.now();\r\n        let deltaTime = currentTime - this.lastFrameTime;\r\n        this.lastFrameTime = currentTime;\r\n        const fps = Math.round(1000 / deltaTime);\r\n        this.frameCount++;\r\n        if(0 === this.frameCount % 60){\r\n            this.fpsDisplay.textContent = 'FPS: ' + fps;\r\n        }\r\n        requestAnimationFrame(this.updateFPS.bind(this));\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.updateFPS();\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.FPSCounter = FPSCounter\r\n","/**\r\n *\r\n * Reldens - ObjectsConst\r\n *\r\n */\r\n\r\nlet snippetsPrefix = 'objects.';\r\n\r\nmodule.exports.ObjectsConst = {\r\n    OBJECT_ANIMATION: 'oa',\r\n    OBJECT_INTERACTION: 'oi',\r\n    TYPE_OBJECT: 'obj',\r\n    TYPE_ANIMATION: 'anim',\r\n    TYPE_NPC: 'npc',\r\n    TYPE_ENEMY: 'enemy',\r\n    TYPE_TRADER: 'trader',\r\n    TYPE_DROP: 'drop',\r\n    DYNAMIC_ANIMATION: 'dyn',\r\n    MESSAGE: {\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'objects'\r\n        }\r\n    },\r\n    EVENT_PREFIX: {\r\n        BASE: 'bo',\r\n        ANIMATION: 'ao',\r\n        DROP: 'dep',\r\n        ENEMY: 'eo',\r\n        NPC: 'npc',\r\n        TRADER: 'tnpc'\r\n    },\r\n    SNIPPETS: {\r\n        PREFIX: snippetsPrefix,\r\n        NPC_INVALID: snippetsPrefix+'npcInvalid',\r\n        TRADER: {\r\n            CONTENT: snippetsPrefix+'trader.content',\r\n            OPTIONS: {\r\n                BUY: snippetsPrefix+'trader.options.buy',\r\n                SELL: snippetsPrefix+'trader.options.sell'\r\n            },\r\n            BUY_CONFIRMED: snippetsPrefix+'trader.buyConfirmed',\r\n            SELL_CONFIRMED: snippetsPrefix+'trader.sellConfirmed'\r\n        }\r\n    },\r\n    DEFAULTS: {\r\n        BASE_OBJECT: {\r\n            CONTENT: '',\r\n            OPTIONS: {},\r\n        },\r\n        TRADER_OBJECT: {\r\n            INVENTORY_MAP: {\r\n                buy: 'A',\r\n                sell: 'B'\r\n            },\r\n            OPTIONS: {\r\n                BUY: 'buy',\r\n                SELL: 'sell'\r\n            }\r\n        },\r\n        TARGETS: {\r\n            OBJECT: 0,\r\n            PLAYER: 1\r\n        }\r\n    },\r\n    TRADE_ACTIONS_FUNCTION_NAME: {\r\n        ADD: 'add',\r\n        REMOVE: 'remove',\r\n        CONFIRM: 'confirm',\r\n        DISCONFIRM: 'disconfirm',\r\n        CANCEL: 'cancel'\r\n    },\r\n    TRADE_ACTIONS: {\r\n        SUB_ACTION: 'sub',\r\n        ADD: 'ta',\r\n        REMOVE: 'tr',\r\n        CONFIRM: 'tc',\r\n        DISCONFIRM: 'td'\r\n    },\r\n    DROPS: {\r\n        KEY: 'drp',\r\n        REMOVE: 'drmv',\r\n        PARAMS: 'drpp',\r\n        ASSET_KEY: 'dk',\r\n        PICK_UP_ACT: 'rpu',\r\n        ASSETS_PATH: '/assets/custom/sprites/',\r\n        FILE: 'df',\r\n        TYPE: 'dt'\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - RoomEvents\r\n *\r\n */\r\n\r\nconst { PlayerEngine } = require('../../users/client/player-engine');\r\nconst { SceneDynamic } = require('./scene-dynamic');\r\nconst { ScenePreloader } = require('./scene-preloader');\r\nconst { GameConst } = require('../constants');\r\nconst { ErrorManager, Logger, sc } = require('@reldens/utils');\r\n\r\nclass RoomEvents\r\n{\r\n\r\n    constructor(roomName, gameManager)\r\n    {\r\n        this.room = false;\r\n        this.roomData = {};\r\n        this.scenePreloader = false;\r\n        this.playersOnAddCallback = false;\r\n        this.playersOnRemoveCallback = false;\r\n        this.playersQueue = {};\r\n        /** @type {GameManager} */\r\n        this.gameManager = gameManager;\r\n        this.gameEngine = gameManager.gameEngine;\r\n        /** @type {GameDom} */\r\n        this.gameDom = gameManager.gameDom;\r\n        this.roomName = roomName;\r\n        this.events = gameManager.events;\r\n        // @TODO - BETA - Move the following inside a single property called \"metadata\" and set each on their plugins.\r\n        this.objectsUi = {};\r\n        this.tradeUi = {};\r\n        this.gameOverRetries = 0;\r\n        this.gameOverMaxRetries = 0;\r\n        this.gameOverRetryTime = 200;\r\n        this.automaticallyCloseAllDialogsOnSceneChange = gameManager.config.getWithoutLogs(\r\n            'client/rooms/automaticallyCloseAllDialogsOnSceneChange',\r\n            true\r\n        );\r\n    }\r\n\r\n    async activateRoom(room, previousScene = false)\r\n    {\r\n        // @TODO - BETA - Refactor and extract Colyseus into a driver.\r\n        await this.events.emit('reldens.activateRoom', room, this.gameManager);\r\n        this.room = room;\r\n        this.playersOnAddCallback = this.room.state.players.onAdd((player, key) => {\r\n            this.checkAndCreateScene();\r\n            this.playersOnAdd(player, key, previousScene);\r\n            this.listenPlayerAndStateChanges(player, key);\r\n        }); // @NOTE: a second param here with \"false\" will not automatically run triggerAll().\r\n        this.playersOnRemoveCallback = this.room.state.players.onRemove((player, key) => {\r\n            this.playersOnRemove(player, key);\r\n        });\r\n        this.room.onMessage('*', async (message) => {\r\n            await this.roomOnMessage(message);\r\n        });\r\n        this.room.onLeave((code) => {\r\n            this.roomOnLeave(code);\r\n        });\r\n    }\r\n\r\n    listenPlayerAndStateChanges(player, key)\r\n    {\r\n        // @TODO - BETA - Remove hardcoded \"state\" property and \"inState\" sub-property.\r\n        let currentPlayerId = this.gameManager.getCurrentPlayer().player_id;\r\n        let playerProps = Object.keys(player);\r\n        let stateProps = Object.keys(player.state);\r\n        for(let prop of playerProps){\r\n            player.listen(prop, (value) => {\r\n                this.playersOnChange(player, key, 'playerChange');\r\n            });\r\n        }\r\n        for(let prop of stateProps){\r\n            player.state.listen(prop, (value) => {\r\n                //Logger.debug('Updating state.', {prop, value});\r\n                player.state[prop] = value;\r\n                this.playersOnChange(player, key, 'playerChange');\r\n                if('inState' === prop && player.player_id === currentPlayerId){\r\n                    if(GameConst.STATUS.DEATH === value){\r\n                        return this.showGameOverBox();\r\n                    }\r\n                    this.hideGameOverBox();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    checkAndCreateScene()\r\n    {\r\n        if(!this.room.state){\r\n            Logger.warning('Room state is not ready.');\r\n            return false;\r\n        }\r\n        // update the room data if is empty:\r\n        if(0 === Object.keys(this.roomData).length){\r\n            this.roomData = sc.toJson(this.room.state.sceneData);\r\n        }\r\n        // avoid create the scene if it exists:\r\n        if(this.gameEngine.scene.getScene(this.roomName)){\r\n            return false;\r\n        }\r\n        let engineSceneDynamic = this.createSceneInstance(this.roomName, this.roomData, this.gameManager);\r\n        this.gameEngine.scene.add(this.roomName, engineSceneDynamic, false);\r\n    }\r\n\r\n    async playersOnAdd(player, key, previousScene)\r\n    {\r\n        await this.events.emit('reldens.playersOnAdd', player, key, previousScene, this);\r\n        let mappedData = {\r\n            x: player.state.x,\r\n            y: player.state.y,\r\n            dir: player.state.dir,\r\n            playerName: player.playerName,\r\n            avatarKey: player.avatarKey,\r\n            playedTime: player.playedTime,\r\n            player_id: player.player_id\r\n        };\r\n        if(this.isCurrentPlayer(key)){\r\n            return await this.createCurrentPlayer(player, previousScene, key);\r\n        }\r\n        this.addOtherPlayers(player, key, mappedData);\r\n    }\r\n\r\n    isCurrentPlayer(key)\r\n    {\r\n        return key === this.room.sessionId;\r\n    }\r\n\r\n    addOtherPlayers(player, key, addPlayerData)\r\n    {\r\n        // add new players into the current player scene:\r\n        if(!this.engineStarted){\r\n            this.playersQueue[key] = addPlayerData;\r\n            return false;\r\n        }\r\n        let currentScene = this.getActiveScene();\r\n        if(!this.isValidScene(currentScene, player)){\r\n            // we don't want to add players from another scene here:\r\n            return false;\r\n        }\r\n        currentScene.player.addPlayer(key, addPlayerData);\r\n    }\r\n\r\n    async createCurrentPlayer(player, previousScene, key)\r\n    {\r\n        this.engineStarted = true;\r\n        await this.startEngineScene(player, this.room, previousScene);\r\n        let currentScene = this.getActiveScene();\r\n        if(!this.isValidScene(currentScene, player)){\r\n            return false;\r\n        }\r\n        // process players queue after player was created:\r\n        await this.events.emit('reldens.playersQueueBefore', player, key, previousScene, this);\r\n        for(let i of Object.keys(this.playersQueue)){\r\n            currentScene.player.addPlayer(i, this.playersQueue[i]);\r\n        }\r\n        let eventData = {player, key, previousScene, roomEvents: this};\r\n        await this.events.emit('reldens.createCurrentPlayer', eventData);\r\n        return eventData;\r\n    }\r\n\r\n    isValidScene(currentScene, player)\r\n    {\r\n        return currentScene.key === player.state.scene && currentScene.player && currentScene.player.players;\r\n    }\r\n\r\n    playersOnChange(player, key, from)\r\n    {\r\n        // do not move the player if it is changing the scene:\r\n        if(player.state.scene !== this.roomName){\r\n            if(player.player_id === this.gameManager.getCurrentPlayer().player_id && !this.gameManager.isChangingScene){\r\n                Logger.info(\r\n                    'Player scene miss match.',\r\n                    {\r\n                        currentScene: this.roomName,\r\n                        playerSceneOnState: player?.state.scene,\r\n                        player: player?.sessionId,\r\n                        currentPlayer: this.gameManager.getCurrentPlayer()?.playerId,\r\n                        isChangingScene: this.gameManager.isChangingScene\r\n                    }\r\n                );\r\n            }\r\n            return;\r\n        }\r\n        let currentScene = this.getActiveScene();\r\n        if(!this.playerExists(currentScene, key)){\r\n            /* @NOTE: this is expected to happen when the player is being created in the scene.\r\n            Logger.info('Player not found in current scene.', {\r\n                player: currentScene?.player,\r\n                currentKeys: Object.keys(currentScene?.player?.players || {}),\r\n                lookingPlayer: key\r\n            });\r\n            */\r\n            return;\r\n        }\r\n        currentScene.player.updatePlayer(key, player);\r\n    }\r\n\r\n    playersOnRemove(player, key)\r\n    {\r\n        this.events.emitSync('reldens.playersOnRemove', player, key, this);\r\n        if(key === this.room.sessionId){\r\n            return this.gameOverReload();\r\n        }\r\n        return this.removePlayerByKey(key);\r\n    }\r\n\r\n    removePlayerByKey(key)\r\n    {\r\n        let currentScene = this.getActiveScene();\r\n        if(!this.playerExists(currentScene, key)){\r\n            return;\r\n        }\r\n        currentScene.player.removePlayer(key);\r\n        if(currentScene.player.currentTarget?.id === key){\r\n            this.gameEngine.clearTarget();\r\n        }\r\n    }\r\n\r\n    gameOverReload()\r\n    {\r\n        // @TODO - BETA - Improve disconnection handler.\r\n        let defaultReload = {confirmed: true};\r\n        this.events.emitSync('reldens.gameOverReload', this, defaultReload);\r\n        if(!this.gameManager.gameOver && defaultReload.confirmed){\r\n            this.gameDom.alertReload(this.gameManager.services.translator.t('game.errors.sessionEnded'));\r\n        }\r\n    }\r\n\r\n    playerExists(currentScene, key)\r\n    {\r\n        return currentScene.player && sc.hasOwn(currentScene.player.players, key);\r\n    }\r\n\r\n    async roomOnMessage(message)\r\n    {\r\n        await this.runGameOver(message);\r\n        await this.runRevived(message);\r\n        await this.runChangingScene(message);\r\n        await this.runChangedScene(message);\r\n        await this.runReconnect(message);\r\n        await this.runUpdateStats(message);\r\n        await this.runInitUi(message);\r\n        await this.closeBox(message);\r\n        await this.runCustomMessageListener(message);\r\n    }\r\n\r\n    async runInitUi(message)\r\n    {\r\n        if(message.act !== GameConst.UI || !message.id){\r\n            return false;\r\n        }\r\n        await this.events.emit('reldens.initUiBefore', message, this);\r\n        this.initUi(message);\r\n        await this.events.emit('reldens.initUiAfter', message, this);\r\n    }\r\n\r\n    async closeBox(message)\r\n    {\r\n        if(GameConst.CLOSE_UI_ACTION !== message.act || !message.id){\r\n            return false;\r\n        }\r\n        let closeButton = this.gameDom.getElement('#box-'+message.id+' .box-close');\r\n        if(!closeButton){\r\n            Logger.error('Box could not be closed ID \"'+message.id+'\".');\r\n            return false;\r\n        }\r\n        closeButton.click();\r\n        return true;\r\n    }\r\n\r\n    async runCustomMessageListener(message)\r\n    {\r\n        let listenerKey = sc.get(message, 'listener', '');\r\n        if('' === listenerKey){\r\n            //Logger.debug('ListenerKey undefined for message in room events.', message);\r\n            return false;\r\n        }\r\n        let defaultListeners = this.gameManager.config.get('client/message/listeners', {});\r\n        let customListeners = this.gameManager.config.get('client/customClasses/message/listeners', {});\r\n        let listener = sc.get(customListeners, listenerKey, false);\r\n        if(!listener){\r\n            listener = sc.get(defaultListeners, listenerKey, false);\r\n        }\r\n        if(!listener){\r\n            Logger.error('Listener \"'+listenerKey+'\" is missing.');\r\n            return false;\r\n        }\r\n        if(!sc.isFunction(listener['executeClientMessageActions'])){\r\n            Logger.error('Listener is missing \"executeClientMessageActions\" method.', listener);\r\n            return false;\r\n        }\r\n        //Logger.debug({executeClientMessageActions: message});\r\n        listener['executeClientMessageActions']({message, roomEvents: this});\r\n    }\r\n\r\n    async runUpdateStats(message)\r\n    {\r\n        if(message.act !== GameConst.PLAYER_STATS){\r\n            return false;\r\n        }\r\n        // @NOTE: now this method will update the stats every time the stats action is received but the UI will be\r\n        // created only once in the preloader.\r\n        await this.events.emit('reldens.playerStatsUpdateBefore', message, this);\r\n        return await this.updatePlayerStats(message);\r\n    }\r\n\r\n    async runReconnect(message)\r\n    {\r\n        if(message.act !== GameConst.RECONNECT){\r\n            return false;\r\n        }\r\n        // @NOTE: here we don't need to evaluate the id since reconnect only is sent to the current client.\r\n        await this.events.emit('reldens.beforeReconnectGameClient', message, this);\r\n        await this.gameManager.reconnectGameClient(message, this.room);\r\n    }\r\n\r\n    async runChangingScene(message)\r\n    {\r\n        if(message.act !== GameConst.CHANGING_SCENE || this.room.sessionId !== message.id){\r\n            return false;\r\n        }\r\n        this.gameManager.isChangingScene = true;\r\n        this.closeAllActiveDialogs();\r\n        this.gameManager.getActiveScene().scene.setVisible(false);\r\n    }\r\n\r\n    async runChangedScene(message)\r\n    {\r\n        if(\r\n            message.act !== GameConst.CHANGED_SCENE\r\n            || message.scene !== this.room.name\r\n            || this.room.sessionId === message.id\r\n        ){\r\n            return false;\r\n        }\r\n        await this.events.emit('reldens.startChangedScene', {message, roomEvents: this});\r\n        let currentScene = this.getActiveScene();\r\n        // if other users enter the current scene we need to add them:\r\n        let {id, x, y, dir, playerName, playedTime, avatarKey, player_id} = message;\r\n        let topOff = this.gameManager.config.get('client/players/size/topOffset');\r\n        let leftOff = this.gameManager.config.get('client/players/size/leftOffset');\r\n        let addPlayerData = {x: (x - leftOff), y: (y - topOff), dir, playerName, playedTime, avatarKey, player_id};\r\n        currentScene.player.addPlayer(id, addPlayerData);\r\n        this.gameManager.isChangingScene = false;\r\n        await this.events.emit('reldens.endChangedScene', {message, roomEvents: this});\r\n    }\r\n\r\n    closeAllActiveDialogs()\r\n    {\r\n        if(!this.automaticallyCloseAllDialogsOnSceneChange){\r\n            return;\r\n        }\r\n        let closeButtons = this.gameDom.getElements(GameConst.SELECTORS.BUTTONS_CLOSE);\r\n        if(0 === closeButtons.length){\r\n            return;\r\n        }\r\n        for(let closeButton of closeButtons){\r\n            closeButton.click();\r\n        }\r\n    }\r\n\r\n    async runRevived(message)\r\n    {\r\n        if(message.act !== GameConst.REVIVED){\r\n            return false;\r\n        }\r\n        this.gameDom.getElement('#game-over').classList.add('hidden');\r\n        let currentPlayer = this.gameManager.getCurrentPlayer();\r\n        let showSprite = sc.get(currentPlayer.players, message.t, false);\r\n        if(!showSprite){\r\n            return false;\r\n        }\r\n        showSprite.visible = true;\r\n        if(sc.hasOwn(showSprite, 'nameSprite') && showSprite.nameSprite){\r\n            showSprite.nameSprite.visible = true;\r\n        }\r\n        this.getActiveScene().stopOnDeathOrDisabledSent = false;\r\n    }\r\n\r\n    async runGameOver(message)\r\n    {\r\n        if(message.act !== GameConst.GAME_OVER){\r\n            return false;\r\n        }\r\n        try {\r\n            let defaultBehavior = true;\r\n            await this.events.emit('reldens.runGameOver', {message, defaultBehavior, roomEvents: this});\r\n            if(!defaultBehavior){\r\n                return false;\r\n            }\r\n            await this.events.emit('reldens.gameOver', message, this);\r\n            this.gameManager.gameOver = true;\r\n            let currentPlayer = this.gameManager.getCurrentPlayer();\r\n            if(!currentPlayer){\r\n                if(this.gameOverRetries < this.gameOverMaxRetries){\r\n                    setTimeout(() => this.runGameOver(message), this.gameOverRetryTime);\r\n                    this.gameOverRetries++;\r\n                }\r\n                return false;\r\n            }\r\n            let currentPlayerSprite = currentPlayer.players[currentPlayer.playerId];\r\n            currentPlayerSprite.visible = false;\r\n            this.showGameOverBox();\r\n        } catch (error) {\r\n            setTimeout(() => this.runGameOver(message), 200);\r\n            this.gameOverRetries++;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    showGameOverBox()\r\n    {\r\n        return this.displayGameOverBox(true);\r\n    }\r\n\r\n    hideGameOverBox()\r\n    {\r\n        return this.displayGameOverBox(false);\r\n    }\r\n\r\n    displayGameOverBox(display)\r\n    {\r\n        Logger.debug('Display game over box: '+(display ? 'yes' : 'no')+'.');\r\n        let gameOverElement = this.gameDom.getElement('#game-over');\r\n        if(!gameOverElement){\r\n            Logger.debug('GameOver box element not found.');\r\n            return false;\r\n        }\r\n        if(display){\r\n            gameOverElement.classList.remove('hidden');\r\n            return true;\r\n        }\r\n        gameOverElement.classList.add('hidden');\r\n        return false;\r\n    }\r\n\r\n    async roomOnLeave(code)\r\n    {\r\n        // @TODO - BETA - Improve disconnection handler.\r\n        if(this.isAbnormalShutdown(code) && !this.gameManager.gameOver && !this.gameManager.forcedDisconnection){\r\n            Logger.error('There was a connection error.', {\r\n                code,\r\n                isGameOver: this.gameManager.gameOver,\r\n                isForcedDisconnection: this.gameManager.forcedDisconnection\r\n            });\r\n            this.gameDom.alertReload(this.gameManager.services.translator.t('game.errors.serverDown'));\r\n        }\r\n        await this.events.emit('reldens.playerLeftScene', {code, roomEvents: this});\r\n        // @NOTE: the client can initiate the disconnection, this is also triggered when the users change the room.\r\n    }\r\n\r\n    isAbnormalShutdown(code)\r\n    {\r\n        // @TODO - BETA - Refactor and extract Colyseus into a driver.\r\n        /*\r\n        1000 - Regular socket shutdown\r\n        Between 1001 and 1015 - Abnormal socket shutdown\r\n        Between 4000 and 4999 - Custom socket close code\r\n        */\r\n        return 1001 <= code && 1015 >= code;\r\n    }\r\n\r\n    async updatePlayerStats(message)\r\n    {\r\n        if(!sc.hasOwn(message, 'stats') || !message.stats){\r\n            return false;\r\n        }\r\n        let currentScene = this.getActiveScene();\r\n        if(!currentScene.player || !sc.hasOwn(currentScene.player.players, this.room.sessionId)){\r\n            // @NOTE: this can happen when you get killed and logout, then on login you will have 0 life points and\r\n            // if you get killed automatically again you will hit a player stats update before the player gets ready.\r\n            Logger.error('Player not available.', this.room, currentScene);\r\n            return false;\r\n        }\r\n        let playerSprite = currentScene.player.players[this.room.sessionId];\r\n        playerSprite.stats = message.stats;\r\n        this.gameManager.playerData.stats = message.stats;\r\n        this.gameManager.playerData.statsBase = message.statsBase;\r\n        let playerStats = this.gameManager.getUiElement('playerStats');\r\n        if(!playerStats){\r\n            return false;\r\n        }\r\n        let statsPanel = playerStats.getChildByProperty('id', 'player-stats-container');\r\n        if(!statsPanel){\r\n            return false;\r\n        }\r\n        let messageTemplate = this.gameEngine.uiScene.cache.html.get('playerStat');\r\n        statsPanel.innerHTML = '';\r\n        for(let i of Object.keys(message.stats)){\r\n            let statData = sc.get(this.gameManager.config.client.players.initialStats[i], 'data', false);\r\n            let baseStatValue = (statData && sc.get(statData, 'showBase', false) ? ' / '+message.statsBase[i] : '');\r\n            let parsedStatsTemplate = this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n                statLabel: i,\r\n                statValue: message.stats[i] + baseStatValue\r\n            });\r\n            statsPanel.innerHTML = statsPanel.innerHTML+parsedStatsTemplate;\r\n        }\r\n        await this.events.emit('reldens.playerStatsUpdateAfter', message, this);\r\n    }\r\n\r\n    initUi(props)\r\n    {\r\n        let uiScene = this.gameEngine.uiScene;\r\n        if(!uiScene || !sc.hasOwn(uiScene.elementsUi, props.id)){\r\n            Logger.error('User interface not found on UI Scene: '+props.id);\r\n            return false;\r\n        }\r\n        let uiBox = uiScene.elementsUi[props.id];\r\n        this.uiSetTitle(uiBox, props);\r\n        this.uiSetContent(uiBox, props, uiScene);\r\n        let dialogContainer = uiBox.getChildByID('box-'+props.id);\r\n        // @TODO - BETA - Replace styles by classes.\r\n        let shouldSetDisplayNone = props.keepCurrentDisplay && 'none' === dialogContainer.style.display;\r\n        dialogContainer.style.display = shouldSetDisplayNone ? 'none' : 'block';\r\n        // set box depth over the other boxes:\r\n        uiBox.setDepth(2);\r\n        // on dialog display clear the current target:\r\n        if(this.gameManager.config.get('client/ui/uiTarget/hideOnDialog')){\r\n            this.gameEngine.clearTarget();\r\n        }\r\n    }\r\n\r\n    uiSetTitleAndContent(uiBox, props, uiScene)\r\n    {\r\n        this.uiSetTitle(uiBox, props);\r\n        this.uiSetContent(uiBox, props, uiScene);\r\n    }\r\n\r\n    uiSetTitle(uiBox, props)\r\n    {\r\n        let newTitle = sc.get(props, 'title', false);\r\n        if(false === newTitle){\r\n            return false;\r\n        }\r\n        let boxTitle = uiBox.getChildByProperty('className', 'box-title');\r\n        if(!boxTitle){\r\n            return false;\r\n        }\r\n        boxTitle.innerHTML = newTitle;\r\n    }\r\n\r\n    uiSetContent(uiBox, props, uiScene)\r\n    {\r\n        let newContent = sc.get(props, 'content', false);\r\n        if(false === newContent){\r\n            return false;\r\n        }\r\n        let boxContent = uiBox.getChildByProperty('className', 'box-content');\r\n        if(!boxContent){\r\n            return false;\r\n        }\r\n        boxContent.innerHTML = newContent;\r\n        this.uiSetContentOptions(uiScene, props, boxContent);\r\n    }\r\n\r\n    uiSetContentOptions(uiScene, props, boxContent)\r\n    {\r\n        if(!props.options){\r\n            return false;\r\n        }\r\n        // @TODO - BETA - IMPROVE! I need time to focus on this which I don't have right now :(\r\n        let optionsContainerTemplate = uiScene.cache.html.get('uiOptionsContainer');\r\n        let optionsContainer = this.gameManager.gameEngine.parseTemplate(\r\n            optionsContainerTemplate,\r\n            {id: 'ui-' + props.id}\r\n        );\r\n        boxContent.innerHTML += optionsContainer;\r\n        let optionsKeys = Object.keys(props.options);\r\n        if(0 === optionsKeys.length){\r\n            return false;\r\n        }\r\n        for(let i of optionsKeys){\r\n            let {label, value, icon} = props.options[i];\r\n            let optTemplate = icon ? 'Icon' : 'Button';\r\n            let buttonTemplate = uiScene.cache.html.get('uiOption' + optTemplate);\r\n            let templateVars = {\r\n                id: i,\r\n                object_id: props.id,\r\n                label,\r\n                value,\r\n                icon: '/assets/custom/items/'+icon+GameConst.FILES.EXTENSIONS.PNG\r\n            };\r\n            let buttonHtml = this.gameManager.gameEngine.parseTemplate(buttonTemplate, templateVars);\r\n            this.gameDom.appendToElement('#ui-' + props.id, buttonHtml);\r\n            let elementId = '#opt-' + i + '-' + props.id;\r\n            this.gameDom.getElement(elementId)?.addEventListener('click', (event) => {\r\n                let optionSend = {\r\n                    id: props.id,\r\n                    act: GameConst.BUTTON_OPTION,\r\n                    value: event.target.getAttribute('data-option-value')\r\n                };\r\n                let overrideSendOptions = sc.get(props, 'overrideSendOptions', {});\r\n                Object.assign(optionSend, overrideSendOptions);\r\n                this.send(optionSend);\r\n            });\r\n        }\r\n    }\r\n\r\n    async startEngineScene(player, room, previousScene = false)\r\n    {\r\n        await this.events.emit('reldens.startEngineScene', this, player, room, previousScene);\r\n        let uiScene = false;\r\n        if(!this.gameEngine.uiScene){\r\n            uiScene = true;\r\n        }\r\n        let preloaderName = GameConst.SCENE_PRELOADER+this.roomName;\r\n        !this.gameEngine.scene.getScene(preloaderName)\r\n            ? await this.createPreloaderAndScene(preloaderName, uiScene, player, room, previousScene)\r\n            : await this.createEngineOnScene(preloaderName, player, room, previousScene);\r\n    }\r\n\r\n    async createEngineOnScene(preloaderName, player, room, previousScene)\r\n    {\r\n        let currentScene = this.getActiveScene();\r\n        currentScene.objectsAnimationsData = this.roomData.objectsAnimationsData;\r\n        this.scenePreloader = this.gameEngine.scene.getScene(preloaderName);\r\n        await this.events.emit('reldens.createdPreloaderRecurring', this, this.scenePreloader);\r\n        await this.createEngineScene(player, room, previousScene);\r\n    }\r\n\r\n    async createPreloaderAndScene(preloaderName, uiScene, player, room, previousScene)\r\n    {\r\n        this.scenePreloader = this.createPreloaderInstance({\r\n            name: preloaderName,\r\n            map: this.roomData.roomMap,\r\n            images: this.roomData.sceneImages,\r\n            uiScene: uiScene,\r\n            gameManager: this.gameManager,\r\n            preloadAssets: this.roomData.preloadAssets,\r\n            objectsAnimationsData: this.roomData.objectsAnimationsData\r\n        });\r\n        this.gameEngine.scene.add(preloaderName, this.scenePreloader, true);\r\n        await this.events.emit('reldens.createdPreloaderInstance', this, this.scenePreloader);\r\n        let preloader = this.gameEngine.scene.getScene(preloaderName);\r\n        preloader.load.on('complete', async () => {\r\n            // set ui on first preloader scene:\r\n            if(!this.gameEngine.uiScene){\r\n                this.gameEngine.uiScene = preloader;\r\n                // if the box right is present then assign the actions:\r\n                this.showPlayerName(this.gameManager.playerData.id + ' - ' + this.gameManager.playerData.name);\r\n            }\r\n            await this.createEngineScene(player, room, previousScene);\r\n        });\r\n    }\r\n\r\n    showPlayerName(playerName)\r\n    {\r\n        let playerBox = this.gameManager.getUiElement('playerBox');\r\n        if(!playerBox){\r\n            return false;\r\n        }\r\n        let element = playerBox.getChildByProperty('className', 'player-name');\r\n        if(!element){\r\n            return false;\r\n        }\r\n        element.innerHTML = playerName;\r\n    }\r\n\r\n    async createEngineScene(player, room, previousScene)\r\n    {\r\n        let previousSceneInstance = this.gameEngine.scene.getScene(previousScene);\r\n        if(previousSceneInstance){\r\n            previousSceneInstance.scene.setVisible(false);\r\n        }\r\n        // this event happens once for every scene:\r\n        await this.events.emit('reldens.createEngineScene', player, room, previousScene, this);\r\n        !this.gameManager.room\r\n            ? this.gameEngine.scene.start(player.state.scene)\r\n            : await this.destroyPreviousScene(previousScene, player);\r\n        this.gameManager.room = room;\r\n        let currentScene = this.gameEngine.scene.getScene(player.state.scene);\r\n        currentScene.player = this.createPlayerEngineInstance(currentScene, player, this.gameManager, room);\r\n        currentScene.player.create();\r\n        this.addExistentPlayers(room, currentScene);\r\n        this.updateSceneLabel(this.roomData.roomTitle);\r\n        // @NOTE: player states must be requested since are private user data that we can share with other players or\r\n        // broadcast to the rooms.\r\n        // request player stats after the player was added to the scene:\r\n        this.send({act: GameConst.PLAYER_STATS});\r\n        // send notification about client joined:\r\n        this.send({act: GameConst.CLIENT_JOINED});\r\n        let playerAddEventData = { player: currentScene.player, previousScene, roomEvents: this};\r\n        await this.events.emit('reldens.playersOnAddReady', playerAddEventData);\r\n        let eventData = {currentScene, previousScene, roomEvents: this};\r\n        await this.events.emit('reldens.createEngineSceneDone', eventData);\r\n        return eventData;\r\n    }\r\n\r\n    addExistentPlayers(room, currentScene)\r\n    {\r\n        if(0 === this.playersCountFromState(room)){\r\n            return false;\r\n        }\r\n        for(let i of this.playersKeysFromState(room)){\r\n            let tmp = this.playerBySessionIdFromState(room, i);\r\n            if(!tmp.sessionId || tmp.sessionId === room.sessionId){\r\n                continue;\r\n            }\r\n            let addPlayerData = {\r\n                x: tmp.state.x,\r\n                y: tmp.state.y,\r\n                dir: tmp.state.dir,\r\n                playerName: tmp.playerName,\r\n                playedTime: tmp.playedTime,\r\n                avatarKey: tmp.avatarKey,\r\n                player_id: tmp.player_id\r\n            };\r\n            currentScene.player.addPlayer(tmp.sessionId, addPlayerData);\r\n        }\r\n    }\r\n\r\n    playerBySessionIdFromState(room, i)\r\n    {\r\n        // @TODO - BETA - Refactor and extract Colyseus into a driver.\r\n        return room.state.players.get(i);\r\n    }\r\n\r\n    playersCountFromState(room)\r\n    {\r\n        // @TODO - BETA - Refactor and extract Colyseus into a driver.\r\n        return room.state.players.size;\r\n    }\r\n\r\n    playersKeysFromState(room)\r\n    {\r\n        // @TODO - BETA - Refactor and extract Colyseus into a driver.\r\n        return Array.from(room.state.players.keys());\r\n    }\r\n\r\n    async destroyPreviousScene(previousScene, player)\r\n    {\r\n        if(!previousScene){\r\n            Logger.warning('Missing previous scene data.', previousScene);\r\n            return false;\r\n        }\r\n        let previousSceneInstance = this.gameEngine.scene.getScene(previousScene);\r\n        if(!previousSceneInstance){\r\n            Logger.warning('Missing previous scene instance.', previousSceneInstance);\r\n            return false;\r\n        }\r\n        await previousSceneInstance.changeScene();\r\n        this.gameEngine.scene.stop(previousScene);\r\n        this.gameEngine.scene.start(player.state.scene);\r\n    }\r\n\r\n    updateSceneLabel(newLabel)\r\n    {\r\n        let sceneLabel = this.gameManager.getUiElement('sceneLabel');\r\n        // if scene label is visible assign the data to the box:\r\n        if(!sceneLabel){\r\n            return false;\r\n        }\r\n        let element = sceneLabel.getChildByProperty('className', 'scene-label');\r\n        if(!element){\r\n            return false;\r\n        }\r\n        element.innerHTML = newLabel;\r\n    }\r\n\r\n    getActiveScene()\r\n    {\r\n        return this.gameEngine.scene.getScene(this.roomName);\r\n    }\r\n\r\n    createSceneInstance(sceneName, sceneData, gameManager)\r\n    {\r\n        return new SceneDynamic(sceneName, sceneData, gameManager);\r\n    }\r\n\r\n    createPlayerEngineInstance(currentScene, player, gameManager, room)\r\n    {\r\n        return new PlayerEngine({scene: currentScene, playerData: player, gameManager, room, roomEvents: this});\r\n    }\r\n\r\n    createPreloaderInstance(props)\r\n    {\r\n        return new ScenePreloader(props);\r\n    }\r\n\r\n    send(data, key)\r\n    {\r\n        try {\r\n            if(this.room.connection.transport.ws.readyState === this.room.connection.transport.ws.CLOSED){\r\n                ErrorManager.error('Connection lost.');\r\n            }\r\n            if(this.room.connection.transport.ws.readyState === this.room.connection.transport.ws.CLOSING){\r\n                //Logger.debug('Expected, connection closing.', key, data);\r\n                return false;\r\n            }\r\n            if(!key){\r\n                key = '*';\r\n            }\r\n            this.room.send(key, data);\r\n            return true;\r\n        } catch (error) {\r\n            Logger.critical(error.message, data);\r\n        }\r\n        this.gameDom.alertReload(this.gameManager.services.translator.t('game.errors.connectionLost'));\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.RoomEvents = RoomEvents;\r\n","/**\r\n *\r\n * Reldens - PlayerEngine\r\n *\r\n */\r\n\r\nconst { SpriteTextFactory } = require('../../game/client/engine/sprite-text-factory');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { ActionsConst } = require('../../actions/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass PlayerEngine\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        // @TODO - BETA - Refactor entirely.\r\n        let {scene, playerData, gameManager, room, roomEvents} = props;\r\n        this.scene = scene;\r\n        this.config = gameManager.config;\r\n        this.gameManager = gameManager;\r\n        this.events = gameManager.events;\r\n        this.playerName = playerData.playerName;\r\n        this.avatarKey = playerData.avatarKey;\r\n        this.roomName = playerData.state.scene;\r\n        this.state = playerData.state;\r\n        this.room = room;\r\n        this.roomEvents = roomEvents;\r\n        this.playerId = room.sessionId;\r\n        this.player_id = playerData.player_id; // id from storage\r\n        this.players = {};\r\n        this.playedTime = playerData.playedTime;\r\n        this.mov = false;\r\n        this.dir = false;\r\n        this.currentTarget = false;\r\n        this.pointsValidator = false;\r\n        // @TODO - BETA - Set all the configs in a single config property.\r\n        this.animationBasedOnPress = this.config.get('client/players/animations/basedOnPress');\r\n        // @TODO - BETA - Make size configurations depend on class-paths assets if present.\r\n        this.topOff = this.config.get('client/players/size/topOffset');\r\n        this.leftOff = this.config.get('client/players/size/leftOffset');\r\n        this.collideWorldBounds = this.config.get('client/players/animations/collideWorldBounds');\r\n        this.fadeDuration = Number(this.config.get('client/players/animations/fadeDuration'));\r\n        this.cameraRoundPixels = Boolean(\r\n            this.config.getWithoutLogs('client/general/engine/cameraRoundPixels', true)\r\n        );\r\n        this.cameraInterpolationX = Number(\r\n            this.config.getWithoutLogs('client/general/engine/cameraInterpolationX', 0.02)\r\n        );\r\n        this.cameraInterpolationY = Number(\r\n            this.config.getWithoutLogs('client/general/engine/cameraInterpolationY', 0.02)\r\n        );\r\n        this.globalConfigNameText = this.config.get('client/ui/players/nameText');\r\n        this.globalConfigShowNames = Boolean(this.config.get('client/ui/players/showNames'));\r\n        this.globalConfigShowNamesLimit = this.config.getWithoutLogs('client/ui/players/showNamesLimit', 10);\r\n        this.defaultActionKeyConfig = this.config.get('client/ui/controls/defaultActionKey');\r\n        this.highlightOnOver = Boolean(this.config.getWithoutLogs('client/ui/players/highlightOnOver', true));\r\n        this.highlightColor = this.config.getWithoutLogs('client/ui/players/highlightColor', '0x00ff00');\r\n        this.lastKeyState = {};\r\n    }\r\n\r\n    create()\r\n    {\r\n        let addPlayerData = {\r\n            x: this.state.x,\r\n            y: this.state.y,\r\n            dir: this.state.dir,\r\n            playerName: this.playerName,\r\n            avatarKey: this.avatarKey,\r\n            playedTime: this.playedTime,\r\n            player_id: this.player_id\r\n        };\r\n        this.addPlayer(this.playerId, addPlayerData);\r\n        this.scene.cameras.main.startFollow(this.players[this.playerId]);\r\n        this.scene.scene.setVisible(true, this.roomName);\r\n        this.scene.cameras.main.fadeFrom(this.fadeDuration);\r\n        this.scene.physics.world.fixedStep = false;\r\n        this.scene.physics.world.setBounds(0, 0, this.scene.map.widthInPixels, this.scene.map.heightInPixels);\r\n        this.scene.cameras.main.setBounds(0, 0, this.scene.map.widthInPixels, this.scene.map.heightInPixels);\r\n        this.scene.cameras.main.setIsSceneCamera(true);\r\n        this.scene.cameras.main.on('camerafadeincomplete', () => {\r\n            this.scene.cameras.main.startFollow(this.players[this.playerId]);\r\n            this.scene.cameras.main.setLerp(this.cameraInterpolationX, this.cameraInterpolationY);\r\n            this.scene.cameras.main.setRoundPixels(this.cameraRoundPixels);\r\n        });\r\n    }\r\n\r\n    addPlayer(id, addPlayerData)\r\n    {\r\n        // @TODO - BETA - Create a PlayersManager attached to the Scene and move all the players handler methods there.\r\n        if(sc.hasOwn(this.players, id)){\r\n            // player sprite already exists, update it and return it:\r\n            return this.players[id];\r\n        }\r\n        let {x, y, dir, playerName, avatarKey, playedTime, player_id} = addPlayerData;\r\n        let mappedAvatarKey = this.gameManager.mappedAvatars[avatarKey];\r\n        //Logger.debug({mappedAvatarKey, avatarKey, mappedAvatars: this.gameManager.mappedAvatars});\r\n        this.players[id] = this.scene.physics.add.sprite(x, (y - this.topOff), mappedAvatarKey);\r\n        this.players[id].playerName = playerName;\r\n        this.players[id].playedTime = playedTime;\r\n        this.players[id].avatarKey = avatarKey;\r\n        this.players[id].playerId = id;\r\n        this.players[id].player_id = player_id;\r\n        this.players[id].anims.play(mappedAvatarKey+'_'+dir);\r\n        this.players[id].anims.stop();\r\n        this.showPlayerName(id);\r\n        this.makePlayerInteractive(id);\r\n        this.players[id].moveSprites = {};\r\n        this.players[id].setDepth(this.players[id].y + this.players[id].body.height);\r\n        this.players[id].setCollideWorldBounds(this.collideWorldBounds);\r\n        this.events.emitSync('reldens.playerEngineAddPlayer', this, id, addPlayerData);\r\n        return this.players[id];\r\n    }\r\n\r\n    makePlayerInteractive(id)\r\n    {\r\n        this.players[id].setInteractive({useHandCursor: true}).on('pointerdown', (e) => {\r\n            // @NOTE: we avoid execute object interactions while the UI element is open, if we click on the UI the other\r\n            // elements in the background scene should not be executed.\r\n            if(GameConst.SELECTORS.CANVAS !== e.downElement.nodeName){\r\n                return false;\r\n            }\r\n            // @NOTE: we could send a specific action when the player has been targeted.\r\n            // this.roomEvents.send('*', {act: GameConst.TYPE_PLAYER, id: id});\r\n            // update target ui:\r\n            this.setTargetPlayerById(id);\r\n        });\r\n        if(this.highlightOnOver){\r\n            this.players[id].on('pointerover', () => {\r\n                this.players[id].setTint(this.highlightColor);\r\n            });\r\n            this.players[id].on('pointerout', () => {\r\n                this.players[id].clearTint();\r\n            });\r\n        }\r\n    }\r\n\r\n    setTargetPlayerById(id)\r\n    {\r\n        if(!sc.get(this.players, id, false)){\r\n            Logger.info('Target player ID \"'+id+'\" was not found.');\r\n            this.gameManager.gameEngine.clearTarget();\r\n            return false;\r\n        }\r\n        let previousTarget = Object.assign({}, this.currentTarget);\r\n        this.currentTarget = {id: id, type: GameConst.TYPE_PLAYER, player_id: this.players[id].player_id};\r\n        this.gameManager.gameEngine.showTarget(this.players[id].playerName, this.currentTarget, previousTarget);\r\n    }\r\n\r\n    showPlayerName(id)\r\n    {\r\n        if(!this.globalConfigShowNames){\r\n            return false;\r\n        }\r\n        if(!this.players[id]){\r\n            Logger.critical('Player ID \"'+id+'\" not found.', this.players);\r\n            return false;\r\n        }\r\n        let showName = this.players[id].playerName;\r\n        if(!showName){\r\n            Logger.critical('Player name not found on player ID \"'+id+'\".', this.players[id]);\r\n            return false;\r\n        }\r\n        SpriteTextFactory.attachTextToSprite(\r\n            this.players[id],\r\n            this.applyNameLengthLimit(showName),\r\n            this.globalConfigNameText,\r\n            this.topOff,\r\n            'nameSprite',\r\n            this.scene\r\n        );\r\n    }\r\n\r\n    applyNameLengthLimit(showName)\r\n    {\r\n        if(0 < this.globalConfigShowNamesLimit && showName.length > this.globalConfigShowNamesLimit){\r\n            showName = showName.slice(0, this.globalConfigShowNamesLimit) + '...';\r\n        }\r\n        return showName;\r\n    }\r\n\r\n    updatePlayer(playerId, player)\r\n    {\r\n        let playerSprite = this.players[playerId];\r\n        if(!playerSprite){\r\n            Logger.error('PlayerSprite not defined.', this.players, playerId);\r\n            return;\r\n        }\r\n        Logger.debug('Updating player ID \"'+playerId+'\". - Current player ID \"'+this.player_id+'\".');\r\n        if(this.scene.clientInterpolation){\r\n            this.scene.interpolatePlayersPosition[playerId] = player.state;\r\n            return;\r\n        }\r\n        this.processPlayerPositionAnimationUpdate(\r\n            playerSprite,\r\n            player.state,\r\n            playerId,\r\n            player.state.x - this.leftOff,\r\n            player.state.y - this.topOff\r\n        );\r\n    }\r\n\r\n    processPlayerPositionAnimationUpdate(playerSprite, playerState, playerId, newX = 0, newY = 0)\r\n    {\r\n        Logger.debug('Process player position animation update.', {playerSprite, playerState, playerId, newX, newY});\r\n        if(!playerSprite){\r\n            Logger.error('Missing player sprite to process animation update.', playerSprite, playerState, playerId);\r\n            return;\r\n        }\r\n        if(!playerState){\r\n            Logger.error('Missing player state to process animation update.', playerSprite, playerState, playerId);\r\n            return;\r\n        }\r\n        if(!playerId){\r\n            Logger.error('Missing player ID to process animation update.', playerSprite, playerState, playerId);\r\n            return;\r\n        }\r\n        let currentInterpolations = Object.keys(this.scene.interpolatePlayersPosition);\r\n        if(0 === currentInterpolations.length){\r\n            return;\r\n        }\r\n        if(GameConst.STATUS.DEATH === playerState.inState || GameConst.STATUS.DISABLED === playerState.inState){\r\n            delete this.scene.interpolatePlayersPosition[playerId];\r\n            return;\r\n        }\r\n        this.playPlayerAnimation(playerSprite, playerState, playerId);\r\n        this.stopPlayerAnimation(playerSprite, playerState);\r\n        this.updateSpritePosition(playerSprite, newX, newY);\r\n        this.updatePlayerState(playerSprite, playerState, playerId);\r\n    }\r\n\r\n    updatePlayerState(playerSprite, playerState, playerId)\r\n    {\r\n        // @NOTE: depth has to be set dynamically, this way the player will be above or below other objects.\r\n        let playerNewDepth = playerSprite.y + playerSprite.body.height;\r\n        if(playerSprite.depth !== playerNewDepth){\r\n            playerSprite.setDepth(playerNewDepth);\r\n        }\r\n        this.events.emitSync('reldens.runPlayerAnimation', this, playerId, playerState, playerSprite);\r\n        this.updateNamePosition(playerSprite);\r\n        this.moveAttachedSprites(playerSprite, playerNewDepth);\r\n    }\r\n\r\n    updateSpritePosition(sprite, newX, newY)\r\n    {\r\n        if(sprite.x !== newX){\r\n            sprite.x = newX;\r\n        }\r\n        if(sprite.y !== newY){\r\n            sprite.y = newY;\r\n        }\r\n    }\r\n\r\n    updateNamePosition(playerSprite)\r\n    {\r\n        if(!this.globalConfigShowNames || !playerSprite['nameSprite']){\r\n            return false;\r\n        }\r\n        let relativeNamePosition = SpriteTextFactory.getTextPosition(\r\n            playerSprite,\r\n            this.applyNameLengthLimit(playerSprite.playerName),\r\n            this.globalConfigNameText,\r\n            this.topOff\r\n        );\r\n        playerSprite['nameSprite'].x = relativeNamePosition.x;\r\n        playerSprite['nameSprite'].y = relativeNamePosition.y;\r\n    }\r\n\r\n    moveAttachedSprites(playerSprite, playerNewDepth)\r\n    {\r\n        let moveSpriteKeys = Object.keys(playerSprite.moveSprites);\r\n        if(0 === moveSpriteKeys.length){\r\n            return false;\r\n        }\r\n        for(let i of moveSpriteKeys){\r\n            let sprite = playerSprite.moveSprites[i];\r\n            if(sprite.x === playerSprite.x && sprite.y === playerSprite.y){\r\n                continue;\r\n            }\r\n            sprite.x = playerSprite.x;\r\n            sprite.y = playerSprite.y;\r\n            // by default moving sprites will be always below the player:\r\n            let newSpriteDepth = playerNewDepth + (sc.get(sprite, 'depthByPlayer', '') === 'above' ? 1 :  -0.1);\r\n            Logger.debug('Sprite \"'+i+'\" new depth: '+newSpriteDepth+'.', sprite);\r\n            sprite.setDepth(newSpriteDepth);\r\n        }\r\n    }\r\n\r\n    playPlayerAnimation(playerSprite, playerState, playerId)\r\n    {\r\n        if(this.isDeath(playerState) || this.isDisabled(playerState)){\r\n            Logger.debug('Player with ID \"'+playerId+'\" is disabled to play the animation.', playerState);\r\n            return false;\r\n        }\r\n        Logger.debug('Play player animation.', playerSprite.avatarKey, playerState);\r\n        // @NOTE: player speed is defined by the server.\r\n        let activeAvatarKey = this.gameManager.mappedAvatars[playerSprite.avatarKey];\r\n        if(this.animationBasedOnPress){\r\n            let directionKey = activeAvatarKey+'_'+playerState.dir;\r\n            if(playerState.x === playerSprite.x && playerState.y === playerSprite.y){\r\n                Logger.debug('Player has not changed, skipped animation \"'+directionKey+'\".');\r\n                return false;\r\n            }\r\n            Logger.debug('Animation played based on press active.', activeAvatarKey,\r\n                {\r\n                    x: playerState.x+' / '+playerSprite.x,\r\n                    y: playerState.y+' / '+playerSprite.y\r\n                }\r\n            );\r\n            playerSprite.anims.play(directionKey, true);\r\n            return;\r\n        }\r\n        if(playerState.x !== playerSprite.x){\r\n            let directionToPlayX = playerState.x < playerSprite.x\r\n                ? activeAvatarKey+'_'+GameConst.LEFT\r\n                : activeAvatarKey+'_'+GameConst.RIGHT;\r\n            playerSprite.anims.play(directionToPlayX, true);\r\n        }\r\n        if(playerState.y !== playerSprite.y){\r\n            let directionToPlayY = playerState.y < playerSprite.y\r\n                ? activeAvatarKey+'_'+GameConst.UP\r\n                : activeAvatarKey+'_'+GameConst.DOWN;\r\n            playerSprite.anims.play(directionToPlayY, true);\r\n        }\r\n    }\r\n\r\n    stopPlayerAnimation(playerSprite, playerState)\r\n    {\r\n        // if not moving then stop the player animation:\r\n        if(playerState.mov){\r\n            return;\r\n        }\r\n        playerSprite.anims.stop();\r\n        playerSprite.mov = playerState.mov;\r\n    }\r\n\r\n    removePlayer(key)\r\n    {\r\n        if(!sc.hasOwn(this.players, key) || !sc.hasOwn(this.players[key], 'nameSprite')){\r\n            return;\r\n        }\r\n        this.players[key]['nameSprite'].destroy();\r\n        this.players[key].destroy();\r\n        delete this.players[key];\r\n    }\r\n\r\n    left()\r\n    {\r\n        if('pressed' === this.lastKeyState[GameConst.LEFT]){\r\n            return;\r\n        }\r\n        this.lastKeyState[GameConst.LEFT] = 'pressed';\r\n        this.roomEvents.send({dir: GameConst.LEFT});\r\n    }\r\n\r\n    right()\r\n    {\r\n        if('pressed' === this.lastKeyState[GameConst.RIGHT]){\r\n            return;\r\n        }\r\n        this.lastKeyState[GameConst.RIGHT] = 'pressed';\r\n        this.roomEvents.send({dir: GameConst.RIGHT});\r\n    }\r\n\r\n    up()\r\n    {\r\n        if('pressed' === this.lastKeyState[GameConst.UP]){\r\n            return;\r\n        }\r\n        this.lastKeyState[GameConst.UP] = 'pressed';\r\n        this.roomEvents.send({dir: GameConst.UP});\r\n    }\r\n\r\n    down()\r\n    {\r\n        if('pressed' === this.lastKeyState[GameConst.DOWN]){\r\n            return;\r\n        }\r\n        this.lastKeyState[GameConst.DOWN] = 'pressed';\r\n        this.roomEvents.send({dir: GameConst.DOWN});\r\n    }\r\n\r\n    stop()\r\n    {\r\n        this.lastKeyState[GameConst.LEFT] = '';\r\n        this.lastKeyState[GameConst.RIGHT] = '';\r\n        this.lastKeyState[GameConst.UP] = '';\r\n        this.lastKeyState[GameConst.DOWN] = '';\r\n        this.roomEvents.send({act: GameConst.STOP});\r\n    }\r\n\r\n    runActions()\r\n    {\r\n        let actionKey = this.defaultActionKeyConfig || 'physical_attack';\r\n        this.roomEvents.send({\r\n            act: ActionsConst.ACTION,\r\n            type: actionKey,\r\n            target: this.currentTarget\r\n        });\r\n    }\r\n\r\n    moveToPointer(pointer)\r\n    {\r\n        if(this.isDeath() || this.isDisabled()){\r\n            this.fullStop();\r\n            return false;\r\n        }\r\n        this.lastKeyState[GameConst.LEFT] = '';\r\n        this.lastKeyState[GameConst.RIGHT] = '';\r\n        this.lastKeyState[GameConst.UP] = '';\r\n        this.lastKeyState[GameConst.DOWN] = '';\r\n        this.roomEvents.send({\r\n            act: GameConst.POINTER,\r\n            column: pointer.worldColumn,\r\n            row: pointer.worldRow,\r\n            x: pointer.worldX - this.leftOff,\r\n            y: pointer.worldY - this.topOff\r\n        });\r\n    }\r\n\r\n    isDisabled(state)\r\n    {\r\n        if(!state){\r\n            state = this.state;\r\n        }\r\n        return GameConst.STATUS.DISABLED === state.inState;\r\n    }\r\n\r\n    isDeath(state)\r\n    {\r\n        if(!state){\r\n            state = this.state;\r\n        }\r\n        return GameConst.STATUS.DEATH === state.inState;\r\n    }\r\n\r\n    fullStop()\r\n    {\r\n        delete this.scene.interpolatePlayersPosition[this.player_id];\r\n        this.stop();\r\n    }\r\n\r\n    getPosition()\r\n    {\r\n        return {\r\n            x: this.players[this.playerId].x,\r\n            y: this.players[this.playerId].y\r\n        };\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PlayerEngine = PlayerEngine;\r\n","/**\r\n *\r\n * Reldens - SpriteTextFactory\r\n *\r\n */\r\n\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass SpriteTextFactory\r\n{\r\n\r\n    static attachTextToSprite(sprite, text, textConfig, topOff, textKeyWord, scene)\r\n    {\r\n        let relativeNamePosition = this.getTextPosition(sprite, text, textConfig, topOff);\r\n        let textSprite = scene.add.text(\r\n            relativeNamePosition.x,\r\n            relativeNamePosition.y,\r\n            text,\r\n            {\r\n                fontFamily: sc.get(textConfig, 'fontFamily', 'sans-serif'),\r\n                fontSize: sc.get(textConfig, 'fontSize', '12px')\r\n            }\r\n        );\r\n        textSprite.style.setFill(sc.get(textConfig, 'fill', '#ffffff'));\r\n        textSprite.style.setAlign(sc.get(textConfig, 'align', 'center'));\r\n        textSprite.style.setStroke(sc.get(textConfig, 'stroke', '#000000'), sc.get(textConfig, 'strokeThickness', 4));\r\n        textSprite.style.setShadow(\r\n            sc.get(textConfig, 'shadowX', 5),\r\n            sc.get(textConfig, 'shadowY', 5),\r\n            sc.get(textConfig, 'shadowColor', 'rgba(0,0,0,0.7)'),\r\n            sc.get(textConfig, 'shadowBlur', 5)\r\n        );\r\n        textSprite.setDepth(sc.get(textConfig, 'depth', 200000));\r\n        sprite[textKeyWord] = textSprite;\r\n        return textSprite;\r\n    }\r\n\r\n    static getTextPosition(sprite, text, textConfig, topOff = 0)\r\n    {\r\n        if(!sprite){\r\n            return {x: 0, y:0};\r\n        }\r\n        let height = sc.get(textConfig, 'height', 18);\r\n        let x = sprite.x - ((text.length * sc.get(textConfig, 'textLength', 4)));\r\n        let y = sprite.y - height - sprite.height + topOff;\r\n        return {x, y};\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.SpriteTextFactory = SpriteTextFactory;\r\n","/**\r\n *\r\n * Reldens - ActionsConst\r\n *\r\n */\r\n\r\nlet snippetsPrefix = 'actions.';\r\n\r\nmodule.exports.ActionsConst = {\r\n    BATTLE_TYPE_PER_TARGET: 'bt',\r\n    BATTLE_TYPE_GENERAL: 'bg',\r\n    BATTLE_ENDED: 'bend',\r\n    TARGET_POSITION: 'tgp',\r\n    TARGET_PLAYER: 'tga',\r\n    TARGET_OBJECT: 'tgo',\r\n    FULL_SKILLS_LIST: 'fkl',\r\n    ACTION: 'action',\r\n    DATA_OBJECT_KEY_TARGET: 't',\r\n    DATA_OBJECT_KEY_OWNER: 'o',\r\n    DATA_TARGET_TYPE: 'tT',\r\n    DATA_TARGET_KEY: 'tK',\r\n    DATA_OWNER_TYPE: 'oT',\r\n    DATA_OWNER_KEY: 'oK',\r\n    DATA_TYPE_VALUE_ENEMY: 'e',\r\n    DATA_TYPE_VALUE_PLAYER: 'p',\r\n    DATA_TYPE_VALUE_OBJECT: 'o',\r\n    EXTRA_DATA: {\r\n        KEY: 'sked',\r\n        SKILL_DELAY: 'sd'\r\n    },\r\n    DEFAULT_HIT_ANIMATION_KEY: 'default_hit',\r\n    ACTIONS: {\r\n        SUFFIX: {\r\n            ATTACK: '_atk',\r\n            EFFECT: '_eff',\r\n            HIT: '_hit'\r\n        }\r\n    },\r\n    MESSAGE: {\r\n        DATA: {\r\n            LEVEL: 'lvl',\r\n            EXPERIENCE: 'exp',\r\n            CLASS_PATH_LABEL: 'lab',\r\n            NEXT_LEVEL_EXPERIENCE: 'ne',\r\n            SKILL_LEVEL: 'skl',\r\n            LAST_ATTACK_KEY: 'k'\r\n        },\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'actions',\r\n            lvl: 'level',\r\n            exp: 'experience',\r\n            lab: 'classPathLabel',\r\n            ne: 'nextLevelExperience',\r\n            skl: 'skillLevel'\r\n        }\r\n    },\r\n    SELECTORS: {\r\n        LEVEL_LABEL: '.level-container .level-label',\r\n        CURRENT_EXPERIENCE: '.experience-container .current-experience',\r\n        NEXT_LEVEL_EXPERIENCE: '.experience-container .next-level-experience',\r\n        PLAYER_CREATE_FORM: '#player-create-form',\r\n        UI_PLAYER_EXTRAS: '#ui-player-extras',\r\n        PLAYER_CREATION_ADDITIONAL_INFO: '.player-creation-additional-info',\r\n        PLAYER_SELECTION_ADDITIONAL_INFO: '.player-selection-additional-info',\r\n        CLASS_PATH_LABEL: '.class-path-container .class-path-label',\r\n        SKILLS_CONTAINER: '.skills-container'\r\n    },\r\n    SNIPPETS: {\r\n        PREFIX: snippetsPrefix,\r\n        SELECT_CLASS_PATH: snippetsPrefix+'selectClassPath',\r\n        EXPERIENCE_LABEL: snippetsPrefix+'experienceLabel',\r\n        LEVEL: snippetsPrefix+'currentLevel',\r\n        CLASS_PATH_LABEL: snippetsPrefix+'classPathLabel',\r\n        NEXT_LEVEL_EXPERIENCE: snippetsPrefix+'nextLevelExperience',\r\n        EXPERIENCE: snippetsPrefix+'experience'\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - SceneDynamic\r\n *\r\n */\r\n\r\nconst { Scene, Input } = require('phaser');\r\nconst { TileSetAnimation } = require('./tileset-animation');\r\nconst { Minimap } = require('./minimap');\r\nconst { GameConst } = require('../constants');\r\nconst { ActionsConst } = require('../../actions/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\nconst { ObjectsConst } = require('../../objects/constants');\r\n\r\nclass SceneDynamic extends Scene\r\n{\r\n\r\n    constructor(key, data, gameManager)\r\n    {\r\n        super({key});\r\n        this.key = key;\r\n        this.params = data;\r\n        this.gameManager = gameManager;\r\n        this.eventsManager = gameManager.events;\r\n        this.configManager = gameManager.config;\r\n        this.layers = {};\r\n        this.transition = true;\r\n        this.useTsAnimation = false;\r\n        this.arrowSprite = false;\r\n        this.objectsAnimationsData = false;\r\n        this.objectsAnimations = {};\r\n        this.setPropertiesFromConfig();\r\n        this.minimap = this.createMinimapInstance(this.minimapConfig);\r\n        this.player = false;\r\n        this.interpolatePlayersPosition = {};\r\n        this.interpolateObjectsPositions = {};\r\n        this.tilesets = [];\r\n        this.tilesetAnimations = [];\r\n        this.stopOnDeathOrDisabledSent = false;\r\n    }\r\n\r\n    setPropertiesFromConfig()\r\n    {\r\n        // @TODO - BETA - Move defaults to constants.\r\n        if(!this.configManager){\r\n            this.configuredFrameRate = 10;\r\n            this.clientInterpolation = true;\r\n            this.interpolationSpeed = 0.1;\r\n            this.minimapConfig = {};\r\n            return false;\r\n        }\r\n        this.configuredFrameRate = this.configManager.getWithoutLogs('client/general/animations/frameRate', 10);\r\n        this.clientInterpolation = this.configManager.getWithoutLogs('client/general/engine/clientInterpolation', true);\r\n        this.interpolationSpeed = this.configManager.getWithoutLogs('client/general/engine/interpolationSpeed', 0.1);\r\n        this.minimapConfig = this.configManager.getWithoutLogs('client/ui/minimap', {});\r\n        return true;\r\n    }\r\n\r\n    createMinimapInstance(config)\r\n    {\r\n        if(!this.minimapConfig.enabled){\r\n            return false;\r\n        }\r\n        return new Minimap({config, events: this.eventsManager});\r\n    }\r\n\r\n    init()\r\n    {\r\n        this.scene.setVisible(false, this.key);\r\n        this.input.keyboard.removeAllListeners();\r\n    }\r\n\r\n    async create()\r\n    {\r\n        this.eventsManager.emitSync('reldens.beforeSceneDynamicCreate', this);\r\n        this.disableContextMenu();\r\n        this.createControllerKeys();\r\n        this.setupKeyboardAndPointerEvents();\r\n        await this.createSceneMap();\r\n        this.cameras.main.on('camerafadeincomplete', () => {\r\n            this.transition = false;\r\n            this.gameManager.gameDom.activeElement().blur();\r\n            this.minimap.createMap(this, this.gameManager.getCurrentPlayerAnimation());\r\n            this.gameManager.isChangingScene = false;\r\n        });\r\n        this.eventsManager.emitSync('reldens.afterSceneDynamicCreate', this);\r\n    }\r\n\r\n    update(time, delta)\r\n    {\r\n        this.interpolatePositions();\r\n        this.movePlayerByPressedButtons();\r\n    }\r\n\r\n    disableContextMenu()\r\n    {\r\n        if(!this.gameManager.config.get('client/ui/controls/disableContextMenu')){\r\n            return false;\r\n        }\r\n        this.gameManager.gameDom.getDocument().addEventListener('contextmenu', (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        });\r\n    }\r\n\r\n    setupKeyboardAndPointerEvents()\r\n    {\r\n        this.input.keyboard.on('keydown', (event) => {\r\n            return this.executeKeyDownBehavior(event);\r\n        });\r\n        this.input.keyboard.on('keyup', (event) => {\r\n            this.executeKeyUpBehavior(event);\r\n        });\r\n        this.input.on('pointerdown', (pointer, currentlyOver) => {\r\n            return this.executePointerDownAction(pointer, currentlyOver);\r\n        });\r\n    }\r\n\r\n    async createSceneMap()\r\n    {\r\n        this.map = this.make.tilemap({key: this.params.roomName});\r\n        for(let imageKey of this.params.sceneImages){\r\n            let tileset = this.map.addTilesetImage(this.params.roomName, imageKey);\r\n            if(!tileset){\r\n                Logger.critical(\r\n                    'Tileset creation error. Check if the tileset name equals the imageKey without the extension.',\r\n                    {\r\n                        roomName: this.params.roomName,\r\n                        imageKeys: this.params.sceneImages,\r\n                        createdTileset: tileset\r\n                    }\r\n                );\r\n            }\r\n            //Logger.debug('Created tileset.', imageKey, this.params.roomName);\r\n            this.tilesets.push(tileset);\r\n        }\r\n        this.registerLayers();\r\n        this.registerTilesetAnimation();\r\n    }\r\n\r\n    registerTilesetAnimation()\r\n    {\r\n        for(let tileset of this.tilesets){\r\n            if(!this.hasTilesetAnimations(tileset)){\r\n                continue;\r\n            }\r\n            this.useTsAnimation = true;\r\n            for(let i of Object.keys(this.layers)){\r\n                let layer = this.layers[i];\r\n                let tilesetAnimation = new TileSetAnimation();\r\n                tilesetAnimation.register(layer, tileset);\r\n                tilesetAnimation.start();\r\n                this.tilesetAnimations.push(tilesetAnimation);\r\n            }\r\n        }\r\n    }\r\n\r\n    hasTilesetAnimations(tileset)\r\n    {\r\n        let tilesData = tileset?.tileData || {};\r\n        let dataKeys = Object.keys(tilesData);\r\n        if(0 === dataKeys.length){\r\n            return false;\r\n        }\r\n        for(let i of dataKeys){\r\n            if(tilesData[i].animation){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    executeKeyDownBehavior(event)\r\n    {\r\n        if(this.gameManager.gameDom.insideInput()){\r\n            return false;\r\n        }\r\n        // @TODO - BETA - Make configurable the keys related to the actions and skills.\r\n        if(Input.Keyboard.KeyCodes.SPACE === event.keyCode && !this.gameManager.gameDom.insideInput()){\r\n            if(!this.player){\r\n                return;\r\n            }\r\n            // If no target selected, auto-target nearest enemy and attack.\r\n            if(!this.player.currentTarget){\r\n                let nearest = null;\r\n                let tName = '';\r\n                let objects = this.objectsAnimations || {};\r\n                for(let k of Object.keys(objects)){\r\n                    let obj = objects[k];\r\n                    if(obj.type !== ObjectsConst.TYPE_ENEMY){\r\n                        continue;\r\n                    }\r\n                    let dist = Math.hypot(obj.x - this.player.state.x, obj.y - this.player.state.y);\r\n                    if(!nearest || dist < nearest.dist){\r\n                        nearest = {id: obj.key, type: ObjectsConst.TYPE_OBJECT, dist};\r\n                        tName = obj.targetName || '';\r\n                    }\r\n                }\r\n                if(nearest){\r\n                    let previous = this.player.currentTarget ? Object.assign({}, this.player.currentTarget) : false;\r\n                    this.player.currentTarget = {id: nearest.id, type: ObjectsConst.TYPE_OBJECT};\r\n                    this.gameManager.gameEngine.showTarget(tName, this.player.currentTarget, previous);\r\n                }\r\n            }\r\n            this.player.runActions();\r\n        }\r\n        if(Input.Keyboard.KeyCodes.ESC === event.keyCode){\r\n            this.gameManager.gameEngine.clearTarget();\r\n        }\r\n        if(Input.Keyboard.KeyCodes.F5 === event.keyCode){\r\n            this.gameManager.forcedDisconnection = true;\r\n        }\r\n    }\r\n\r\n    executeKeyUpBehavior(event)\r\n    {\r\n        if(!this.player){\r\n            return;\r\n        }\r\n        // stop all directional keys (arrows and wasd):\r\n        let keys = this.availableControllersKeyCodes();\r\n        if(-1 !== keys.indexOf(event.keyCode)){\r\n            // @NOTE: all keyup events has to be sent.\r\n            this.player.stop();\r\n        }\r\n    }\r\n\r\n    createControllerKeys()\r\n    {\r\n        // @TODO - BETA - Controllers will be part of the configuration in the database.\r\n        this.keyLeft = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.LEFT);\r\n        this.keyA = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.A);\r\n        this.keyRight = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.RIGHT);\r\n        this.keyD = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.D);\r\n        this.keyUp = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.UP);\r\n        this.keyW = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.W);\r\n        this.keyDown = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.DOWN);\r\n        this.keyS = this.input.keyboard.addKey(Input.Keyboard.KeyCodes.S);\r\n        let keys = this.availableControllersKeyCodes();\r\n        let inputElements = this.gameManager.gameDom.getElements('input');\r\n        for(let inputElement of inputElements){\r\n            this.addAndRemoveCapture(keys, inputElement);\r\n        }\r\n    }\r\n\r\n    addAndRemoveCapture(keys, inputElement)\r\n    {\r\n        this.loopKeysAddListenerToElement(keys, inputElement, 'focusin', 'removeCapture');\r\n        this.loopKeysAddListenerToElement(keys, inputElement, 'click', 'removeCapture');\r\n        this.loopKeysAddListenerToElement(keys, inputElement, 'focusout', 'addCapture');\r\n        this.loopKeysAddListenerToElement(keys, inputElement, 'blur', 'addCapture');\r\n    }\r\n\r\n    availableControllersKeyCodes()\r\n    {\r\n        return [\r\n            Input.Keyboard.KeyCodes.LEFT,\r\n            Input.Keyboard.KeyCodes.A,\r\n            Input.Keyboard.KeyCodes.RIGHT,\r\n            Input.Keyboard.KeyCodes.D,\r\n            Input.Keyboard.KeyCodes.UP,\r\n            Input.Keyboard.KeyCodes.W,\r\n            Input.Keyboard.KeyCodes.DOWN,\r\n            Input.Keyboard.KeyCodes.S\r\n        ];\r\n    }\r\n\r\n    executePointerDownAction(pointer, currentlyOver)\r\n    {\r\n        if(0 < currentlyOver.length){\r\n            return false;\r\n        }\r\n        if(!this.gameManager.config.get('client/players/tapMovement/enabled')){\r\n            return false;\r\n        }\r\n        if(this.gameManager.activeRoomEvents.roomData?.worldConfig?.applyGravity){\r\n            return false;\r\n        }\r\n        let primaryMove = this.gameManager.config.get('client/ui/controls/primaryMove');\r\n        let primaryTouch = this.gameManager.config.get('client/ui/controls/allowPrimaryTouch');\r\n        if(\r\n            (!pointer.wasTouch && !pointer.primaryDown && primaryMove)\r\n            || (!pointer.wasTouch && pointer.primaryDown && !primaryMove)\r\n            || (pointer.wasTouch && !pointer.primaryDown && primaryTouch)\r\n        ){\r\n            return false;\r\n        }\r\n        // @TODO - BETA - Temporal avoid double actions, if you target something you will not be moved to the\r\n        //   pointer, in a future release this will be configurable, so you can walk to objects and they get\r\n        //   activated, for example: click on and NPC, automatically walk close and automatically get a dialog\r\n        //   opened.\r\n        if(this.gameManager.gameDom.insideInput()){\r\n            this.gameManager.gameDom.activeElement().blur();\r\n        }\r\n        if(!this.appendRowAndColumn(pointer)){\r\n            return false;\r\n        }\r\n        this.player.moveToPointer(pointer);\r\n        this.updatePointerObject(pointer);\r\n    }\r\n\r\n    movePlayerByPressedButtons()\r\n    {\r\n        // if player is writing there's no movement:\r\n        if(this.gameManager.gameDom.insideInput()){\r\n            return;\r\n        }\r\n        if(this.transition || this.gameManager.isChangingScene){\r\n            return;\r\n        }\r\n        if(this.player.isDeath() || this.player.isDisabled()){\r\n            if(!this.stopOnDeathOrDisabledSent){\r\n                this.player.fullStop();\r\n            }\r\n            this.stopOnDeathOrDisabledSent = true;\r\n            return;\r\n        }\r\n        // @TODO - BETA - Controllers will be part of the configuration in the database.\r\n        if(this.keyRight.isDown || this.keyD.isDown){\r\n            this.player.right();\r\n        }\r\n        if(this.keyLeft.isDown || this.keyA.isDown){\r\n            this.player.left();\r\n        }\r\n        if(this.keyDown.isDown || this.keyS.isDown){\r\n            this.player.down();\r\n        }\r\n        if(this.keyUp.isDown || this.keyW.isDown){\r\n            this.player.up();\r\n        }\r\n    }\r\n\r\n    interpolatePositions()\r\n    {\r\n        if(!this.clientInterpolation){\r\n            return;\r\n        }\r\n        this.processPlayersPositionInterpolation();\r\n        this.processObjectsPositionInterpolation();\r\n    }\r\n\r\n    processPlayersPositionInterpolation()\r\n    {\r\n        let playerKeys = Object.keys(this.interpolatePlayersPosition);\r\n        if(0 === playerKeys.length){\r\n            return;\r\n        }\r\n        if(!sc.get(this.player, 'players')){\r\n            return;\r\n        }\r\n        for(let i of playerKeys){\r\n            let entityState = this.interpolatePlayersPosition[i];\r\n            if(!entityState){\r\n                continue;\r\n            }\r\n            let entity = this.player.players[i];\r\n            if(!entity){\r\n                continue;\r\n            }\r\n            if(this.isCurrentPosition(entity, entityState)){\r\n                delete this.interpolatePlayersPosition[i];\r\n                continue;\r\n            }\r\n            let newX = sc.roundToPrecision(\r\n                Phaser.Math.Linear(entity.x, (entityState.x - this.player.leftOff), this.interpolationSpeed),\r\n                2\r\n            );\r\n            let newY = sc.roundToPrecision(\r\n                Phaser.Math.Linear(entity.y, (entityState.y - this.player.topOff), this.interpolationSpeed),\r\n                2\r\n            );\r\n            //Logger.debug('Player interpolation update.', newX, newY);\r\n            this.player.processPlayerPositionAnimationUpdate(entity, entityState, i, newX, newY);\r\n            if(!entityState.mov){\r\n                delete this.interpolatePlayersPosition[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    processObjectsPositionInterpolation()\r\n    {\r\n        let objectsKeys = Object.keys(this.interpolateObjectsPositions);\r\n        if(0 === objectsKeys.length){\r\n            return;\r\n        }\r\n        let objectsPlugin = this.gameManager.getFeature('objects');\r\n        for(let i of objectsKeys){\r\n            this.interpolateBulletPosition(i, objectsPlugin);\r\n            this.interpolateObjectAnimationPosition(i, objectsPlugin);\r\n        }\r\n    }\r\n\r\n    interpolateBulletPosition(i, objectsPlugin)\r\n    {\r\n        if(!this.isBullet(i)){\r\n            return;\r\n        }\r\n        let entity = sc.get(objectsPlugin.bullets, i);\r\n        if(!entity){\r\n            return;\r\n        }\r\n        let entityState = this.interpolateObjectsPositions[i];\r\n        if(!entityState){\r\n            return;\r\n        }\r\n        if(this.isCurrentPosition(entity, entityState)){\r\n            delete this.interpolateObjectsPositions[i];\r\n            return;\r\n        }\r\n        let x = sc.roundToPrecision(Phaser.Math.Linear(entity.x, entityState.x, this.interpolationSpeed), 0);\r\n        let y = sc.roundToPrecision(Phaser.Math.Linear(entity.y, entityState.y, this.interpolationSpeed), 0);\r\n        let bodyData = {x, y};\r\n        objectsPlugin.updateBulletBodyPosition(i, bodyData);\r\n        if(!entityState.mov){\r\n            delete this.interpolateObjectsPositions[i];\r\n        }\r\n    }\r\n\r\n    isBullet(objectKey)\r\n    {\r\n        return -1 !== objectKey.indexOf('bullet');\r\n    }\r\n\r\n    interpolateObjectAnimationPosition(i, objectsPlugin)\r\n    {\r\n        let entity = this.objectsAnimations[i];\r\n        if(!entity){\r\n            return;\r\n        }\r\n        let entityState = this.interpolateObjectsPositions[i];\r\n        if(!entityState){\r\n            return;\r\n        }\r\n        if(this.isCurrentPosition(entity, entityState)){\r\n            delete this.interpolateObjectsPositions[i];\r\n            return;\r\n        }\r\n        let x = sc.roundToPrecision(Phaser.Math.Linear(entity.x, entityState.x, this.interpolationSpeed), 0);\r\n        let y = sc.roundToPrecision(Phaser.Math.Linear(entity.y, entityState.y, this.interpolationSpeed), 0);\r\n        let bodyData = {x, y, inState: entityState.inState, mov: entityState.mov};\r\n        objectsPlugin.updateObjectsAnimations(i, bodyData, this);\r\n        if(!entityState.mov){\r\n            delete this.interpolateObjectsPositions[i];\r\n        }\r\n    }\r\n\r\n    isCurrentPosition(entity, entityState)\r\n    {\r\n        if(!entity || !entityState){\r\n            Logger.warning('None entity found to compare current entity position.');\r\n            return false;\r\n        }\r\n        return Math.round(entity.x) === Math.round(entityState.x) && Math.round(entity.y) === Math.round(entityState.y);\r\n    }\r\n\r\n    async changeScene()\r\n    {\r\n        this.minimap?.destroyMap();\r\n        this.eventsManager.emitSync('reldens.changeSceneDestroyPrevious', this);\r\n        this.objectsAnimations = {};\r\n        this.objectsAnimationsData = false;\r\n        if(this.useTsAnimation){\r\n            for(let tilesetAnimation of this.tilesetAnimations){\r\n                tilesetAnimation.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    registerLayers()\r\n    {\r\n        if(0 === this.map.layers.length){\r\n            return;\r\n        }\r\n        let idx = 0;\r\n        // @TODO - BETA - Use single get(client/map).\r\n        let depthBelowPlayer = this.configManager.get('client/map/layersDepth/belowPlayer');\r\n        let depthForChangePoints = this.configManager.get('client/map/layersDepth/changePoints');\r\n        for(let layer of this.map.layers){\r\n            this.layers[idx] = this.map.createLayer(layer.name, this.tilesets);\r\n            if(!this.layers[idx]){\r\n                Logger.critical('Map layer could not be created.', layer.name, this.key);\r\n                continue;\r\n            }\r\n            if(-1 !== layer.name.indexOf('below-player')){\r\n                this.layers[idx].setDepth(depthBelowPlayer);\r\n            }\r\n            if(-1 !== layer.name.indexOf('over-player')){\r\n                // we need to set the depth higher than everything else (multiply to get the highest value):\r\n                this.layers[idx].setDepth(idx * this.map.height * this.map.tileHeight);\r\n            }\r\n            if(-1 !== layer.name.indexOf('change-points')){\r\n                this.layers[idx].setDepth(depthForChangePoints);\r\n            }\r\n            idx++;\r\n        }\r\n    }\r\n\r\n    appendRowAndColumn(pointer)\r\n    {\r\n        let worldToTileXY = this.map.worldToTileXY(pointer.worldX, pointer.worldY);\r\n        let playerToTileXY = this.map.worldToTileXY(this.player.state.x, this.player.state.y);\r\n        if(!worldToTileXY || !playerToTileXY){\r\n            Logger.error('Move to pointer error.');\r\n            return false;\r\n        }\r\n        pointer.worldColumn = worldToTileXY.x;\r\n        pointer.worldRow = worldToTileXY.y;\r\n        pointer.playerOriginCol = playerToTileXY.x;\r\n        pointer.playerOriginRow = playerToTileXY.y;\r\n        return pointer;\r\n    }\r\n\r\n    createFloatingText(\r\n        x,\r\n        y,\r\n        message,\r\n        color,\r\n        font,\r\n        fontSize = 14,\r\n        duration = 600,\r\n        top = 50,\r\n        stroke = '#000000',\r\n        strokeThickness = 4,\r\n        shadowColor = 'rgba(0,0,0,0.7)'\r\n    ){\r\n        let damageSprite = this.add.text(x, y, message, {fontFamily: font, fontSize: fontSize+'px'});\r\n        damageSprite.style.setColor(color);\r\n        damageSprite.style.setAlign('center');\r\n        damageSprite.style.setStroke(stroke, strokeThickness);\r\n        damageSprite.style.setShadow(5, 5, shadowColor, 5);\r\n        damageSprite.setDepth(200000);\r\n        this.add.tween({\r\n            targets: damageSprite, duration, ease: 'Exponential.In', y: y - top,\r\n            onComplete: () => {\r\n                damageSprite.destroy();\r\n            }\r\n        });\r\n    }\r\n\r\n    updatePointerObject(pointer)\r\n    {\r\n        if(!this.configManager.get('client/ui/pointer/show')){\r\n            return;\r\n        }\r\n        if(this.arrowSprite){\r\n            this.arrowSprite.destroy();\r\n        }\r\n        let topOffSet = this.configManager.get('client/ui/pointer/topOffSet', 16);\r\n        this.arrowSprite = this.physics.add.sprite(pointer.worldX, pointer.worldY - topOffSet, GameConst.ARROW_DOWN);\r\n        this.arrowSprite.setDepth(500000);\r\n        this.arrowSprite.anims.play(GameConst.ARROW_DOWN, true).on('animationcomplete', () => {\r\n            this.arrowSprite.destroy();\r\n        });\r\n    }\r\n\r\n    getAnimationByKey(key)\r\n    {\r\n        if(!this.anims || !this.anims?.anims || !this.anims?.anims?.entries){\r\n            Logger.error('Animations not loaded.', this.anims);\r\n            return false;\r\n        }\r\n        return sc.get(this.anims.anims.entries, key, false);\r\n    }\r\n\r\n    getObjectFromExtraData(objKey, extraData, currentPlayer)\r\n    {\r\n        // @TODO - BETA - Replace with constants.\r\n        // objKey = t > target\r\n        // objKey = o > owner\r\n        let returnObj = false;\r\n        let dataTargetType = objKey+'T'; // tT - oT === DATA_TARGET_TYPE - DATA_OWNER_TYPE\r\n        let dataTargetKey = objKey+'K'; // tK - oK === DATA_TARGET_KEY - DATA_OWNER_KEY\r\n        let isTargetPlayer = extraData[dataTargetType] === ActionsConst.DATA_TYPE_VALUE_PLAYER;\r\n        if(!isTargetPlayer && sc.hasOwn(this.objectsAnimations, extraData[dataTargetKey])){\r\n            returnObj = this.objectsAnimations[extraData[dataTargetKey]];\r\n        }\r\n        if(isTargetPlayer && sc.hasOwn(currentPlayer.players, extraData[dataTargetKey])){\r\n            returnObj = currentPlayer.players[extraData[dataTargetKey]];\r\n        }\r\n        return returnObj;\r\n    }\r\n\r\n    loopKeysAddListenerToElement(keys, element, eventName, action)\r\n    {\r\n        element.addEventListener(eventName, () => {\r\n            for(let keyCode of keys){\r\n                this.input.keyboard[action](keyCode);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.SceneDynamic = SceneDynamic;\r\n","/**\r\n *\r\n * Reldens - TileSetAnimation\r\n *\r\n */\r\n\r\nclass TileSetAnimation\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.timer = props?.timer;\r\n    }\r\n\r\n    register(layer, tileset)\r\n    {\r\n        this.animations = [];\r\n        this.registered = {};\r\n        this.layer = layer;\r\n        this.tileset = tileset;\r\n        for(let i of Object.keys(tileset.tileData)){\r\n            let tileData = tileset.tileData[i];\r\n            if(!tileData.animation){\r\n                continue;\r\n            }\r\n            tileData.id = i;\r\n            let indexCounter = 0;\r\n            for(let anInd of tileData.animation){\r\n                if(Number(i) === Number(anInd?.tileid || 0)){\r\n                    tileData.initIndex = indexCounter;\r\n                    break;\r\n                }\r\n                indexCounter++;\r\n            }\r\n            this.animations.push(tileData);\r\n        }\r\n    }\r\n\r\n    start()\r\n    {\r\n        for(let anim of this.animations){\r\n            let animation = anim.animation;\r\n            let total = animation.length;\r\n            let startIndex = Number(anim.initIndex || 0);\r\n            let next = Number((startIndex+1) % total);\r\n            this.repeat(anim, startIndex, next);\r\n        }\r\n    }\r\n\r\n    repeat(anim, index, next)\r\n    {\r\n        let id = anim.id;\r\n        if(this.registered[id]){\r\n            this.registered[id] = null;\r\n        }\r\n        let animation = anim.animation;\r\n        let total = animation.length;\r\n        let firstId = Number(this.tileset.firstgid);\r\n        let replaceTile = Number(anim.animation[index].tileid)+firstId;\r\n        let replacementTile = Number(anim.animation[next].tileid)+firstId;\r\n        this.layer.replaceByIndex(replaceTile, replacementTile);\r\n        let duration = animation[next].duration;\r\n        let indexTotal = Number((next+1) % total);\r\n        this.registered[id] = this.setTimeout(this.repeat.bind(this, anim, Number(next), indexTotal), duration);\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        for(let i of Object.keys(this.registered)){\r\n            if(this.registered[i]){\r\n                this.clearTimeout(this.registered[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    setTimeout(callback, duration)\r\n    {\r\n        if(this.timer){\r\n            return this.timer.setTimeout(callback, duration);\r\n        }\r\n        // fallback for old timers:\r\n        // @ts-ignore\r\n        return setTimeout(callback, duration);\r\n    }\r\n\r\n    clearTimeout(timer)\r\n    {\r\n        if(this.timer){\r\n            return this.timer.clearTimeout(timer);\r\n        }\r\n        // fallback for old timers:\r\n        // @ts-ignore\r\n        clearTimeout(timer);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TileSetAnimation = TileSetAnimation;\r\n","/**\r\n *\r\n * Reldens - Minimap\r\n *\r\n */\r\n\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass Minimap\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.config = props.config;\r\n        this.events = props.events;\r\n    }\r\n\r\n    createMap(scene, playerSprite)\r\n    {\r\n        // @TODO - BETA - Improve camera.\r\n        this.minimapCamera = false;\r\n        this.circle = false;\r\n        this.scope = false;\r\n        this.awaitOnCamera = sc.get(this.config, 'awaitOnCamera', 400);\r\n        this.autoWidth = scene.map.widthInPixels / sc.get(this.config, 'mapWidthDivisor', 1);\r\n        this.camWidth = sc.get(this.config, 'fixedWidth', this.autoWidth);\r\n        this.autoHeight = scene.map.heightInPixels / sc.get(this.config, 'mapHeightDivisor', 1);\r\n        this.camHeight = sc.get(this.config, 'fixedHeight', this.autoHeight);\r\n        this.camX = sc.get(this.config, 'camX', 0);\r\n        this.camY = sc.get(this.config, 'camY', 0);\r\n        this.camBackgroundColor = sc.get(this.config, 'camBackgroundColor', 'rgba(0,0,0,0.6)');\r\n        this.camZoom = sc.get(this.config, 'camZoom', 0.15);\r\n        this.roundMap = sc.get(this.config, 'roundMap', false);\r\n        this.addCircle = sc.get(this.config, 'addCircle', false);\r\n        this.createMinimapCamera(scene, playerSprite);\r\n        this.createRoundMap(scene);\r\n        this.events.emitSync('reldens.createdMinimap', this);\r\n    }\r\n\r\n    createMinimapCamera(scene, playerSprite)\r\n    {\r\n        this.minimapCamera = scene.cameras.add(this.camX, this.camY, this.camWidth, this.camHeight)\r\n            .setName('minimap')\r\n            .setBackgroundColor(this.camBackgroundColor)\r\n            .setZoom(this.camZoom)\r\n            .startFollow(\r\n                playerSprite,\r\n                sc.get(this.config, 'mapCameraRoundPixels', true),\r\n                sc.get(this.config, 'mapCameraLerpX', 1),\r\n                sc.get(this.config, 'mapCameraLerpY', 1)\r\n            )\r\n            .setRoundPixels(true)\r\n            .setVisible(false)\r\n            .setOrigin(\r\n                sc.get(this.config, 'mapCameraOriginX', 0.18),\r\n                sc.get(this.config, 'mapCameraOriginY', 0.18)\r\n            );\r\n    }\r\n\r\n    createRoundMap(scene)\r\n    {\r\n        if(!this.roundMap){\r\n            return false;\r\n        }\r\n        if(this.addCircle){\r\n            this.addMinimapCircle(scene);\r\n        }\r\n        this.createRoundCamera(scene);\r\n    }\r\n\r\n    addMinimapCircle(scene)\r\n    {\r\n        let activeScenePreloader = scene.gameManager.getActiveScenePreloader();\r\n        this.circle = activeScenePreloader.add.circle(\r\n            sc.get(this.config, 'circleX', 220),\r\n            sc.get(this.config, 'circleY', 88),\r\n            sc.get(this.config, 'circleRadio', 80.35),\r\n            sc.get(this.config, 'circleColor', 'rgb(0,0,0)'),\r\n            sc.get(this.config, 'circleAlpha', 1)\r\n        );\r\n        this.circle.setStrokeStyle(\r\n            sc.get(this.config, 'circleStrokeLineWidth', 6),\r\n            sc.get(this.config, 'circleStrokeColor', 0),\r\n            sc.get(this.config, 'circleStrokeAlpha', 0.6));\r\n        this.circle.setFillStyle(\r\n            sc.get(this.config, 'circleFillColor', 1),\r\n            sc.get(this.config, 'circleFillAlpha', 0)\r\n        );\r\n        this.circle.setVisible(false);\r\n    }\r\n\r\n    createRoundCamera(scene)\r\n    {\r\n        this.scope = scene.add.graphics();\r\n        this.scope.fillStyle(0x000000, 0).fillCircle(\r\n            sc.get(this.config, 'circleX', 220),\r\n            sc.get(this.config, 'circleY', 88),\r\n            sc.get(this.config, 'circleRadio', 80.35)\r\n        );\r\n        this.minimapCamera.setMask(this.scope.createGeometryMask());\r\n    }\r\n\r\n    destroyMap()\r\n    {\r\n        delete this.minimapCamera;\r\n        delete this.circle;\r\n        delete this.scope;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.Minimap = Minimap;\r\n","/**\r\n *\r\n * Reldens - ScenePreloader\r\n *\r\n */\r\n\r\nconst { Scene, Geom } = require('phaser');\r\nconst { MinimapUi } = require('./minimap-ui');\r\nconst { InstructionsUi } = require('./instructions-ui');\r\nconst { SettingsUi } = require('./settings-ui');\r\nconst { Joystick } = require('./joystick');\r\nconst { GameConst } = require('../constants');\r\nconst { ActionsConst } = require('../../actions/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ScenePreloader extends Scene\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super({key: props.name});\r\n        this.relatedSceneKey = props.name.replace(GameConst.SCENE_PRELOADER, '');\r\n        this.progressBar = null;\r\n        this.progressCompleteRect = null;\r\n        this.progressRect = null;\r\n        this.userInterfaces = {};\r\n        this.preloadMapKey = props.map;\r\n        this.preloadImages = props.images;\r\n        this.uiScene = props.uiScene;\r\n        this.elementsUi = {};\r\n        this.gameManager = props.gameManager;\r\n        this.eventsManager = props.gameManager.events;\r\n        this.preloadAssets = props.preloadAssets || {};\r\n        this.directionalAnimations = {};\r\n        this.objectsAnimations = {};\r\n        if(!this.gameManager.createdAnimations){\r\n            this.gameManager.createdAnimations = {};\r\n        }\r\n        let currentScene = this.gameManager.activeRoomEvents.getActiveScene();\r\n        currentScene.objectsAnimationsData = props.objectsAnimationsData;\r\n        this.playerSpriteSize = {\r\n            frameWidth: this.gameManager.config.get('client/players/size/width', 52),\r\n            frameHeight: this.gameManager.config.get('client/players/size/height', 71)\r\n        };\r\n        this.useJoystick = this.gameManager.config.getWithoutLogs('client/ui/controls/useJoystick', false);\r\n        this.joystick = new Joystick({scenePreloader: this});\r\n    }\r\n\r\n    preload()\r\n    {\r\n        // @NOTE: this event run ONLY ONE TIME for each scene.\r\n        let eventUiScene = this.uiScene ? this : this.gameManager.gameEngine.uiScene;\r\n        this.eventsManager.emitSync('reldens.beforePreload', this, eventUiScene);\r\n        this.preloadUiScene();\r\n        this.preloadMapJson();\r\n        // @TODO - BETA - CHECK - Test a multiple tiles images case.\r\n        this.preloadMapImages();\r\n        this.preloadValidAssets();\r\n        this.preloadPlayerDefaultSprite();\r\n        this.preloadArrowPointer();\r\n        // @TODO - BETA - Move everything related to player stats into the users pack or create a new pack.\r\n        this.load.image(\r\n            GameConst.ICON_STATS,\r\n            this.gameManager.config.get('client/general/assets/statsIconPath', '/assets/icons/book.png')\r\n        );\r\n        this.load.on('fileprogress', this.onFileProgress, this);\r\n        this.load.on('progress', this.onLoadProgress, this);\r\n        this.load.on('complete', this.onLoadComplete, this);\r\n        this.configuredFrameRate = this.gameManager.config.get('client/general/animations/frameRate', 10);\r\n        this.showLoadingProgressBar();\r\n    }\r\n\r\n    preloadMapJson()\r\n    {\r\n        if(!this.preloadMapKey){\r\n            return;\r\n        }\r\n        // @TODO - BETA - Refactor to pass the map_filename from the server as a parameter.\r\n        this.load.tilemapTiledJSON(this.preloadMapKey, '/assets/maps/'+this.preloadMapKey+'.json');\r\n    }\r\n\r\n    preloadArrowPointer()\r\n    {\r\n        if(!this.gameManager.config.get('client/ui/pointer/show')){\r\n            return;\r\n        }\r\n        let pointerData = {\r\n            frameWidth: this.gameManager.config.getWithoutLogs('client/general/assets/arrowDownFrameWidth', 32),\r\n            frameHeight: this.gameManager.config.getWithoutLogs('client/general/assets/arrowDownFrameHeight', 32)\r\n        };\r\n        this.load.spritesheet(\r\n            GameConst.ARROW_DOWN,\r\n            this.gameManager.config.get('client/general/assets/arrowDownPath', '/assets/sprites/arrow-down.png'),\r\n            pointerData\r\n        );\r\n    }\r\n\r\n    preloadUiScene()\r\n    {\r\n        if(!this.uiScene){\r\n            return;\r\n        }\r\n        // @NOTE: the events here run only once over all the game progress.\r\n        this.eventsManager.emitSync('reldens.beforePreloadUiScene', this);\r\n        if(this.gameManager.config.get('client/ui/playerBox/enabled')){\r\n            this.load.html('playerBox', '/assets/html/ui-player-box.html');\r\n        }\r\n        if(this.gameManager.config.get('client/ui/controls/enabled')){\r\n            this.load.html('controls', '/assets/html/ui-controls.html');\r\n        }\r\n        if(this.useJoystick){\r\n            this.load.html('joystick', '/assets/html/ui-joystick.html');\r\n        }\r\n        if(this.gameManager.config.get('client/ui/sceneLabel/enabled')){\r\n            this.load.html('sceneLabel', '/assets/html/ui-scene-label.html');\r\n        }\r\n        if(this.gameManager.config.get('client/ui/instructions/enabled')){\r\n            this.load.html('instructions', '/assets/html/ui-instructions.html');\r\n        }\r\n        if(this.gameManager.config.get('client/ui/minimap/enabled')){\r\n            this.load.html('minimap', '/assets/html/ui-minimap.html');\r\n        }\r\n        if(this.gameManager.config.get('client/ui/settings/enabled')){\r\n            this.load.html('settings', '/assets/html/ui-settings.html');\r\n            this.load.html('settings-content', '/assets/html/ui-settings-content.html');\r\n        }\r\n        if(this.gameManager.config.getWithoutLogs('client/ui/preloadTarget/enabled', true)){\r\n            this.load.html('uiTarget', '/assets/html/ui-target.html');\r\n        }\r\n        if(this.gameManager.config.getWithoutLogs('client/ui/preloadOptionsTemplates/enabled', true)){\r\n            this.load.html('uiOptionButton', '/assets/html/ui-option-button.html');\r\n            this.load.html('uiOptionIcon', '/assets/html/ui-option-icon.html');\r\n            this.load.html('uiOptionsContainer', '/assets/html/ui-options-container.html');\r\n        }\r\n        if(this.gameManager.config.getWithoutLogs('client/ui/preloadLoading/enabled', true)){\r\n            this.load.html('uiLoading', '/assets/html/ui-loading.html');\r\n        }\r\n        this.eventsManager.emitSync('reldens.preloadUiScene', this);\r\n    }\r\n\r\n    preloadMapImages()\r\n    {\r\n        if(!this.preloadImages){\r\n            return;\r\n        }\r\n        for(let imageFile of this.preloadImages){\r\n            this.load.image(imageFile, `/assets/maps/${imageFile}`);\r\n            //Logger.debug('Preload map image: \"'+imageFile+'\".');\r\n        }\r\n    }\r\n\r\n    preloadValidAssets()\r\n    {\r\n        if(!sc.isObject(this.preloadAssets)){\r\n            Logger.info('None assets available for preload.');\r\n            return;\r\n        }\r\n        // @TODO - BETA - Remove the hardcoded file extensions.\r\n        let preloadAssetsKeys = Object.keys(this.preloadAssets);\r\n        for(let i of preloadAssetsKeys){\r\n            let asset = this.preloadAssets[i];\r\n            if('spritesheet' !== asset.asset_type){\r\n                continue;\r\n            }\r\n            let assetParams = sc.toJson(asset.extra_params);\r\n            if(!assetParams){\r\n                Logger.error('Missing spritesheet params.', asset);\r\n                continue;\r\n            }\r\n            this.load.spritesheet(asset.asset_key, `/assets/custom/sprites/${asset.asset_file}`, assetParams);\r\n        }\r\n    }\r\n\r\n    create()\r\n    {\r\n        // @NOTE: this event run once for each scene.\r\n        let eventUiScene = this.uiScene ? this : this.gameManager.gameEngine.uiScene;\r\n        this.eventsManager.emitSync('reldens.createPreload', this, eventUiScene);\r\n        if(this.uiScene){\r\n            this.createUiScene();\r\n        }\r\n        this.createPlayerAnimations(sc.get(this.gameManager.playerData, 'avatarKey', GameConst.IMAGE_PLAYER));\r\n        this.createArrowAnimation();\r\n    }\r\n\r\n    createUiScene()\r\n    {\r\n        // @NOTE: the events here run only once over all the game progress.\r\n        this.eventsManager.emitSync('reldens.beforeCreateUiScene', this);\r\n        // @TODO - BETA - Replace all different DOM references and standardize with the game engine driver.\r\n        this.createPlayerBox();\r\n        this.createTargetUi();\r\n        this.createSceneLabelBox();\r\n        this.createControlsBox();\r\n        this.createInstructionsBox();\r\n        this.createMiniMap();\r\n        this.createSettingsUi();\r\n        this.eventsManager.emitSync('reldens.createUiScene', this);\r\n    }\r\n\r\n    createSettingsUi()\r\n    {\r\n        let settingsConfig = this.getUiConfig('settings');\r\n        if(!settingsConfig.enabled){\r\n            return;\r\n        }\r\n        this.settingsUi = new SettingsUi();\r\n        this.settingsUi.createSettings(settingsConfig, this);\r\n    }\r\n\r\n    createMiniMap()\r\n    {\r\n        let minimapConfig = this.getUiConfig('minimap');\r\n        if(!minimapConfig.enabled){\r\n            return;\r\n        }\r\n        this.minimapUi = new MinimapUi();\r\n        this.minimapUi.createMinimap(minimapConfig, this);\r\n    }\r\n\r\n    createInstructionsBox()\r\n    {\r\n        let instConfig = this.getUiConfig('instructions');\r\n        if(!instConfig.enabled){\r\n            return;\r\n        }\r\n        this.instructionsUi = new InstructionsUi();\r\n        this.instructionsUi.createInstructions(instConfig, this);\r\n    }\r\n\r\n    createControlsBox()\r\n    {\r\n        let controlsUi = this.getUiConfig('controls');\r\n        if(!controlsUi.enabled){\r\n            return;\r\n        }\r\n        if(this.useJoystick){\r\n            this.elementsUi['controls'] = this.createUi('joystick', controlsUi);\r\n            return this.joystick.registerJoystickController();\r\n        }\r\n        this.elementsUi['controls'] = this.createUi('controls', controlsUi);\r\n        return this.registerControllers(this.elementsUi['controls']);\r\n    }\r\n\r\n    createUi(key, uiConfig)\r\n    {\r\n        return this.createContent(key, uiConfig.uiX, uiConfig.uiY);\r\n    }\r\n\r\n    createContent(key, x, y)\r\n    {\r\n        return this.add.dom(x, y).createFromCache(key);\r\n    }\r\n\r\n    createSceneLabelBox()\r\n    {\r\n        let sceneLabelUi = this.getUiConfig('sceneLabel');\r\n        if(!sceneLabelUi.enabled){\r\n            return;\r\n        }\r\n        this.elementsUi['sceneLabel'] = this.createUi('sceneLabel', sceneLabelUi);\r\n    }\r\n\r\n    createTargetUi()\r\n    {\r\n        let targetUi = this.getUiConfig('uiTarget');\r\n        if(!targetUi.enabled){\r\n            return;\r\n        }\r\n        this.uiTarget = this.createUi('uiTarget', targetUi);\r\n        let closeButton = this.uiTarget.getChildByProperty('className', 'close-target');\r\n        closeButton.addEventListener('click', () => {\r\n            this.gameManager.gameEngine.clearTarget();\r\n        });\r\n    }\r\n\r\n    createPlayerBox()\r\n    {\r\n        let playerBox = this.getUiConfig('playerBox');\r\n        if(!playerBox.enabled){\r\n            return;\r\n        }\r\n        this.elementsUi['playerBox'] = this.createUi('playerBox', playerBox);\r\n        let logoutButton = this.elementsUi['playerBox'].getChildByProperty('id', 'logout');\r\n        logoutButton?.addEventListener('click', () => {\r\n            this.gameManager.forcedDisconnection = true;\r\n            // @TODO - BETA - Move this into an event on the firebase plugin.\r\n            if(this.gameManager.firebase.isActive){\r\n                this.gameManager.firebase.app.auth().signOut();\r\n            }\r\n            this.gameManager.gameDom.getWindow().location.reload();\r\n        });\r\n    }\r\n\r\n    getUiConfig(uiName, newWidth, newHeight)\r\n    {\r\n        let {uiX, uiY} = this.getUiPosition(uiName, newWidth, newHeight);\r\n        return {enabled: this.gameManager.config.getWithoutLogs('client/ui/'+uiName+'/enabled'), uiX, uiY}\r\n    }\r\n\r\n    getUiPosition(uiName, newWidth, newHeight)\r\n    {\r\n        if('' === uiName){\r\n            uiName = 'default';\r\n        }\r\n        let uiConfig = this.gameManager.config.getWithoutLogs('client/ui/'+uiName, {});\r\n        let uiX = sc.get(uiConfig, 'x', 0);\r\n        let uiY = sc.get(uiConfig, 'y', 0);\r\n        if(this.gameManager.config.get('client/ui/screen/responsive')){\r\n            let rX = sc.get(uiConfig, 'responsiveX', false);\r\n            let rY = sc.get(uiConfig, 'responsiveY', false);\r\n            let gameContainer = this.gameManager.gameDom.getElement(GameConst.SELECTORS.GAME_CONTAINER);\r\n            if(!newWidth){\r\n                newWidth = gameContainer.offsetWidth;\r\n            }\r\n            if(!newHeight){\r\n                newHeight = gameContainer.offsetHeight;\r\n            }\r\n            uiX = false !== rX ? rX * newWidth / 100 : 0;\r\n            uiY = false !== rY ? rY * newHeight / 100 : 0;\r\n        }\r\n        return {uiX, uiY};\r\n    }\r\n\r\n    preloadPlayerDefaultSprite()\r\n    {\r\n        let fallbackImage = this.gameManager.config.get('client/players/animations/fallbackImage', 'player-base.png');\r\n        this.load.spritesheet(GameConst.IMAGE_PLAYER, '/assets/custom/sprites/'+fallbackImage, this.playerSpriteSize);\r\n    }\r\n\r\n    createPlayerAnimations(avatarKey)\r\n    {\r\n        let avatarFrames = this.gameManager.config.getWithoutLogs(\r\n            'client/players/animations/'+avatarKey+'Frames',\r\n            this.gameManager.config.get('client/players/animations/defaultFrames')\r\n        );\r\n        let availableAnimations = [{\r\n                k: avatarKey + '_' + GameConst.LEFT,\r\n                img: avatarKey,\r\n                start: avatarFrames.left.start || 3,\r\n                end: avatarFrames.left.end || 5,\r\n                repeat: -1,\r\n                hide: false\r\n            }, {\r\n                k: avatarKey + '_' + GameConst.RIGHT,\r\n                img: avatarKey,\r\n                start: avatarFrames.right.start || 6,\r\n                end: avatarFrames.right.end || 8,\r\n                repeat: -1,\r\n                hide: false\r\n            }, {\r\n                k: avatarKey + '_' + GameConst.UP,\r\n                img: avatarKey,\r\n                start: avatarFrames.up.start || 9,\r\n                end: avatarFrames.up.end || 11,\r\n                repeat: -1,\r\n                hide: false\r\n            }, {\r\n                k: avatarKey + '_' + GameConst.DOWN,\r\n                img: avatarKey,\r\n                start: avatarFrames.down.start || 0,\r\n                end: avatarFrames.down.end || 2,\r\n                repeat: -1,\r\n                hide: false\r\n            }\r\n        ];\r\n        for(let anim of availableAnimations){\r\n            this.createAnimationWith(anim);\r\n        }\r\n        this.eventsManager.emitSync('reldens.createPlayerAnimations', this, avatarKey);\r\n    }\r\n\r\n    createArrowAnimation()\r\n    {\r\n        if(!this.gameManager.config.get('client/ui/pointer/show')){\r\n            return;\r\n        }\r\n        let arrowAnim = {\r\n            k: GameConst.ARROW_DOWN,\r\n            img: GameConst.ARROW_DOWN, // this is the loaded image key\r\n            start: 0,\r\n            end: 2,\r\n            repeat: 3,\r\n            rate: 6\r\n        };\r\n        this.createAnimationWith(arrowAnim);\r\n    }\r\n\r\n    createAnimationWith(anim)\r\n    {\r\n        if(this.gameManager.createdAnimations[anim.k]){\r\n            return;\r\n        }\r\n        let animationConfig = {\r\n            key: anim.k,\r\n            frames: this.anims.generateFrameNumbers(anim.img, {start: anim.start, end: anim.end}),\r\n            frameRate: sc.get(anim, 'frameRate', this.configuredFrameRate),\r\n            repeat: anim.repeat,\r\n            hideOnComplete: sc.get(anim, 'hide', true),\r\n        };\r\n        //Logger.debug('Creating animation: '+anim.k, animationConfig);\r\n        this.gameManager.createdAnimations[anim.k] = this.anims.create(animationConfig);\r\n        return this.gameManager.createdAnimations[anim.k];\r\n    }\r\n\r\n    registerControllers(controllersBox)\r\n    {\r\n        // @TODO - BETA - Controllers will be part of the configuration in the database.\r\n        this.setupDirButtonInBox(GameConst.UP, controllersBox);\r\n        this.setupDirButtonInBox(GameConst.DOWN, controllersBox);\r\n        this.setupDirButtonInBox(GameConst.LEFT, controllersBox);\r\n        this.setupDirButtonInBox(GameConst.RIGHT, controllersBox);\r\n        this.setupDefaultActionKey(controllersBox);\r\n    }\r\n\r\n    setupDefaultActionKey(controllersBox)\r\n    {\r\n        // if the default action is not specified we won't show the button:\r\n        let defaultActionKey = this.gameManager.config.get('client/ui/controls/defaultActionKey') || 'physical_attack';\r\n        let actionBox = this.createActionBox(defaultActionKey);\r\n        this.gameManager.gameDom.appendToElement('.action-buttons', actionBox);\r\n        this.setupActionButtonInBox(defaultActionKey, controllersBox);\r\n    }\r\n\r\n    createActionBox(actionKey)\r\n    {\r\n        let skillTemplate = this.cache.html.get('actionBox');\r\n        return this.gameManager.gameEngine.parseTemplate(skillTemplate, {\r\n            key: actionKey,\r\n            actionName: actionKey\r\n        });\r\n    }\r\n\r\n    setupDirButtonInBox(dir, box)\r\n    {\r\n        let btn = box.getChildByProperty('id', dir);\r\n        if(btn){\r\n            this.hold(btn, {dir: dir});\r\n        }\r\n    }\r\n\r\n    setupActionButtonInBox(action, box)\r\n    {\r\n        let actionButton = box.getChildByProperty('id', action);\r\n        if(!actionButton){\r\n            return;\r\n        }\r\n        if(this.gameManager.config.get('client/general/controls/action_button_hold')){\r\n            this.hold(actionButton, action);\r\n            return;\r\n        }\r\n        actionButton?.addEventListener('click', () => {\r\n            let currentScene = this.gameManager.activeRoomEvents.getActiveScene();\r\n            let dataSend = {\r\n                act: ActionsConst.ACTION,\r\n                target: currentScene.player.currentTarget,\r\n                type: action\r\n            };\r\n            this.gameManager.activeRoomEvents.send(dataSend);\r\n        });\r\n    }\r\n\r\n    hold(button, action)\r\n    {\r\n        button.addEventListener('mousedown', (event) => {\r\n            this.startHold(event, button, action);\r\n        });\r\n        button.addEventListener('mouseup', (event) => {\r\n            this.endHold(event, button);\r\n        });\r\n        button.addEventListener('mouseout', (event) => {\r\n            this.endHold(event, button);\r\n        });\r\n        button.addEventListener('touchstart', (event) => {\r\n            this.startHold(event, button, action);\r\n        });\r\n        button.addEventListener('touchend', (event) => {\r\n            this.endHold(event, button);\r\n        });\r\n    }\r\n\r\n    startHold(event, button, action)\r\n    {\r\n        event.preventDefault();\r\n        if(this.gameManager.config.get('client/ui/controls/opacityEffect')){\r\n            button.classList.add('button-opacity-off');\r\n        }\r\n        let currentScene = this.gameManager.activeRoomEvents.getActiveScene();\r\n        let dataSend = action;\r\n        // @TODO - BETA - Controllers will be part of the configuration in the database.\r\n        if(!sc.hasOwn(action, 'dir')){\r\n            // action can be a string key (e.g., 'attack') or an object with {type: '...'}\r\n            let actionType = (typeof action === 'string') ? action : action?.type;\r\n            if(!actionType){\r\n                // fallback to configured default or 'attack'\r\n                actionType = this.gameManager.config.get('client/ui/controls/defaultActionKey') || 'attack';\r\n            }\r\n            dataSend = {\r\n                act: ActionsConst.ACTION,\r\n                target: currentScene.player.currentTarget,\r\n                type: actionType\r\n            };\r\n        }\r\n        this.gameManager.activeRoomEvents.send(dataSend);\r\n    }\r\n\r\n    endHold(event, button)\r\n    {\r\n        event.preventDefault();\r\n        if(this.gameManager.config.get('client/ui/controls/opacityEffect')){\r\n            button.classList.remove('button-opacity-off');\r\n        }\r\n        this.gameManager.activeRoomEvents.send({act: GameConst.STOP});\r\n    }\r\n\r\n    showLoadingProgressBar()\r\n    {\r\n        if(!this.gameManager.config.getWithoutLogs('client/ui/loading/show', true)){\r\n            return;\r\n        }\r\n        let Rectangle = Geom.Rectangle;\r\n        let main = Rectangle.Clone(this.cameras.main);\r\n        this.progressRect = new Rectangle(0, 0, main.width / 2, 50);\r\n        Rectangle.CenterOn(this.progressRect, main.centerX, main.centerY);\r\n        this.progressCompleteRect = Geom.Rectangle.Clone(this.progressRect);\r\n        this.progressBar = this.createGraphics();\r\n        let width = this.cameras.main.width;\r\n        let height = this.cameras.main.height;\r\n        let fontFamily = this.gameManager.config.get('client/ui/loading/font');\r\n        let loadingFontSize = this.gameManager.config.get('client/ui/loading/fontSize');\r\n        let loadingAssetsSize = this.gameManager.config.get('client/ui/loading/assetsSize');\r\n        this.loadingText = this.createText(\r\n            width / 2,\r\n            height / 2 - 50,\r\n            'Loading...',\r\n            {fontFamily, fontSize: loadingFontSize}\r\n        );\r\n        this.loadingText.setOrigin(0.5, 0.5);\r\n        this.loadingText.setFill(this.gameManager.config.get('client/ui/loading/loadingColor'));\r\n        this.percentText = this.createText(width / 2, height / 2 - 5, '0%', {fontFamily, fontSize: loadingAssetsSize});\r\n        this.percentText.setOrigin(0.5, 0.5);\r\n        this.percentText.setFill(this.gameManager.config.get('client/ui/loading/percentColor'));\r\n        this.assetText = this.createText(width / 2, height / 2 + 50, '', {fontFamily, fontSize: loadingAssetsSize});\r\n        this.assetText.setFill(this.gameManager.config.get('client/ui/loading/assetsColor'));\r\n        this.assetText.setOrigin(0.5, 0.5);\r\n    }\r\n\r\n    createText(width, height, text, styles)\r\n    {\r\n        return this.add.text(width, height, text, styles);\r\n    }\r\n\r\n    createGraphics()\r\n    {\r\n        return this.add.graphics();\r\n    }\r\n\r\n    onLoadComplete()\r\n    {\r\n        for(let child of this.children.list){\r\n            child.destroy();\r\n        }\r\n        this.loadingText.destroy();\r\n        this.assetText.destroy();\r\n        this.percentText.destroy();\r\n        this.scene.shutdown();\r\n    }\r\n\r\n    onFileProgress(file)\r\n    {\r\n        if(!this.gameManager.config.get('client/ui/loading/showAssets')){\r\n            return;\r\n        }\r\n        // @TODO - WIP - TRANSLATIONS.\r\n        this.assetText.setText('Loading '+file.key);\r\n    }\r\n\r\n    onLoadProgress(progress)\r\n    {\r\n        let progressText = parseInt(progress * 100) + '%';\r\n        this.percentText.setText(progressText);\r\n        let color = (0xffffff);\r\n        let fillColor = (0x222222);\r\n        this.progressRect.width = progress * this.progressCompleteRect.width;\r\n        this.progressBar\r\n            .clear()\r\n            .fillStyle(fillColor)\r\n            .fillRectShape(this.progressCompleteRect)\r\n            .fillStyle(color)\r\n            .fillRectShape(this.progressRect);\r\n    }\r\n\r\n    getUiElement(uiName, logError = true)\r\n    {\r\n        if(sc.hasOwn(this.elementsUi, uiName)){\r\n            return this.elementsUi[uiName];\r\n        }\r\n        if(logError){\r\n            Logger.error('UI not found.', {uiName});\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ScenePreloader = ScenePreloader;\r\n","/**\r\n *\r\n * Reldens - MinimapUi\r\n *\r\n */\r\n\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass MinimapUi\r\n{\r\n\r\n    createMinimap(minimapConfig, scenePreloader)\r\n    {\r\n        // @TODO - BETA - Replace by UserInterface.\r\n        scenePreloader.elementsUi['minimap'] = scenePreloader.add.dom(minimapConfig.uiX, minimapConfig.uiY)\r\n            .createFromCache('minimap');\r\n        let openButton = scenePreloader.elementsUi['minimap'].getChildByProperty('id', 'minimap-open');\r\n        let closeButton = scenePreloader.elementsUi['minimap'].getChildByProperty('id', 'minimap-close');\r\n        openButton?.addEventListener('click', () => {\r\n            let box = scenePreloader.elementsUi['minimap'].getChildByProperty('id', 'minimap-ui');\r\n            box.classList.remove('hidden');\r\n            openButton.classList.add('hidden');\r\n            let minimap = scenePreloader.gameManager.getActiveScene().minimap;\r\n            if(!minimap){\r\n                return;\r\n            }\r\n            this.showMap(minimap, scenePreloader, openButton, closeButton, box);\r\n        });\r\n        closeButton?.addEventListener('click', () => {\r\n            let box = scenePreloader.elementsUi['minimap'].getChildByProperty('id', 'minimap-ui');\r\n            box.classList.add('hidden');\r\n            if(openButton){\r\n                openButton.classList.remove('hidden');\r\n            }\r\n            let minimap = scenePreloader.gameManager.getActiveScene().minimap;\r\n            if(!minimap){\r\n                return;\r\n            }\r\n            this.hideMap(minimap, scenePreloader, closeButton, box);\r\n        });\r\n    }\r\n\r\n    showMap(minimap, scenePreloader, openButton, closeButton, box)\r\n    {\r\n        if(this.awaitForCamera(minimap)){\r\n            setTimeout(() => {\r\n                this.showMap(minimap, scenePreloader, openButton, closeButton, box);\r\n            }, minimap.awaitOnCamera);\r\n            return;\r\n        }\r\n        minimap.minimapCamera.setVisible(true);\r\n        if(minimap.circle){\r\n            minimap.circle.setVisible(true);\r\n        }\r\n        scenePreloader.gameManager.events.emit('reldens.openUI', {ui: this, openButton, minimap, box});\r\n    }\r\n\r\n    hideMap(minimap, scenePreloader, closeButton, box)\r\n    {\r\n        if(this.awaitForCamera(minimap)){\r\n            setTimeout(() => {\r\n                this.hideMap(minimap, scenePreloader, closeButton, box);\r\n            }, minimap.awaitOnCamera);\r\n            return;\r\n        }\r\n        minimap.minimapCamera.setVisible(false);\r\n        if(minimap.circle){\r\n            minimap.circle.setVisible(false);\r\n        }\r\n        scenePreloader.gameManager.events.emit(\r\n            'reldens.closeUI',\r\n            {ui: this, closeButton, minimap, box}\r\n        );\r\n    }\r\n\r\n    awaitForCamera(minimap)\r\n    {\r\n        return 0 < minimap.awaitOnCamera && (!minimap.minimapCamera || !sc.isFunction(minimap.minimapCamera.setVisible));\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MinimapUi = MinimapUi;\r\n","/**\r\n *\r\n * Reldens - InstructionsUi\r\n *\r\n */\r\n\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass InstructionsUi\r\n{\r\n\r\n    createInstructions(instConfig, uiScene)\r\n    {\r\n        // @TODO - BETA - Replace by UserInterface.\r\n        let dialogBox = uiScene.add.dom(instConfig.uiX, instConfig.uiY).createFromCache('instructions');\r\n        if(!dialogBox){\r\n            Logger.info('Instructions dialog box could not be created.');\r\n            return false;\r\n        }\r\n        let dialogContainer = uiScene.gameManager.gameDom.getElement('#instructions');\r\n        if(!dialogContainer){\r\n            Logger.info('Instructions container not found.');\r\n            return false;\r\n        }\r\n        let openButton = dialogBox.getChildByProperty('id', 'instructions-open');\r\n        openButton?.addEventListener('click', () => {\r\n            // @TODO - BETA - Replace styles by classes.\r\n            dialogContainer.style.display = 'block';\r\n            uiScene.gameManager.events.emit(\r\n                'reldens.openUI',\r\n                {ui: this, openButton, dialogBox, dialogContainer, uiScene}\r\n            );\r\n        });\r\n        let closeButton = uiScene.gameManager.gameDom.getElement('#instructions-close');\r\n        closeButton?.addEventListener('click', () => {\r\n            // @TODO - BETA - Replace styles by classes.\r\n            dialogContainer.style.display = 'none';\r\n            uiScene.gameManager.events.emit(\r\n                'reldens.closeUI',\r\n                {ui: this, closeButton, openButton, dialogBox, dialogContainer, uiScene}\r\n            );\r\n        });\r\n        uiScene.elementsUi['instructions'] = dialogBox;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.InstructionsUi = InstructionsUi;\r\n","/**\r\n *\r\n * Reldens - SettingsUi\r\n *\r\n */\r\n\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass SettingsUi\r\n{\r\n\r\n    createSettings(settingsConfig, uiScene)\r\n    {\r\n        // @TODO - BETA - Replace by UserInterface.\r\n        let dialogBox = uiScene.add.dom(settingsConfig.uiX, settingsConfig.uiY).createFromCache('settings');\r\n        if(!dialogBox){\r\n            Logger.info('Settings dialog box could not be created.');\r\n            return false;\r\n        }\r\n        let settingsTemplate = uiScene.cache.html.get('settings-content');\r\n        if(!settingsTemplate){\r\n            Logger.info('Settings template not found.');\r\n            return false;\r\n        }\r\n        uiScene.gameManager.gameDom.appendToElement('.content', settingsTemplate);\r\n        let dialogContainer = uiScene.gameManager.gameDom.getElement('#settings-ui');\r\n        if(!dialogContainer){\r\n            Logger.info('Settings container not found.');\r\n            return false;\r\n        }\r\n        let closeButton = uiScene.gameManager.gameDom.getElement('#settings-close');\r\n        let openButton = dialogBox.getChildByProperty('id', 'settings-open');\r\n        openButton?.addEventListener('click', () => {\r\n            // @TODO - BETA - Replace styles classes.\r\n            dialogContainer.style.display = 'block';\r\n            if(openButton){\r\n                openButton.style.display = 'none';\r\n            }\r\n            uiScene.gameManager.events.emit(\r\n                'reldens.openUI',\r\n                {ui: this, openButton, dialogBox, dialogContainer, uiScene}\r\n            );\r\n        });\r\n        closeButton?.addEventListener('click', () => {\r\n            // @TODO - BETA - Replace styles classes.\r\n            dialogContainer.style.display = 'none';\r\n            if(openButton){\r\n                openButton.style.display = 'block';\r\n            }\r\n            uiScene.gameManager.events.emit(\r\n                'reldens.closeUI',\r\n                {ui: this, closeButton, openButton, dialogBox, dialogContainer, uiScene}\r\n            );\r\n        });\r\n        uiScene.elementsUi['settings'] = dialogBox;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.SettingsUi = SettingsUi;\r\n","/**\r\n *\r\n * Reldens - Joystick\r\n *\r\n */\r\n\r\nconst { GameConst } = require('../constants');\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass Joystick\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.gameManager = props?.scenePreloader?.gameManager;\r\n        this.scenePreloader = props?.scenePreloader;\r\n        this.gameDom = this.gameManager?.gameDom;\r\n        this.isDragging = false;\r\n        this.centerX = false;\r\n        this.centerY = false;\r\n        this.threshold = this.gameManager.config.getWithoutLogs('client/ui/controls/joystickThreshold', 20);\r\n        this.joystickLeft = this.gameManager.config.getWithoutLogs('client/ui/controls/joystickLeft', 25);\r\n        this.joystickTop = this.gameManager.config.getWithoutLogs('client/ui/controls/joystickTop', 25);\r\n        this.positionSufix = 'px';\r\n    }\r\n\r\n    registerJoystickController()\r\n    {\r\n        if(!this.gameManager){\r\n            Logger.error('GameManager undefined on Joystick.');\r\n            return false;\r\n        }\r\n        this.joystick = this.gameDom.getElement('#joystick');\r\n        this.joystickThumb = this.gameDom.getElement('#joystick-thumb');\r\n        this.joystickThumb.addEventListener('mousedown', (event) => {\r\n            this.applyMovement(event.clientX, event.clientY);\r\n        });\r\n        this.joystickThumb.addEventListener('touchstart', (event) => {\r\n            event.preventDefault();\r\n            let touch = event.touches?.shift();\r\n            this.applyMovement(touch.clientX, touch.clientY);\r\n        });\r\n        this.gameDom.getDocument().addEventListener('mousemove', this.handleMouseMove.bind(this));\r\n        this.gameDom.getDocument().addEventListener('mouseup', this.handleStop.bind(this));\r\n        this.gameDom.getDocument().addEventListener('touchmove', this.handleTouchMove.bind(this));\r\n        this.gameDom.getDocument().addEventListener('touchend', this.handleStop.bind(this));\r\n    }\r\n\r\n    position(value)\r\n    {\r\n        return value+this.positionSufix;\r\n    }\r\n\r\n    applyMovement(clientX, clientY)\r\n    {\r\n        this.isDragging = true;\r\n        let rect = this.joystick.getBoundingClientRect();\r\n        this.centerX = rect.width / 2;\r\n        this.centerY = rect.height / 2;\r\n        this.updateThumbPosition(clientX - rect.left, clientY - rect.top);\r\n    }\r\n\r\n    handleStop()\r\n    {\r\n        this.isDragging = false;\r\n        this.joystickThumb.style.left = this.position(this.joystickLeft);\r\n        this.joystickThumb.style.top = this.position(this.joystickTop);\r\n        this.gameManager.getCurrentPlayer().stop();\r\n    }\r\n\r\n    updateDirection(x, y)\r\n    {\r\n        let dx = x - this.centerX;\r\n        let dy = y - this.centerY;\r\n        let direction = GameConst.STOP;\r\n        if(Math.abs(dx) > Math.abs(dy)){\r\n            if(Math.abs(dx) > this.threshold){\r\n                direction = dx > 0\r\n                    ? (Math.abs(dy) > this.threshold ? (dy > 0 ? 'right-down' : 'right-up') : 'right')\r\n                    : (Math.abs(dy) > this.threshold ? (dy > 0 ? 'left-down' : 'left-up') : 'left');\r\n                for(let dir of direction.split('-')){\r\n                    try {\r\n                        this.gameManager.getCurrentPlayer()[dir]();\r\n                    } catch (error) {\r\n                        //Logger.debug('Unknown direction on PlayerEngine.', dir, error);\r\n                    }\r\n                }\r\n                return direction;\r\n            }\r\n        }\r\n        if(Math.abs(dy) > this.threshold){\r\n            direction = dy > 0\r\n                ? (Math.abs(dx) > this.threshold ? (dx > 0 ? 'down-right' : 'down-left') : 'down')\r\n                : (Math.abs(dx) > this.threshold ? (dx > 0 ? 'up-right' : 'up-left') : 'up');\r\n            for(let dir of direction.split('-')){\r\n                try {\r\n                    this.gameManager.getCurrentPlayer()[dir]();\r\n                } catch (error) {\r\n                    //Logger.debug('Unknown direction on PlayerEngine.', dir, error);\r\n                }\r\n            }\r\n            return direction;\r\n        }\r\n        this.gameManager.getCurrentPlayer().stop();\r\n        return direction;\r\n    }\r\n\r\n    updateThumbPosition(x, y)\r\n    {\r\n        let dx = x - this.centerX;\r\n        let dy = y - this.centerY;\r\n        let distance = Math.sqrt(dx * dx + dy * dy);\r\n        let maxDistance = Math.min(this.centerX, this.centerY);\r\n        if(distance > maxDistance){\r\n            let angle = Math.atan2(dy, dx);\r\n            let joystickLeft = Math.cos(angle) * maxDistance + this.centerX - this.joystickThumb.offsetWidth / 2;\r\n            this.joystickThumb.style.left = this.position(joystickLeft);\r\n            let joystickTop = Math.sin(angle) * maxDistance + this.centerY - this.joystickThumb.offsetHeight / 2;\r\n            this.joystickThumb.style.top = this.position(joystickTop);\r\n            return;\r\n        }\r\n        let joystickLeft = x - this.joystickThumb.offsetWidth / 2;\r\n        this.joystickThumb.style.left = this.position(joystickLeft);\r\n        let joystickTop = y - this.joystickThumb.offsetHeight / 2;\r\n        this.joystickThumb.style.top = this.position(joystickTop);\r\n    }\r\n\r\n    handleMouseMove(event)\r\n    {\r\n        if(!this.isDragging){\r\n            return;\r\n        }\r\n        let rect = this.joystick.getBoundingClientRect();\r\n        let x = event.clientX - rect.left;\r\n        let y = event.clientY - rect.top;\r\n        this.updateThumbPosition(x, y);\r\n        this.updateDirection(x, y);\r\n    }\r\n\r\n    handleTouchMove(event)\r\n    {\r\n        if(!this.isDragging){\r\n            return;\r\n        }\r\n        let touch = event.touches?.shift();\r\n        let rect = this.joystick.getBoundingClientRect();\r\n        let x = touch.clientX - rect.left;\r\n        let y = touch.clientY - rect.top;\r\n        this.updateThumbPosition(x, y);\r\n        this.updateDirection(x, y);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.Joystick = Joystick;\r\n","/**\r\n *\r\n * Reldens - ClientStartHandler\r\n *\r\n */\r\n\r\nconst { RegistrationFormHandler } = require('./registration-form-handler');\r\nconst { TermsAndConditionsHandler } = require('./terms-and-conditions-handler');\r\nconst { LoginFormHandler } = require('./login-form-handler');\r\nconst { ForgotPasswordFormHandler } = require('./forgot-password-form-handler');\r\nconst { GuestFormHandler } = require('./guest-form-handler');\r\nconst { FullScreenHandler } = require('./full-screen-handler');\r\n\r\nclass ClientStartHandler\r\n{\r\n\r\n    constructor(gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n    }\r\n\r\n    clientStart()\r\n    {\r\n        let registrationForm = new RegistrationFormHandler(this.gameManager);\r\n        registrationForm.activateRegistration();\r\n        let guestForm = new GuestFormHandler(this.gameManager);\r\n        guestForm.activateGuest();\r\n        let termsAndConditions = new TermsAndConditionsHandler(this.gameManager);\r\n        termsAndConditions.activateTermsAndConditions();\r\n        let loginForm = new LoginFormHandler(this.gameManager);\r\n        loginForm.activateLogin();\r\n        let forgotPasswordForm = new ForgotPasswordFormHandler(this.gameManager);\r\n        forgotPasswordForm.activateForgotPassword();\r\n        forgotPasswordForm.displayForgotPassword();\r\n        let fullScreen = new FullScreenHandler(this.gameManager);\r\n        fullScreen.activateFullScreen();\r\n        if(this.gameManager.firebase){\r\n            this.gameManager.firebase.startFirebase();\r\n        }\r\n        Object.assign(this.gameManager.elements, {\r\n            registrationForm,\r\n            termsAndConditions,\r\n            loginForm,\r\n            forgotPasswordForm,\r\n            fullScreen\r\n        });\r\n        this.gameManager.events.emitSync('reldens.clientStartAfter', this);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ClientStartHandler = ClientStartHandler;\r\n","/**\r\n *\r\n * Reldens - RegistrationHandler\r\n *\r\n */\r\n\r\nconst { ErrorsBlockHandler } = require('./errors-block-handler');\r\nconst { GameConst } = require('../../constants');\r\n\r\nclass RegistrationFormHandler\r\n{\r\n\r\n    constructor(gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.gameDom = this.gameManager.gameDom;\r\n        this.form = gameManager.gameDom.getElement(GameConst.SELECTORS.REGISTER_FORM);\r\n    }\r\n\r\n    activateRegistration()\r\n    {\r\n        if(!this.form){\r\n            return false;\r\n        }\r\n        if(!this.gameManager.config.get('client/general/users/allowRegistration')){\r\n            this.form.classList.add('hidden');\r\n            return true;\r\n        }\r\n        ErrorsBlockHandler.reset(this.form);\r\n        let selectors = GameConst.SELECTORS;\r\n        let acceptTermsCheckbox = this.gameDom.getElement(selectors.TERMS.ACCEPT);\r\n        let termsContainer = this.gameDom.getElement(selectors.TERMS.BOX);\r\n        this.form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            if(!this.form.checkValidity()){\r\n                return false;\r\n            }\r\n            let password = this.gameDom.getElement(selectors.REGISTRATION.PASSWORD).value;\r\n            let rePassword = this.gameDom.getElement(selectors.REGISTRATION.RE_PASSWORD).value;\r\n            let responseErrorBlock = this.form.querySelector(selectors.RESPONSE_ERROR);\r\n            if(password !== rePassword && responseErrorBlock){\r\n                // @TODO - BETA - Execute translations before the game engine starts.\r\n                /*\r\n                responseErrorBlock.innerHTML = this.gameManager.services.translator.t(\r\n                    'game.passwordConfirmationNotMatch'\r\n                );\r\n                */\r\n                responseErrorBlock.innerHTML = 'Password and confirmation does not match.';\r\n                return false;\r\n            }\r\n            if(!acceptTermsCheckbox.checked && responseErrorBlock){\r\n                // @TODO - BETA - Execute translations before the game engine starts.\r\n                /*\r\n                responseErrorBlock.innerHTML = this.gameManager.services.translator.t(\r\n                    'game.pleaseReadTermsAndConditions'\r\n                );\r\n                */\r\n                responseErrorBlock.innerHTML = 'Please read and accept the terms and conditions and continue.';\r\n                return false;\r\n            }\r\n            termsContainer?.classList.add(GameConst.CLASSES.HIDDEN);\r\n            this.form.querySelector(selectors.LOADING_CONTAINER).classList.remove(GameConst.CLASSES.HIDDEN);\r\n            let formData = {\r\n                formId: this.form.id,\r\n                email: this.gameDom.getElement(selectors.REGISTRATION.EMAIL).value,\r\n                username: this.gameDom.getElement(selectors.REGISTRATION.USERNAME).value,\r\n                password: password,\r\n                rePassword: rePassword\r\n            };\r\n            this.gameManager.startGame(formData, true);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.RegistrationFormHandler = RegistrationFormHandler;\r\n","/**\r\n *\r\n * Reldens - ErrorsBlockHandler\r\n *\r\n */\r\n\r\nconst { GameConst } = require('../../constants');\r\n\r\nclass ErrorsBlockHandler\r\n{\r\n\r\n    static reset(form)\r\n    {\r\n        let errorBlock = form.querySelector(GameConst.SELECTORS.RESPONSE_ERROR);\r\n        form.querySelector(GameConst.SELECTORS.INPUT).addEventListener('focus', () => {\r\n            errorBlock.innerHTML = '';\r\n            let loadingContainer = form.querySelector(GameConst.SELECTORS.LOADING_CONTAINER);\r\n            if(loadingContainer){\r\n                loadingContainer?.classList.add(GameConst.CLASSES.HIDDEN);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ErrorsBlockHandler = ErrorsBlockHandler;\r\n","/**\r\n *\r\n * Reldens - TermsAndConditionsHandler\r\n *\r\n */\r\n\r\nconst { GameConst } = require('../../constants');\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass TermsAndConditionsHandler\r\n{\r\n\r\n    constructor(gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.gameDom = this.gameManager.gameDom;\r\n        this.linkContainer = this.gameManager.gameDom.getElement(GameConst.SELECTORS.TERMS.LINK_CONTAINER);\r\n    }\r\n\r\n    activateTermsAndConditions()\r\n    {\r\n        if(!this.linkContainer){\r\n            return false;\r\n        }\r\n        let termsAndConditionsUrl = this.gameManager.appServerUrl+GameConst.ROUTE_PATHS.TERMS_AND_CONDITIONS;\r\n        let params = (new URL(this.gameDom.getDocument().location)).searchParams;\r\n        let language = params.get('lang', '');\r\n        if('' !== language){\r\n            termsAndConditionsUrl+= '?lang='+language;\r\n        }\r\n        this.gameDom.getJSON(termsAndConditionsUrl, (err, response) => {\r\n            if(err){\r\n                Logger.error('TermsAndConditionsHandler - request failed.', err);\r\n                return false;\r\n            }\r\n            if(!response){\r\n                Logger.error('TermsAndConditionsHandler - empty response.');\r\n                return false;\r\n            }\r\n            if(!response.body || !response.heading || !response.checkboxLabel || !response.link){\r\n                return false;\r\n            }\r\n            let selectors = GameConst.SELECTORS.TERMS;\r\n            this.gameDom.updateContent(selectors.HEADING, response.heading);\r\n            this.gameDom.updateContent(selectors.BODY, response.body);\r\n            this.gameDom.updateContent(selectors.ACCEPT_LABEL, response.checkboxLabel);\r\n            this.gameDom.updateContent(selectors.LINK, response.link);\r\n            let termsLink = this.gameDom.getElement(selectors.LINK);\r\n            let termsContainer = this.gameDom.getElement(selectors.BOX);\r\n            termsLink?.addEventListener('click', (e) => {\r\n                e.preventDefault();\r\n                termsContainer?.classList.remove(GameConst.CLASSES.HIDDEN);\r\n            });\r\n            this.gameDom.getElement(selectors.CLOSE)?.addEventListener('click', () => {\r\n                termsContainer?.classList.add(GameConst.CLASSES.HIDDEN);\r\n            });\r\n            let register = this.gameDom.getElement(GameConst.SELECTORS.REGISTER_FORM);\r\n            if(register){\r\n                let errorBlock = this.gameDom.getElement(GameConst.SELECTORS.RESPONSE_ERROR, register);\r\n                let acceptTermsCheckbox = this.gameDom.getElement(selectors.ACCEPT);\r\n                let acceptLabel = this.gameDom.getElement(selectors.ACCEPT_LABEL);\r\n                if(acceptTermsCheckbox){\r\n                    acceptTermsCheckbox.addEventListener('click', () => {\r\n                        if(acceptTermsCheckbox.checked && errorBlock){\r\n                            errorBlock.innerHTML = '';\r\n                        }\r\n                    });\r\n                }\r\n                if(acceptTermsCheckbox && acceptLabel){\r\n                    acceptLabel.addEventListener('click', () => {\r\n                        if(acceptTermsCheckbox.checked && errorBlock){\r\n                            errorBlock.innerHTML = '';\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            this.linkContainer?.classList.remove(GameConst.CLASSES.HIDDEN);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TermsAndConditionsHandler = TermsAndConditionsHandler;\r\n","/**\r\n *\r\n * Reldens - LoginFormHandler\r\n *\r\n */\r\n\r\nconst { ErrorsBlockHandler } = require('./errors-block-handler');\r\nconst { GameConst } = require('../../constants');\r\n\r\nclass LoginFormHandler\r\n{\r\n\r\n    constructor(gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.form = gameManager.gameDom.getElement(GameConst.SELECTORS.LOGIN_FORM);\r\n    }\r\n\r\n    activateLogin()\r\n    {\r\n        if(!this.form){\r\n            return false;\r\n        }\r\n        ErrorsBlockHandler.reset(this.form);\r\n        this.form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            ErrorsBlockHandler.reset(this.form);\r\n            if(!this.form.checkValidity()){\r\n                return false;\r\n            }\r\n            if(this.gameManager.submitedForm){\r\n                return false;\r\n            }\r\n            this.gameManager.submitedForm = true;\r\n            this.form.querySelector(GameConst.SELECTORS.LOADING_CONTAINER).classList.remove(GameConst.CLASSES.HIDDEN);\r\n            let formData = {\r\n                formId: this.form.id,\r\n                username: this.form.querySelector(GameConst.SELECTORS.LOGIN.USERNAME).value,\r\n                password: this.form.querySelector(GameConst.SELECTORS.LOGIN.PASSWORD).value\r\n            };\r\n            return this.gameManager.startGame(formData, false);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.LoginFormHandler = LoginFormHandler;\r\n","/**\r\n *\r\n * Reldens - ForgotPasswordFormHandler\r\n *\r\n */\r\n\r\nconst { ErrorsBlockHandler } = require('./errors-block-handler');\r\nconst { GameConst } = require('../../constants');\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass ForgotPasswordFormHandler\r\n{\r\n\r\n    constructor(gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.gameDom = this.gameManager.gameDom;\r\n        this.form = this.gameManager.gameDom.getElement(GameConst.SELECTORS.FORGOT_PASSWORD_FORM);\r\n    }\r\n\r\n    activateForgotPassword()\r\n    {\r\n        if(!this.form){\r\n            return false;\r\n        }\r\n        if(!this.gameManager.config.get('client/general/users/allowRegistration')){\r\n            this.form.classList.add('hidden');\r\n            return true;\r\n        }\r\n        ErrorsBlockHandler.reset(this.form);\r\n        this.form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            ErrorsBlockHandler.reset(this.form);\r\n            if(!this.form.checkValidity()){\r\n                return false;\r\n            }\r\n            this.form.querySelector(GameConst.SELECTORS.LOADING_CONTAINER).classList.remove(GameConst.CLASSES.HIDDEN);\r\n            let formData = {\r\n                formId: this.form.id,\r\n                forgot: true,\r\n                email: this.form.querySelector(GameConst.SELECTORS.FORGOT_PASSWORD.EMAIL).value\r\n            };\r\n            this.gameManager.startGame(formData, false);\r\n        });\r\n    }\r\n\r\n    displayForgotPassword()\r\n    {\r\n        this.gameDom.getJSON(this.gameManager.appServerUrl+GameConst.ROUTE_PATHS.MAILER, (err, response) => {\r\n            if(err){\r\n                Logger.error('ForgotPasswordFormHandler - mailer check failed.', err);\r\n                return;\r\n            }\r\n            if(!response || !response.enabled){\r\n                return;\r\n            }\r\n            this.gameDom.getElement(GameConst.SELECTORS.FORGOT_PASSWORD.CONTAINER)?.classList.remove(\r\n                GameConst.CLASSES.HIDDEN\r\n            );\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ForgotPasswordFormHandler = ForgotPasswordFormHandler;\r\n","/**\r\n *\r\n * Reldens - GuestFormHandler\r\n *\r\n */\r\n\r\nconst { ErrorsBlockHandler } = require('./errors-block-handler');\r\nconst { GameConst } = require('../../constants');\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass GuestFormHandler\r\n{\r\n\r\n    constructor(gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.gameDom = this.gameManager.gameDom;\r\n        this.form = gameManager.gameDom.getElement(GameConst.SELECTORS.GUEST_FORM);\r\n    }\r\n\r\n    activateGuest()\r\n    {\r\n        if(!this.form){\r\n            return false;\r\n        }\r\n        if(!this.gameManager.config.get('client/general/users/allowGuest')){\r\n            this.form.classList.add('hidden');\r\n            return true;\r\n        }\r\n        ErrorsBlockHandler.reset(this.form);\r\n        let selectors = GameConst.SELECTORS;\r\n        this.form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            if(!this.form.checkValidity()){\r\n                return false;\r\n            }\r\n            this.form.querySelector(selectors.LOADING_CONTAINER).classList.remove(GameConst.CLASSES.HIDDEN);\r\n            let randomGuestName = 'guest-'+sc.randomChars(12);\r\n            let userName = this.gameManager.config.getWithoutLogs('client/general/users/allowGuestUserName', false)\r\n                ? this.gameDom.getElement(selectors.GUEST.USERNAME).value\r\n                : randomGuestName;\r\n            let formData = {\r\n                formId: this.form.id,\r\n                username: userName,\r\n                password: userName,\r\n                rePassword: userName,\r\n                isGuest: true\r\n            };\r\n            this.gameManager.startGame(formData, true);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.GuestFormHandler = GuestFormHandler;\r\n","/**\r\n *\r\n * Reldens - FullScreenHandler\r\n *\r\n */\r\n\r\nconst { GameConst } = require('../../constants');\r\n\r\nclass FullScreenHandler\r\n{\r\n\r\n    constructor(gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.gameDom = this.gameManager.gameDom;\r\n        this.body = this.gameDom.getElement(GameConst.SELECTORS.BODY);\r\n    }\r\n\r\n    activateFullScreen()\r\n    {\r\n        this.gameDom.getElement(GameConst.SELECTORS.FULL_SCREEN_BUTTON)?.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            if(!this.gameDom.getDocument().fullscreenEnabled){\r\n                return false;\r\n            }\r\n            this.body.requestFullscreen();\r\n            this.goFullScreen();\r\n        });\r\n        this.gameDom.getWindow().matchMedia('(display-mode: fullscreen)').addEventListener('change', ({ matches }) => {\r\n            if(matches){\r\n                this.goFullScreen();\r\n                return;\r\n            }\r\n            this.exitFullScreen();\r\n        });\r\n    }\r\n\r\n    goFullScreen()\r\n    {\r\n        this.body.classList.add(GameConst.CLASSES.FULL_SCREEN_ON);\r\n        if(this.gameManager?.gameEngine){\r\n            this.gameManager.gameEngine.updateGameSize(this.gameManager);\r\n        }\r\n    }\r\n\r\n    exitFullScreen()\r\n    {\r\n        this.body.classList.remove(GameConst.CLASSES.FULL_SCREEN_ON);\r\n        if(this.gameManager?.gameEngine){\r\n            this.gameManager.gameEngine.updateGameSize(this.gameManager);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports.FullScreenHandler = FullScreenHandler;\r\n","/**\r\n *\r\n * Reldens - FeaturesManager\r\n *\r\n * This class will handle features activation on the client depending on the configuration received from the server.\r\n *\r\n */\r\n\r\nconst { ClientCoreFeatures } = require('./config-client');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass FeaturesManager\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        this.events = sc.get(props, 'events', false);\r\n    }\r\n\r\n    async loadFeatures(featuresCodeList)\r\n    {\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in FeaturesManager.');\r\n            return false;\r\n        }\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in FeaturesManager.');\r\n            return false;\r\n        }\r\n        this.featuresList = {};\r\n        await this.events.emit('reldens.loadFeatures', this, featuresCodeList);\r\n        let featuresKeys = Object.keys(featuresCodeList);\r\n        if(0 === featuresKeys.length){\r\n            return this.featuresList;\r\n        }\r\n        for(let i of featuresKeys){\r\n            let featureCode = featuresCodeList[i];\r\n            if(!sc.hasOwn(ClientCoreFeatures, featureCode)){\r\n                continue;\r\n            }\r\n            this.featuresList[featureCode] = new ClientCoreFeatures[featureCode]();\r\n            if('function' === typeof this.featuresList[featureCode].setup){\r\n                await this.featuresList[featureCode].setup({gameManager: this.gameManager, events: this.events});\r\n            }\r\n            await this.events.emit('reldens.loadFeature_'+featureCode, this.featuresList[featureCode], this);\r\n        }\r\n        return this.featuresList;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.FeaturesManager = FeaturesManager;\r\n","/**\r\n *\r\n * Reldens - Client Core Features\r\n *\r\n * All the core features plugins will be available here.\r\n * Later we can control if the feature is enabled/disabled using the configuration in the storage.\r\n * Core features will be available as part of the current Reldens version.\r\n *\r\n */\r\n\r\nconst { ChatPlugin } = require('../../chat/client/plugin');\r\nconst { ObjectsPlugin } = require('../../objects/client/plugin');\r\nconst { InventoryPlugin } = require('../../inventory/client/plugin');\r\nconst { ActionsPlugin } = require('../../actions/client/plugin');\r\nconst { UsersPlugin } = require('../../users/client/plugin');\r\nconst { AudioPlugin } = require('../../audio/client/plugin');\r\nconst { RoomsPlugin } = require('../../rooms/client/plugin');\r\nconst { PredictionPlugin } = require('../../prediction/client/plugin');\r\nconst { TeamsPlugin } = require('../../teams/client/plugin');\r\nconst { SnippetsPlugin } = require('../../snippets/client/plugin');\r\nconst { AdsPlugin } = require('../../ads/client/plugin');\r\nconst { WorldPlugin } = require('../../world/client/plugin');\r\nconst { ScoresPlugin } = require('../../scores/client/plugin');\r\nconst { RewardsPlugin } = require('../../rewards/client/plugin');\r\n\r\nmodule.exports.ClientCoreFeatures = {\r\n    chat: ChatPlugin,\r\n    objects: ObjectsPlugin,\r\n    inventory: InventoryPlugin,\r\n    actions: ActionsPlugin,\r\n    users: UsersPlugin,\r\n    audio: AudioPlugin,\r\n    rooms: RoomsPlugin,\r\n    prediction: PredictionPlugin,\r\n    teams: TeamsPlugin,\r\n    snippets: SnippetsPlugin,\r\n    ads: AdsPlugin,\r\n    world: WorldPlugin,\r\n    scores: ScoresPlugin,\r\n    rewards: RewardsPlugin\r\n};\r\n","/**\r\n *\r\n * Reldens - Chat Client Plugin\r\n *\r\n */\r\n\r\nconst { ChatUi } = require('./chat-ui');\r\nconst { MessagesListener } = require('./messages-listener');\r\nconst { TemplatesHandler } = require('./templates-handler');\r\nconst Translations = require('./snippets/en_US');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { ChatConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ChatPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in ActionsPlugin.');\r\n        }\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in ChatPlugin.');\r\n        }\r\n        this.messagesQueu = [];\r\n        this.uiManager = false;\r\n        this.joinRooms = [ChatConst.CHAT_GLOBAL];\r\n        this.setTranslations();\r\n        this.listenEvents();\r\n    }\r\n\r\n    setTranslations()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations, ChatConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events){\r\n            return false;\r\n        }\r\n        // chat messages are global for all rooms, so we use the generic event for every joined room:\r\n        this.events.on('reldens.joinedRoom', async (room) => {\r\n            await MessagesListener.listenMessages(room, this);\r\n        });\r\n        this.events.on('reldens.preloadUiScene', (preloadScene) => {\r\n            TemplatesHandler.preloadTemplates(preloadScene, this.gameManager.config.get('client/ui/chat/showTabs'));\r\n        });\r\n        this.events.on('reldens.createUiScene', (uiScene) => {\r\n            this.uiManager = new ChatUi(uiScene);\r\n            this.uiManager.createUi();\r\n            this.uiManager.createTabs();\r\n            this.uiManager.processMessagesQueue(this.messagesQueu);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ChatPlugin = ChatPlugin;\r\n","/**\r\n *\r\n * Reldens - ChatUi\r\n *\r\n */\r\n\r\nconst { Input } = require('phaser');\r\nconst { SpriteTextFactory } = require('../../game/client/engine/sprite-text-factory');\r\nconst { ChatTabs } = require('./chat-tabs');\r\nconst { ChatConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ChatUi\r\n{\r\n\r\n    constructor(uiScene)\r\n    {\r\n        this.uiScene = uiScene;\r\n        this.gameManager = this.uiScene?.gameManager;\r\n        this.gameDom = this.uiScene?.gameManager?.gameDom;\r\n        this.setChatTypes();\r\n        this.setChatConfiguration();\r\n        this.uiChat = {};\r\n        this.messagesQueu = [];\r\n        this.chatInput = false;\r\n        this.chatSendButton = false;\r\n        this.chatCloseButton = false;\r\n        this.chatOpenButton = false;\r\n    }\r\n\r\n    setChatConfiguration()\r\n    {\r\n        if(!this.gameManager || !this.gameManager.config){\r\n            return false;\r\n        }\r\n        this.uiConfig = this.gameManager.config.get('client/ui/chat');\r\n        this.overheadChat = sc.get(this.uiConfig, 'overheadChat', {});\r\n        this.overHeadChatEnabled = sc.get(this.overheadChat, 'enabled', false);\r\n        this.overheadText = sc.get(this.uiConfig, 'overheadText', {});\r\n        this.isDefaultOpen = sc.get(this.uiConfig, 'defaultOpen', false);\r\n        this.isTyping = sc.get(this.overheadChat, 'isTyping', false);\r\n        this.showTabs = sc.get(this.uiConfig, 'showTabs', false);\r\n        this.closeChatBoxAfterSend = sc.get(this.closeChatBoxAfterSend, 'isTyping', false);\r\n        this.messagesConfig = this.gameManager.config.get('client/chat/messages');\r\n        this.characterLimit = sc.get(this.messagesConfig, 'characterLimit', 0);\r\n        this.characterLimitOverhead = sc.get(this.messagesConfig, 'characterLimitOverhead', 0);\r\n        this.appendErrorTypeOnActiveTab = sc.get(this.messagesConfig, 'appendErrorTypeOnActiveTab', true);\r\n    }\r\n\r\n    setChatTypes()\r\n    {\r\n        if(!this.gameManager){\r\n            Logger.warning('Missing GameManager on ChatUI.');\r\n            return false;\r\n        }\r\n        if(!this.gameDom){\r\n            Logger.warning('Missing GameDom on ChatUI.');\r\n            return false;\r\n        }\r\n        if(!this.gameManager.initialGameData){\r\n            Logger.warning('Missing \"initialGameData\" on ChatUI.');\r\n            return false;\r\n        }\r\n        this.chatTypes = sc.get(this.gameManager.initialGameData, 'chatTypes', []);\r\n        if(0 === this.chatTypes.length){\r\n            return false;\r\n        }\r\n        this.chatTypesById = {};\r\n        for(let chatType of this.chatTypes){\r\n            this.chatTypesById[chatType.id] = chatType;\r\n        }\r\n    }\r\n\r\n    createUi()\r\n    {\r\n        if(!this.uiScene){\r\n            Logger.warning('Missing UI Scene on ChatUI.');\r\n            return false;\r\n        }\r\n        // @TODO - BETA - Replace by UserInterface.\r\n        let {uiX, uiY} = this.uiScene.getUiConfig('chat');\r\n        this.uiChat = this.uiScene.add.dom(uiX, uiY).createFromCache('chat');\r\n        this.uiScene.elementsUi['chat'] = this.uiChat;\r\n        this.chatInput = this.uiChat.getChildByProperty('id', ChatConst.CHAT_INPUT);\r\n        if(!this.chatInput){\r\n            Logger.info('Missing chat input on ChatUI.');\r\n            return false;\r\n        }\r\n        this.setupKeyPressBehaviors();\r\n        this.chatInput.addEventListener('onfocusout', () => {\r\n            this.hideIsTyping();\r\n        });\r\n        this.setupSendButton();\r\n        this.setupOpenCloseButtons();\r\n        if(this.overHeadChatEnabled){\r\n            this.setupOverheadChatEvents();\r\n        }\r\n        if(this.isDefaultOpen){\r\n            this.showChatBox();\r\n        }\r\n    }\r\n\r\n    createTabs()\r\n    {\r\n        if(!this.showTabs){\r\n            return false;\r\n        }\r\n        this.tabs = new ChatTabs(this.gameManager, this.uiScene);\r\n        return true;\r\n    }\r\n\r\n    setupOverheadChatEvents()\r\n    {\r\n        this.gameManager.events.on('reldens.runPlayerAnimation', (playerEngine, playerId, playerState, playerSprite) => {\r\n            this.updateOverheadTextPosition(playerSprite);\r\n        });\r\n    }\r\n\r\n    setupOpenCloseButtons()\r\n    {\r\n        this.chatOpenButton = this.uiChat.getChildByProperty('id', ChatConst.CHAT_OPEN_BUTTON);\r\n        this.chatOpenButton?.addEventListener('click', () => {\r\n            this.showChatBox();\r\n            this.gameManager.events.emit(\r\n                'reldens.openUI',\r\n                {\r\n                    ui: this,\r\n                    openButton: this.chatOpenButton,\r\n                    dialogBox: this.uiChat,\r\n                    dialogContainer: this.uiChat.getChildByProperty('id', ChatConst.CHAT_UI),\r\n                    uiScene: this.uiScene\r\n                }\r\n            );\r\n        });\r\n        this.chatCloseButton = this.uiChat.getChildByProperty('id', ChatConst.CHAT_CLOSE_BUTTON);\r\n        this.chatCloseButton?.addEventListener('click', () => {\r\n            this.hideChatBox();\r\n            this.gameManager.events.emit(\r\n                'reldens.closeUI',\r\n                {\r\n                    ui: this,\r\n                    closeButton: this.chatCloseButton,\r\n                    openButton: this.chatOpenButton,\r\n                    dialogBox: this.uiChat,\r\n                    dialogContainer: this.uiChat.getChildByProperty('id', ChatConst.CHAT_UI),\r\n                    uiScene: this.uiScene\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    setupSendButton()\r\n    {\r\n        this.chatSendButton = this.uiChat.getChildByProperty('id', ChatConst.CHAT_SEND_BUTTON);\r\n        this.chatSendButton?.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            this.sendChatMessage(this.chatInput, this.gameManager.activeRoomEvents);\r\n            this.chatInput.focus();\r\n        });\r\n    }\r\n\r\n    setupKeyPressBehaviors()\r\n    {\r\n        this.uiScene.input.keyboard.on('keyup-ENTER', () => {\r\n            if(!this.isFocussedOnChatInput()){\r\n                this.showChatBox();\r\n                this.chatInput.focus();\r\n            }\r\n        });\r\n        this.chatInput.addEventListener('keyup', (event) => {\r\n            if(event.keyCode === Input.Keyboard.KeyCodes.ENTER){\r\n                event.preventDefault();\r\n                this.sendChatMessage();\r\n                return;\r\n            }\r\n            this.showIsTyping();\r\n        });\r\n    }\r\n\r\n    showOverheadChat(playerSprite, message)\r\n    {\r\n        if(!this.overHeadChatEnabled){\r\n            return false;\r\n        }\r\n        if(playerSprite['overheadTextSprite']){\r\n            this.destroyTextSprite(playerSprite);\r\n        }\r\n        message = this.applyTextLimit(message, this.characterLimitOverhead);\r\n        playerSprite['overheadTextSprite'] = SpriteTextFactory.attachTextToSprite(\r\n            playerSprite,\r\n            message,\r\n            this.overheadText,\r\n            sc.get(this.overheadText, 'topOff', 0),\r\n            'overheadTextSprite',\r\n            this.gameManager.getActiveScene()\r\n        );\r\n        let timeOut = sc.get(this.overheadText, 'timeOut', false);\r\n        if(timeOut){\r\n            setTimeout(() => {\r\n                this.destroyTextSprite(playerSprite);\r\n            }, timeOut);\r\n        }\r\n    }\r\n\r\n    updateOverheadTextPosition(playerSprite)\r\n    {\r\n        if(!playerSprite['overheadTextSprite']){\r\n            return false;\r\n        }\r\n        let relativePosition = SpriteTextFactory.getTextPosition(\r\n            playerSprite,\r\n            playerSprite.playerName,\r\n            this.overheadText,\r\n            sc.get(this.overheadText, 'topOff', 0)\r\n        );\r\n        playerSprite['overheadTextSprite'].x = relativePosition.x;\r\n        playerSprite['overheadTextSprite'].y = relativePosition.y;\r\n    }\r\n\r\n    destroyTextSprite(playerSprite)\r\n    {\r\n        if(!playerSprite['overheadTextSprite']){\r\n            return false;\r\n        }\r\n        playerSprite['overheadTextSprite'].destroy();\r\n        delete playerSprite['overheadTextSprite'];\r\n    }\r\n\r\n    showIsTyping()\r\n    {\r\n        if(!this.overHeadChatEnabled || !this.isTyping){\r\n            return false;\r\n        }\r\n        if(!this.isFocussedOnChatInput()){\r\n            return false;\r\n        }\r\n        this.showOverheadChat(\r\n            this.gameManager.getCurrentPlayerAnimation(),\r\n            this.gameManager.config.getWithoutLogs(\r\n                'client/ui/chat/waitingContent',\r\n                this.t(ChatConst.SNIPPETS.WAITING)\r\n            )\r\n        );\r\n    }\r\n\r\n    hideIsTyping()\r\n    {\r\n        if(!this.isTyping){\r\n            return false;\r\n        }\r\n        this.destroyTextSprite(this.gameManager.getCurrentPlayerAnimation());\r\n    }\r\n\r\n    isFocussedOnChatInput()\r\n    {\r\n        return this.gameManager.gameDom.activeElement() === this.chatInput;\r\n    }\r\n\r\n    showChatBox()\r\n    {\r\n        let box = this.uiChat.getChildByProperty('id', ChatConst.CHAT_UI);\r\n        box.classList.remove('hidden');\r\n        this.uiChat.setDepth(4);\r\n        this.chatOpenButton?.classList.add('hidden');\r\n        let readPanel = this.gameDom.getElement(ChatConst.SELECTORS.CHAT_MESSAGES);\r\n        if(readPanel){\r\n            readPanel.parentNode.scrollTop = readPanel.scrollHeight;\r\n        }\r\n        this.hideNotificationsBalloon();\r\n    }\r\n\r\n    hideChatBox()\r\n    {\r\n        let box = this.uiChat.getChildByProperty('id', ChatConst.CHAT_UI);\r\n        if(!box){\r\n            Logger.info('Chat UI box not found.');\r\n            return false;\r\n        }\r\n        box.classList.add('hidden');\r\n        this.uiChat.setDepth(1);\r\n        this.chatOpenButton?.classList.remove('hidden');\r\n    }\r\n\r\n    showNotificationBalloon()\r\n    {\r\n        this.getActiveBalloon()?.classList.remove('hidden');\r\n    }\r\n\r\n    hideNotificationsBalloon()\r\n    {\r\n        this.getActiveBalloon()?.classList.add('hidden');\r\n    }\r\n\r\n    getActiveBalloon()\r\n    {\r\n        if(!sc.get(this.uiConfig, 'notificationBalloon')){\r\n            return false;\r\n        }\r\n        let chatBalloon = this.uiChat.getChildByProperty('id', ChatConst.CHAT_BALLOON);\r\n        if(!chatBalloon){\r\n            return false;\r\n        }\r\n        return chatBalloon;\r\n    }\r\n\r\n    processMessagesQueue(messages)\r\n    {\r\n        if(0 === messages.length){\r\n            return false;\r\n        }\r\n        for(let message of messages){\r\n            this.attachNewMessage(message);\r\n        }\r\n    }\r\n\r\n    attachNewMessage(message)\r\n    {\r\n        if(!this.gameManager.gameEngine.uiScene.cache){\r\n            // expected while uiScene is being created:\r\n            // Logger.info('Missing uiScene cache on chat message.', message);\r\n            return;\r\n        }\r\n        let messageTemplate = this.gameManager.gameEngine.uiScene.cache.html.get('chatMessage');\r\n        let messageString = this.translateMessage(message);\r\n        let output = this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            from: this.translateFrom(message),\r\n            color: ChatConst.TYPE_COLOR[message[ChatConst.TYPES.KEY]],\r\n            message: messageString\r\n        });\r\n        let defaultType = this.showTabs ? ChatConst.TYPES.MESSAGE : '';\r\n        let messageType = sc.get(message, ChatConst.TYPES.KEY, defaultType);\r\n        let chatType = sc.get(this.chatTypesById, messageType, false);\r\n        let appendToTab = '' !== messageType && chatType?.show_tab\r\n            ? this.gameManager.gameDom.getElement(ChatConst.SELECTORS.TAB_CONTENT_PREFIX+messageType)\r\n            : false;\r\n        if(appendToTab){\r\n            this.appendWithScroll(appendToTab, output);\r\n        }\r\n        let alsoShowInTab = chatType.also_show_in_type\r\n            ? this.gameManager.gameDom.getElement(ChatConst.SELECTORS.TAB_CONTENT_PREFIX+chatType.also_show_in_type)\r\n            : false;\r\n        if(alsoShowInTab && alsoShowInTab !== appendToTab){\r\n            this.appendWithScroll(alsoShowInTab, output);\r\n        }\r\n        let appendToMain = '' === messageType\r\n            ? this.gameManager.gameDom.getElement(ChatConst.SELECTORS.CHAT_MESSAGES)\r\n            : false;\r\n        if(appendToMain){\r\n            this.appendWithScroll(appendToMain, output);\r\n        }\r\n        if(this.appendErrorTypeOnActiveTab && ChatConst.TYPES.ERROR === messageType){\r\n            let activeTab = this.gameManager.gameDom.getElement(ChatConst.SELECTORS.TAB_CONTENT_ACTIVE);\r\n            if(\r\n                activeTab\r\n                && activeTab !== appendToTab\r\n                && activeTab !== alsoShowInTab\r\n            ){\r\n                this.appendWithScroll(activeTab, output);\r\n            }\r\n        }\r\n        if(!appendToTab && !alsoShowInTab && !appendToMain){\r\n            if(null === appendToTab){\r\n                Logger.warning('Element not found for selector: .tab-content-'+messageType);\r\n            }\r\n            if(null === alsoShowInTab){\r\n                Logger.warning('Element not found for selector: .tab-content-'+chatType.also_show_in_type);\r\n            }\r\n            Logger.warning('Chat message not attached to any tab or main panel.', {\r\n                message,\r\n                defaultType,\r\n                messageType,\r\n                chatType,\r\n                appendToMain,\r\n                appendToTab\r\n            });\r\n            return;\r\n        }\r\n        if(message[ChatConst.MESSAGE.FROM] && this.isValidMessageType(message[ChatConst.TYPES.KEY])){\r\n            let playerSprite = this.fetchPlayerByName(message[ChatConst.MESSAGE.FROM]);\r\n            if(playerSprite){\r\n                this.showOverheadChat(playerSprite, messageString);\r\n            }\r\n        }\r\n        if(!this.uiChat.getChildByProperty('id', ChatConst.CHAT_UI).classList.contains('hidden')){\r\n            return;\r\n        }\r\n        this.showNotificationBalloon();\r\n    }\r\n\r\n    appendWithScroll(appendTo, output)\r\n    {\r\n        appendTo.innerHTML += output;\r\n        appendTo.parentNode.scrollTop = appendTo.scrollHeight;\r\n    }\r\n\r\n    translateFrom(message)\r\n    {\r\n        let messageType = message[ChatConst.TYPES.KEY];\r\n        let from = message[ChatConst.MESSAGE.FROM] || ChatConst.TYPES.SYSTEM;\r\n        if(!this.isValidSnippetFromType(messageType)){\r\n            return from;\r\n        }\r\n        return this.t(ChatConst.SNIPPETS.PREFIX + ChatConst.TYPES.KEY + messageType);\r\n    }\r\n\r\n    translateMessage(message)\r\n    {\r\n        let messageType = message[ChatConst.TYPES.KEY];\r\n        if(!this.isValidSnippetType(messageType)){\r\n            return message[ChatConst.MESSAGE.KEY];\r\n        }\r\n        let messageData = message[ChatConst.MESSAGE.DATA.KEY];\r\n        if(!messageData){\r\n            return this.t(message[ChatConst.MESSAGE.KEY]);\r\n        }\r\n        if(messageData[ChatConst.MESSAGE.DATA.MODIFIERS]){\r\n            let translatedConcat = '';\r\n            let targetLabel = messageData[ChatConst.MESSAGE.DATA.TARGET_LABEL];\r\n            let propertyKeys = Object.keys(messageData[ChatConst.MESSAGE.DATA.MODIFIERS]);\r\n            for(let propertyKey of propertyKeys){\r\n                let propertyLabel = this.t(propertyKey);\r\n                let propertyValue = messageData[ChatConst.MESSAGE.DATA.MODIFIERS][propertyKey];\r\n                translatedConcat += this.t(message[ChatConst.MESSAGE.KEY], {propertyValue, propertyLabel, targetLabel});\r\n            }\r\n            return translatedConcat;\r\n        }\r\n        return this.t(message[ChatConst.MESSAGE.KEY], messageData);\r\n    }\r\n\r\n    t(snippetKey, params = {}, activeLocale = false)\r\n    {\r\n        return this.gameManager.services.translator.t(snippetKey, params, activeLocale);\r\n    }\r\n\r\n    isValidMessageType(messageType)\r\n    {\r\n        return -1 === this.validMessageTypes().indexOf(messageType);\r\n    }\r\n\r\n    validMessageTypes()\r\n    {\r\n        return [Object.values(ChatConst.TYPES)];\r\n    }\r\n\r\n    isValidSnippetType(messageType)\r\n    {\r\n        let validTypes = this.snippetsMessageTypes();\r\n        let typesKeys = Object.keys(validTypes);\r\n        for(let typeKey of typesKeys){\r\n            let type = validTypes[typeKey];\r\n            if(type === messageType){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    snippetsMessageTypes()\r\n    {\r\n        let types = Object.assign({}, ChatConst.TYPES);\r\n        delete types[ChatConst.TYPES.MESSAGE];\r\n        delete types[ChatConst.TYPES.PRIVATE];\r\n        delete types[ChatConst.TYPES.GLOBAL];\r\n        delete types[ChatConst.TYPES.TEAMS];\r\n        return types;\r\n    }\r\n\r\n    isValidSnippetFromType(from)\r\n    {\r\n        return -1 !== [ChatConst.TYPES.SYSTEM, ChatConst.TYPES.ERROR].indexOf(from);\r\n    }\r\n\r\n    fetchPlayerByName(playerName)\r\n    {\r\n        let players = this.gameManager.getCurrentPlayer().players;\r\n        let keys = Object.keys(players);\r\n        if(1 >= keys.length){\r\n            return false;\r\n        }\r\n        for(let i of keys){\r\n            let player = players[i];\r\n            if(player.playerName === playerName){\r\n                return player;\r\n            }\r\n        }\r\n    }\r\n\r\n    sendChatMessage()\r\n    {\r\n        // validate if there is anything to send:\r\n        if(!this.isValidMessage()){\r\n            return false;\r\n        }\r\n        // check if is a global chat (must begin with #) and if the global chat room is ready:\r\n        let messageAllowedText = this.applyTextLimit(this.chatInput.value, this.characterLimit);\r\n        let message = {act: ChatConst.CHAT_ACTION, m: messageAllowedText};\r\n        this.gameManager.events.emitSync('reldens.chatMessageObjectCreated', this, message);\r\n        // both global or private messages use the global chat room:\r\n        this.useGlobalRoom()\r\n            ? this.useGlobalRoomForMessage(message)\r\n            : this.gameManager.activeRoomEvents.send(message);\r\n        // for last empty the input once the message was sent:\r\n        this.chatInput.value = '';\r\n        if(this.closeChatBoxAfterSend){\r\n            this.hideChatBox();\r\n        }\r\n    }\r\n\r\n    applyTextLimit(text, limit)\r\n    {\r\n        // this is also validated on the server:\r\n        return 0 < limit && limit < text.length ? text.substring(0, limit) : text;\r\n    }\r\n\r\n    useGlobalRoom()\r\n    {\r\n        return 0 === this.chatInput.value.indexOf('#') || 0 === this.chatInput.value.indexOf('@');\r\n    }\r\n\r\n    isValidMessage()\r\n    {\r\n        // this is also validated on the server:\r\n        return this.chatInput.value && 0 < this.chatInput.value.replace('#', '').replace('@', '').trim().length;\r\n    }\r\n\r\n    useGlobalRoomForMessage(message)\r\n    {\r\n        // if is global check the global chat room:\r\n        let globalChat = sc.get(this.gameManager.joinedRooms, ChatConst.CHAT_GLOBAL, false);\r\n        if(!globalChat){\r\n            Logger.error('Global chat room not found.');\r\n            return false;\r\n        }\r\n        if(0 === this.chatInput.value.indexOf('@')){\r\n            this.sendPrivateMessage(message, globalChat);\r\n            return;\r\n        }\r\n        this.globalSend(globalChat, message);\r\n    }\r\n\r\n    sendPrivateMessage(message, globalChat)\r\n    {\r\n        let playerName = this.chatInput.value.substring(1, this.chatInput.value.indexOf(' '));\r\n        if('@' === playerName){\r\n            return false;\r\n        }\r\n        message.t = playerName;\r\n        this.globalSend(globalChat, message);\r\n    }\r\n\r\n    globalSend(globalChat, message)\r\n    {\r\n        try {\r\n            globalChat.send('*', message);\r\n        } catch (error) {\r\n            Logger.critical(error);\r\n            this.gameDom.alertReload(this.gameManager.services.translator.t('game.errors.connectionLost'));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ChatUi = ChatUi;\r\n","/**\r\n *\r\n * Reldens - ChatTabs\r\n *\r\n */\r\n\r\nconst { ChatConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ChatTabs\r\n{\r\n\r\n    constructor(gameManager, uiScene)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.uiScene = uiScene;\r\n        this.showTabs = this.gameManager.config.get('client/ui/chat/showTabs');\r\n        this.containerTemplate = false;\r\n        this.headerTemplate = false;\r\n        this.contentTemplate = false;\r\n        this.createTabs();\r\n        this.activateTabs();\r\n    }\r\n\r\n    createTabs()\r\n    {\r\n        if(!this.isReady()){\r\n            return false;\r\n        }\r\n        let chatTypes = sc.get(this.gameManager.initialGameData, 'chatTypes', []);\r\n        if(0 === chatTypes.length){\r\n            Logger.info('Chat types empty.');\r\n            return false;\r\n        }\r\n        let chatContentsElement = this.gameManager.gameDom.getElement(ChatConst.SELECTORS.CONTENTS);\r\n        if(!chatContentsElement){\r\n            Logger.info('Chat contents element not found.');\r\n            return false;\r\n        }\r\n        if(!this.fetchTemplates()){\r\n            return false;\r\n        }\r\n        let tabsHeaders = '';\r\n        let tabsContents = '';\r\n        let i = 0;\r\n        for(let chatType of chatTypes){\r\n            if(!chatType.show_tab){\r\n                continue;\r\n            }\r\n            let tabKey = chatType.key;\r\n            let tabId = chatType.id;\r\n            let headerClone = Object.assign({}, {headerTemplate: this.headerTemplate});\r\n            tabsHeaders += this.gameManager.gameEngine.parseTemplate(\r\n                headerClone.headerTemplate,\r\n                {\r\n                \ttabId,\r\n                \ttabLabel: this.gameManager.services.translator.t(\r\n                        ChatConst.SNIPPETS.PREFIX+ChatConst.SNIPPETS.TAB_PREFIX+tabKey\r\n                    ),\r\n                    className: 0 === i ? ' active' : ''\r\n\t            }\r\n            );\r\n            let contentClone = Object.assign({}, {contentTemplate: this.contentTemplate});\r\n            tabsContents += this.gameManager.gameEngine.parseTemplate(\r\n                contentClone.contentTemplate,\r\n                {\r\n                    tabId,\r\n                    tabKey,\r\n                    className: 0 === i ? ' active' : ''\r\n                }\r\n            );\r\n            i++;\r\n        }\r\n        let tabs = this.gameManager.gameEngine.parseTemplate(this.containerTemplate, {tabsHeaders, tabsContents});\r\n        this.gameManager.gameDom.updateContent(ChatConst.SELECTORS.CONTENTS, tabs);\r\n    }\r\n\r\n    fetchTemplates()\r\n    {\r\n        this.containerTemplate = this.uiScene.cache.html.get('chatTabsContainer');\r\n        if(!this.containerTemplate){\r\n            Logger.info('Chat containerTemplate not found.');\r\n            return false;\r\n        }\r\n        this.headerTemplate = this.uiScene.cache.html.get('chatTabLabel');\r\n        if(!this.headerTemplate){\r\n            Logger.info('Chat headerTemplate not found.');\r\n            return false;\r\n        }\r\n        this.contentTemplate = this.uiScene.cache.html.get('chatTabContent');\r\n        if(!this.contentTemplate){\r\n            Logger.info('Chat contentTemplate not found.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isReady()\r\n    {\r\n        if(!this.gameManager){\r\n            Logger.error('ChatTabs, missing game manager.');\r\n        }\r\n        if(!this.uiScene){\r\n            Logger.error('ChatTabs, missing UI Scene.');\r\n        }\r\n        return !(!this.showTabs || !this.gameManager || !this.uiScene);\r\n    }\r\n\r\n    activateTabs()\r\n    {\r\n        let labels = this.gameManager.gameDom.getElements('.tab-label');\r\n        for(let label of labels){\r\n            label.addEventListener('click', (event) => {\r\n                let previousLabel = this.gameManager.gameDom.getElement('.tab-label.active');\r\n                previousLabel?.classList.remove('active');\r\n                event.target.classList.add('active');\r\n                let previousContent = this.gameManager.gameDom.getElement('.tab-content.active');\r\n                previousContent?.classList.remove('active');\r\n                let activate = this.gameManager.gameDom.getElement('.tab-content-'+event.target.dataset.tabId);\r\n                if(!activate){\r\n                    Logger.warning('Tab content was not found.', event);\r\n                    return false;\r\n                }\r\n                activate.classList.add('active');\r\n                activate.parentNode.scrollTop = activate.scrollHeight;\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ChatTabs = ChatTabs;\r\n","/**\r\n *\r\n * Reldens - chat/constants\r\n *\r\n */\r\n\r\nlet snippetsPrefix = 'chat.';\r\nlet playerPrefix = 'player.';\r\nlet tabsPrefix = 'tabs.';\r\n\r\nlet types = {\r\n    KEY: 'ctk',\r\n    MESSAGE: 1,\r\n    JOINED: 2,\r\n    SYSTEM: 3,\r\n    PRIVATE: 4,\r\n    DAMAGE: 5,\r\n    REWARD: 6,\r\n    SKILL: 7,\r\n    TEAMS: 8,\r\n    GLOBAL: 9,\r\n    ERROR: 10\r\n};\r\n\r\nmodule.exports.ChatConst = {\r\n    ROOM_TYPE_CHAT: 'chat',\r\n    CHAT_ACTION: 'c',\r\n    TYPES: types,\r\n    CHAT_FROM: 'f',\r\n    CHAT_TO: 't',\r\n    CHAT_UI: 'chat-ui',\r\n    CHAT_FORM: 'chat-form',\r\n    CHAT_INPUT: 'chat-input',\r\n    CHAT_SEND_BUTTON: 'chat-send',\r\n    CHAT_CLOSE_BUTTON: 'chat-close',\r\n    CHAT_OPEN_BUTTON: 'chat-open',\r\n    CHAT_BALLOON: 'notification-balloon',\r\n    CHAT_GLOBAL: 'chat',\r\n    MESSAGE: {\r\n        KEY: 'm',\r\n        FROM: 'f',\r\n        TO: 't',\r\n        DATA: {\r\n            KEY: 'md',\r\n            SNIPPET: 'sp',\r\n            PLAYER_NAME: 'pn',\r\n            ROOM_NAME: 'rn',\r\n            DAMAGE: 'd',\r\n            TARGET_LABEL: 'tL',\r\n            SKILL_LABEL: 'sk',\r\n            MODIFIERS: 'mfs',\r\n        },\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'chat',\r\n            pn: 'playerName',\r\n            rn:  'roomName',\r\n            d: 'damage',\r\n            tL: 'targetLabel',\r\n            sk: 'skillLabel',\r\n            mfs: 'modifiers'\r\n        }\r\n    },\r\n    SNIPPETS: {\r\n        PREFIX: snippetsPrefix,\r\n        PLAYER_PREFIX: playerPrefix,\r\n        TAB_PREFIX: tabsPrefix,\r\n        NPC_DAMAGE: snippetsPrefix+'npcDamage',\r\n        NPC_DODGED_SKILL: snippetsPrefix+'dodgedSkill',\r\n        MODIFIERS_APPLY: snippetsPrefix+'modifiersApply',\r\n        JOINED_ROOM: snippetsPrefix+'joinedRoom',\r\n        LEFT_ROOM: snippetsPrefix+'leftRoom',\r\n        PRIVATE_MESSAGE_PLAYER_NOT_FOUND: snippetsPrefix+'playerNotFound',\r\n        GLOBAL_MESSAGE_NOT_ALLOWED: snippetsPrefix+'globalMessageNotAllowed',\r\n        GLOBAL_MESSAGE_PERMISSION_DENIED: snippetsPrefix+'globalMessagePermissionDenied',\r\n        PLAYER:{\r\n            DAMAGE: snippetsPrefix+playerPrefix+'damage',\r\n            DODGED_SKILL: snippetsPrefix+playerPrefix+'dodgedSkill'\r\n        },\r\n        GUEST_INVALID_CHANGE_POINT: snippetsPrefix+'guestInvalidChangePoint',\r\n        WAITING: '...'\r\n    },\r\n    SELECTORS: {\r\n        CONTENTS: '#chat-contents',\r\n        CHAT_MESSAGES: '#chat-messages',\r\n        TAB_CONTENT_PREFIX: '.tab-content-',\r\n        TAB_CONTENT_ACTIVE: '.tab-content.active'\r\n    },\r\n    TYPE_COLOR: {\r\n        [types.MESSAGE]: '#ffffff',\r\n        [types.PRIVATE]: '#f39c12',\r\n        [types.PRIVATE+'.to']: '#00afff',\r\n        [types.GLOBAL]: '#ffff00',\r\n        [types.SYSTEM]: '#2ecc71',\r\n        [types.ERROR]: '#ff0000',\r\n        [types.DAMAGE]: '#ff0000',\r\n        [types.SYSTEM+'.modifiers']: '#0feeff',\r\n        [types.REWARD]: '#2ecc71',\r\n        [types.TEAMS]: '#2ecc71',\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - MessagesListener\r\n *\r\n */\r\n\r\nconst { ChatConst } = require('../constants');\r\n\r\nclass MessagesListener\r\n{\r\n\r\n    static async listenMessages(room, chatPack)\r\n    {\r\n        room.onMessage('*', (message) => {\r\n            if(ChatConst.CHAT_ACTION !== message.act){\r\n                return;\r\n            }\r\n            if(!chatPack.uiManager){\r\n                chatPack.messagesQueu.push(message);\r\n                return;\r\n            }\r\n            chatPack.uiManager.attachNewMessage(message);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MessagesListener = MessagesListener;\r\n","/**\r\n *\r\n * Reldens - TemplatesHandler\r\n *\r\n */\r\n\r\nclass TemplatesHandler\r\n{\r\n\r\n    static preloadTemplates(preloadScene, showTabs)\r\n    {\r\n        // @TODO - BETA - Replace by loader replacing snake name file name by camel case for the template key.\r\n        let chatTemplatePath = '/assets/features/chat/templates/';\r\n        // @TODO - BETA - Move the preload HTML as part of the engine driver.\r\n        preloadScene.load.html('chat', chatTemplatePath+'ui-chat.html');\r\n        preloadScene.load.html('chatMessage', chatTemplatePath+'message.html');\r\n        if(showTabs){\r\n            preloadScene.load.html('chatTabsContainer', chatTemplatePath+'tabs-container.html');\r\n            preloadScene.load.html('chatTabLabel', chatTemplatePath+'tab-label.html');\r\n            preloadScene.load.html('chatTabContent', chatTemplatePath+'tab-content.html');\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TemplatesHandler = TemplatesHandler;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    chat: {\r\n        ctk3: 'System',\r\n        ctk10: 'System',\r\n        npcDamage: '%damage damage on %targetLabel',\r\n        dodgedSkill: '%targetLabel dodged %skill',\r\n        modifiersApply: '%propertyValue %propertyLabel on %targetLabel',\r\n        joinedRoom: '%playerName has joined %roomName',\r\n        leftRoom: '%playerName has left',\r\n        playerNotFound: 'Player \"%playerName\" not found',\r\n        globalMessagesNotAllowed: 'Global messages not allowed',\r\n        globalMessagePermissionDenied: 'Global message permission denied',\r\n        guestInvalidChangePoint: 'The room is not available for guest users.',\r\n        player: {\r\n            damage: '%damage damage on %targetLabel',\r\n            dodgedSkill: '%targetLabel dodged %skill'\r\n        },\r\n        tabs: {\r\n            message: 'General',\r\n            joined: 'Joined',\r\n            system: 'System',\r\n            private: 'Private',\r\n            damage: 'Damage',\r\n            reward: 'Rewards',\r\n            skill: 'Skills',\r\n            teams: 'Teams',\r\n            global: 'Global',\r\n            error: 'Error'\r\n        }\r\n    }\r\n}\r\n","/**\r\n *\r\n * Reldens - TranslationsMapper\r\n *\r\n */\r\n\r\nconst { SnippetsConst } = require('../constants');\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass TranslationsMapper\r\n{\r\n\r\n    static forConfig(config, translations, dataValues = false, locale = SnippetsConst.DEFAULT_LOCALE)\r\n    {\r\n        if(!config.snippets){\r\n            config.snippets = {};\r\n        }\r\n        if(!config.snippets[locale]){\r\n            config.snippets[locale] = {};\r\n        }\r\n        let mappedSnippets = this.fromObject(translations);\r\n        config.snippets[locale] = sc.deepMergeProperties(mappedSnippets, config.snippets[locale]);\r\n        if(!dataValues){\r\n            return;\r\n        }\r\n        if(!config.snippetsDataValues){\r\n            config.snippetsDataValues = {};\r\n        }\r\n        let nameSpace = dataValues.NAMESPACE || SnippetsConst.DATA_VALUES_DEFAULT_NAMESPACE;\r\n        sc.deepMergeProperties(config.snippetsDataValues, {[nameSpace]: dataValues});\r\n    }\r\n\r\n    static fromObject(translations)\r\n    {\r\n        let keys = Object.keys(translations);\r\n        if(0 === keys.length){\r\n            return {};\r\n        }\r\n        let mappedTranslations = {};\r\n        for(let i of keys){\r\n            this.recursiveMap(i, translations[i], mappedTranslations);\r\n        }\r\n        return mappedTranslations;\r\n    }\r\n\r\n    static recursiveMap(key, translation, mappedTranslations)\r\n    {\r\n        if(!sc.isObject(translation)){\r\n            mappedTranslations[key] = translation;\r\n            return;\r\n        }\r\n        let nextKeys = Object.keys(translation);\r\n        if(0 === nextKeys.length){\r\n            return;\r\n        }\r\n        for(let i of nextKeys){\r\n            this.recursiveMap(key+SnippetsConst.CONCAT_CHARACTER+i, translation[i], mappedTranslations);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TranslationsMapper = TranslationsMapper;\r\n","/**\r\n *\r\n * Reldens - snippets/constants\r\n *\r\n */\r\n\r\nlet pref = 'sn.'\r\n\r\nmodule.exports.SnippetsConst = {\r\n    KEY: 'snippets',\r\n    DEFAULT_LOCALE: 'en_US',\r\n    CONCAT_CHARACTER: '.',\r\n    DATA_VALUES_DEFAULT_NAMESPACE: 'default',\r\n    ACTIONS: {\r\n        UPDATE: pref+'Up'\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - Plugin Interface\r\n *\r\n */\r\n\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass PluginInterface\r\n{\r\n\r\n    /**\r\n     * {\r\n     *     requiredProperties,\r\n     *     events,\r\n     *     dataServer,\r\n     *     config,\r\n     *     featuresManager,\r\n     *     themeManager\r\n     * }\r\n     */\r\n    async setup(props)\r\n    {\r\n        Logger.error('Setup plugin not implemented.', props);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PluginInterface = PluginInterface;\r\n","/**\r\n *\r\n * Reldens - Objects Client Plugin\r\n *\r\n */\r\n\r\nconst { AnimationEngine } = require('../../objects/client/animation-engine');\r\nconst { ObjectsMessageListener } = require('./objects-message-listener');\r\nconst { DropsMessageListener } = require('./drops-message-listener');\r\nconst Translations = require('./snippets/en_US');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst { UserInterface } = require('../../game/client/user-interface');\r\nconst { ObjectsConst } = require('../constants');\r\nconst { ActionsConst } = require('../../actions/constants');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ObjectsPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in InventoryPlugin.');\r\n        }\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in InventoryPlugin.');\r\n        }\r\n        this.bodyOnAddCallBack = false;\r\n        this.bodyOnRemoveCallBack = false;\r\n        this.bullets = {};\r\n        this.changeBodyVisibilityOnInactiveState = this.gameManager.config.getWithoutLogs(\r\n            'client/objects/animations/changeBodyVisibilityOnInactiveState',\r\n            true\r\n        );\r\n        this.missingSpritesTimeOut = this.gameManager.config.getWithoutLogs(\r\n            'client/general/animations/missingSpritesTimeOut',\r\n            200\r\n        );\r\n        this.missingSpritesMaxRetries = this.gameManager.config.getWithoutLogs(\r\n            'client/general/animations/missingSpritesMaxRetries',\r\n            5\r\n        );\r\n        this.missingSpriteRetry = 0;\r\n        this.listenEvents();\r\n        this.setTranslations();\r\n        this.setListener();\r\n    }\r\n\r\n    setListener()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        this.gameManager.config.client.message.listeners['traderObject'] = new ObjectsMessageListener();\r\n    }\r\n\r\n    setTranslations()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations, ObjectsConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events){\r\n            return false;\r\n        }\r\n        // @NOTE: the prepareObjectsUi has to be created before the scenes, so we can use the scenes events before\r\n        // the events were called.\r\n        this.events.on('reldens.startEngineScene', async (roomEvents) => {\r\n            await this.prepareObjectsUi(roomEvents.gameManager, roomEvents.roomData.objectsAnimationsData, roomEvents);\r\n        });\r\n        this.events.on('reldens.afterSceneDynamicCreate', async (sceneDynamic) => {\r\n            await this.createDynamicAnimations(sceneDynamic);\r\n        });\r\n        this.events.on('reldens.joinedRoom', (room, gameManager) => {\r\n            // @TODO - BETA - Refactor.\r\n            this.listenMessages(room, gameManager);\r\n            DropsMessageListener.listenMessages(room, gameManager);\r\n        });\r\n    }\r\n\r\n    listenMessages(room, gameManager)\r\n    {\r\n        room.onMessage('*', (message) => {\r\n            this.startObjectAnimation(message, gameManager);\r\n            this.objectBattleEndAnimation(message, gameManager);\r\n        });\r\n        if(!room.state || !room.state.bodies){\r\n            return false;\r\n        }\r\n        this.setAddBodyCallback(room, gameManager);\r\n        this.setRemoveBodyCallback(room);\r\n    }\r\n\r\n    setAddBodyCallback(room, gameManager)\r\n    {\r\n        // @TODO - BETA - Refactor and extract Colyseus into a driver.\r\n        this.bodyOnAddCallBack = room.state.bodies.onAdd((body, key) => {\r\n            this.setOnChangeBodyCallback(body, key, room, gameManager);\r\n            this.createBulletSprite(key, gameManager, body);\r\n        });\r\n    }\r\n\r\n    createBulletSprite(key, gameManager, body)\r\n    {\r\n        if(-1 === key.indexOf('bullet')){\r\n            return false;\r\n        }\r\n        let currentScene = gameManager.activeRoomEvents.getActiveScene();\r\n        let animKey = 'default_bullet';\r\n        let skillBullet = (body.key ? body.key + '_' : '') + 'bullet';\r\n        if(sc.hasOwn(gameManager.gameEngine.uiScene.directionalAnimations, skillBullet)){\r\n            skillBullet = skillBullet + '_' + body.dir;\r\n        }\r\n        if(sc.hasOwn(currentScene.anims.anims.entries, skillBullet)){\r\n            animKey = skillBullet;\r\n        }\r\n        let bulletSprite = currentScene?.physics?.add?.sprite(body.x, body.y, animKey);\r\n        if(!bulletSprite){\r\n            Logger.warning('Could not create bullet sprite.', currentScene);\r\n            return false;\r\n        }\r\n        bulletSprite.setDepth(11000);\r\n        this.bullets[key] = bulletSprite;\r\n        //Logger.debug({createdBulletSprite: skillBullet, shootFrom: body, bulletSprite});\r\n    }\r\n\r\n    setOnChangeBodyCallback(body, key, room, gameManager)\r\n    {\r\n        // @TODO - BETA - Refactor and extract Colyseus into a driver.\r\n        let bodyProperties = Object.keys(body);\r\n        for(let propertyKey of bodyProperties){\r\n            body.listen(propertyKey, async (newValue) => {\r\n                //Logger.debug('Update body property \"'+propertyKey+'\": '+newValue);\r\n                await this.events.emit('reldens.objectBodyChange', {body, key, changes: {[propertyKey]: newValue}});\r\n                let currentScene = gameManager.activeRoomEvents.getActiveScene();\r\n                this.updateBodyProperties(propertyKey, body, newValue, currentScene, key);\r\n                if(!currentScene){\r\n                    return;\r\n                }\r\n                let isBullet = -1 !== key.indexOf('bullet');\r\n                let currentBody = isBullet ? this.bullets[key] : currentScene?.objectsAnimations[key];\r\n                this.setVisibility(currentBody, GameConst.STATUS.ACTIVE === body.inState);\r\n                this.logObjectBodyUpdate(key, propertyKey, newValue, currentBody);\r\n                let canInterpolate = GameConst.STATUS.AVOID_INTERPOLATION !== body.inState;\r\n                if(currentScene?.clientInterpolation && canInterpolate){\r\n                    currentScene.interpolateObjectsPositions[key] = body;\r\n                    return;\r\n                }\r\n                if(isBullet){\r\n                    return this.updateBulletBodyPosition(key, body);\r\n                }\r\n                return this.updateObjectsAnimations(key, body, currentScene);\r\n            });\r\n        }\r\n    }\r\n\r\n    logObjectBodyUpdate(key, propertyKey, newValue, currentBody)\r\n    {\r\n        let logValues = {key, propertyKey, newValue};\r\n        if(('x' === propertyKey || 'y' === propertyKey) && currentBody && currentBody[propertyKey]){\r\n            logValues.currentValue = currentBody[propertyKey];\r\n        }\r\n        //Logger.debug(logValues);\r\n    }\r\n\r\n    setVisibility(currentBody, isActive)\r\n    {\r\n        if(!currentBody || !currentBody.sceneSprite){\r\n            return;\r\n        }\r\n        currentBody.sceneSprite.setVisible(isActive);\r\n    }\r\n\r\n    updateBodyProperties(bodyProp, body, value, currentScene, key)\r\n    {\r\n        // @TODO - BETA - Remove hardcoded properties check.\r\n        //Logger.debug({update: body, key, animationData: currentScene.objectsAnimationsData[key], bodyProp, value});\r\n        if(currentScene.objectsAnimationsData[key] && ('x' === bodyProp || 'y' === bodyProp)){\r\n            // @TODO - BETA - Check why bullets keep receiving updates even after the objects animation was removed.\r\n            currentScene.objectsAnimationsData[key][bodyProp] = value;\r\n        }\r\n        body[bodyProp] = value;\r\n    }\r\n\r\n    updateBulletBodyPosition(key, body)\r\n    {\r\n        if(!this.bullets[key]){\r\n            return;\r\n        }\r\n        this.bullets[key].x = body.x;\r\n        this.bullets[key].y = body.y;\r\n        this.events.emit('reldens.objectBodyChanged', {body, key});\r\n    }\r\n\r\n    updateObjectsAnimations(key, body, currentScene)\r\n    {\r\n        let objectAnimation = sc.get(currentScene.objectsAnimations, key);\r\n        if(!objectAnimation){\r\n            return false;\r\n        }\r\n        objectAnimation.updateObjectAndSpritePositions(body.x, body.y);\r\n        this.events.emit('reldens.objectBodyChanged', {body, key});\r\n        let objectNewDepth = objectAnimation.updateObjectDepth();\r\n        objectAnimation.inState = body.inState;\r\n        let animToPlay = this.fetchAvailableAnimationKey(currentScene, objectAnimation, body);\r\n        if('' !== animToPlay){\r\n            objectAnimation.sceneSprite.anims.play(animToPlay, true);\r\n        }\r\n        this.moveSpritesObjects(objectAnimation, body.x, body.y, objectNewDepth);\r\n        if(body.mov){\r\n            return false;\r\n        }\r\n        objectAnimation.sceneSprite.anims.stop();\r\n        objectAnimation.sceneSprite.mov = body.mov;\r\n        if(!objectAnimation.autoStart){\r\n            return false;\r\n        }\r\n        objectAnimation.sceneSprite.anims.play(\r\n            this.determineAutoStartAnimation(objectAnimation, animToPlay)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    determineAutoStartAnimation(objectAnimation, animToPlay)\r\n    {\r\n        if(true === objectAnimation.autoStart){\r\n            return objectAnimation.key;\r\n        }\r\n        if(objectAnimation.autoStart === ObjectsConst.DYNAMIC_ANIMATION){\r\n            return animToPlay;\r\n        }\r\n        return objectAnimation.autoStart;\r\n    }\r\n\r\n    fetchAvailableAnimationKey(currentScene, objectAnimation, body)\r\n    {\r\n        return sc.getByPriority(currentScene.anims.anims.entries, [\r\n            objectAnimation.key + '_' + body.dir,\r\n            objectAnimation.layerName + '_' + objectAnimation.id + '_' + body.dir,\r\n            objectAnimation.key\r\n        ]) || '';\r\n    }\r\n\r\n    setRemoveBodyCallback(room)\r\n    {\r\n        // @TODO - BETA - Refactor and extract Colyseus into a driver.\r\n        this.bodyOnRemoveCallBack = room.state.bodies.onRemove((body, key) => {\r\n            if(-1 === key.indexOf('bullet') || !sc.hasOwn(this.bullets, key)){\r\n                return false;\r\n            }\r\n            this.bullets[key].destroy();\r\n            delete this.bullets[key];\r\n        });\r\n    }\r\n\r\n    objectBattleEndAnimation(message, gameManager)\r\n    {\r\n        if(message.act !== ActionsConst.BATTLE_ENDED){\r\n            return false;\r\n        }\r\n        // @TODO - BETA - Replace all defaults by constants.\r\n        let deathKey = sc.get(gameManager.config.client.skills.animations, message.k + '_death', 'default_death');\r\n        let currentScene = gameManager.activeRoomEvents.getActiveScene();\r\n        try {\r\n            this.playDeathAnimation(deathKey, currentScene, message);\r\n        } catch (error) {\r\n            Logger.warning('Error on sprite \"'+deathKey+'\" not available.', error.message);\r\n        }\r\n        if(!sc.hasOwn(message, ActionsConst.DATA_OBJECT_KEY_TARGET)){\r\n            return false;\r\n        }\r\n        if(message[ActionsConst.DATA_OBJECT_KEY_TARGET] === currentScene.player.currentTarget?.id){\r\n            gameManager.gameEngine.clearTarget();\r\n        }\r\n        let hidePlayerSprite = sc.get(currentScene.player.players, message[ActionsConst.DATA_OBJECT_KEY_TARGET], false);\r\n        if(!hidePlayerSprite){\r\n            return false;\r\n        }\r\n        hidePlayerSprite.visible = false;\r\n        if(sc.hasOwn(hidePlayerSprite, 'nameSprite') && hidePlayerSprite.nameSprite){\r\n            hidePlayerSprite.nameSprite.visible = false;\r\n        }\r\n    }\r\n\r\n    playDeathAnimation(deathKey, currentScene, message)\r\n    {\r\n        if(!currentScene.getAnimationByKey(deathKey)){\r\n            if(this.missingSpritesMaxRetries === this.missingSpriteRetry){\r\n                Logger.debug('Sprite \"'+deathKey+'\" not available.', deathKey);\r\n                return false;\r\n            }\r\n            this.missingSpriteRetry++;\r\n            setTimeout(\r\n                () => {\r\n                    return this.playDeathAnimation(deathKey, currentScene, message);\r\n                },\r\n                this.missingSpritesTimeOut\r\n            );\r\n            return false;\r\n        }\r\n        let skeletonSprite = currentScene.physics.add.sprite(message.x, message.y, deathKey);\r\n        skeletonSprite.setDepth(10500);\r\n        skeletonSprite.anims.play(deathKey, true).on('animationcomplete', () => {\r\n            skeletonSprite.destroy();\r\n        });\r\n        return true;\r\n    }\r\n\r\n    startObjectAnimation(message, gameManager)\r\n    {\r\n        if(message.act !== ObjectsConst.OBJECT_ANIMATION && message.act !== ObjectsConst.TYPE_ANIMATION){\r\n            return false;\r\n        }\r\n        let currentScene = gameManager.activeRoomEvents.getActiveScene();\r\n        if(!sc.hasOwn(currentScene.objectsAnimations, message.key)){\r\n            return false;\r\n        }\r\n        currentScene.objectsAnimations[message.key].runAnimation();\r\n    }\r\n\r\n    moveSpritesObjects(currentObj, x, y, objectNewDepth)\r\n    {\r\n        if(!currentObj.moveSprites){\r\n            return;\r\n        }\r\n        let moveObjectsKeys = Object.keys(currentObj.moveSprites);\r\n        if(0 === moveObjectsKeys.length){\r\n            return;\r\n        }\r\n        for(let i of moveObjectsKeys){\r\n            let sprite = currentObj.moveSprites[i];\r\n            sprite.x = x;\r\n            sprite.y = y;\r\n            // by default moving sprites will be always below the player:\r\n            let depthByPlayer = sc.get(currentObj.animationData, 'depthByPlayer', '');\r\n            let spriteDepth = objectNewDepth + ((depthByPlayer === 'above') ? 1 : -0.1);\r\n            sprite.setDepth(spriteDepth);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The objects UI are the modal dialogs that will be open when you interact with the object.\r\n     * To interact with the object you need to be into the object interaction area and click on it.\r\n     *\r\n     * @param {GameManager} gameManager\r\n     * @param {object} objectsAnimationsData\r\n     * @param {RoomEvents} roomEvents\r\n     * @returns {Promise<void>}\r\n     */\r\n    async prepareObjectsUi(gameManager, objectsAnimationsData, roomEvents)\r\n    {\r\n        if(!objectsAnimationsData){\r\n            Logger.info('None objects animations data.');\r\n            return;\r\n        }\r\n        for(let i of Object.keys(objectsAnimationsData)){\r\n            let animProps = objectsAnimationsData[i];\r\n            if(!sc.hasOwn(animProps, 'ui')){\r\n                continue;\r\n            }\r\n            if(!animProps.id){\r\n                Logger.error(['Object ID not specified. Skipping registry:', animProps]);\r\n                continue;\r\n            }\r\n            let template = sc.get(animProps, 'template', '/assets/html/dialog-box.html');\r\n            roomEvents.objectsUi[animProps.id] = new UserInterface(gameManager, animProps, template, 'npcDialog');\r\n            await gameManager.events.emit('reldens.createdUserInterface', {\r\n                gameManager,\r\n                id: animProps.id,\r\n                userInterface: roomEvents.objectsUi[animProps.id],\r\n                ObjectsPlugin: this\r\n            });\r\n        }\r\n    }\r\n\r\n    async createDynamicAnimations(sceneDynamic)\r\n    {\r\n        if(!sceneDynamic.objectsAnimationsData){\r\n            Logger.info('None animations defined on this scene: '+sceneDynamic.key);\r\n            return;\r\n        }\r\n        await this.events.emit('reldens.createDynamicAnimationsBefore', this, sceneDynamic);\r\n        for(let i of Object.keys(sceneDynamic.objectsAnimationsData)){\r\n            let animProps = sceneDynamic.objectsAnimationsData[i];\r\n            await this.createAnimationFromAnimData(animProps, sceneDynamic);\r\n        }\r\n    }\r\n\r\n    async createAnimationFromAnimData(animProps, sceneDynamic)\r\n    {\r\n        if(!animProps.key){\r\n            Logger.error('Animation key not specified. Skipping registry.', animProps);\r\n            return false;\r\n        }\r\n        animProps.frameRate = sceneDynamic.configuredFrameRate;\r\n        let activeRoomEvents = sceneDynamic.gameManager.activeRoomEvents;\r\n        let existentBody = this.fetchExistentBody(sceneDynamic, activeRoomEvents, animProps);\r\n        this.updateAnimationPosition(existentBody, animProps);\r\n        await this.events.emit('reldens.createDynamicAnimation_'+animProps.key, this, animProps);\r\n        let classDefinition = sceneDynamic.gameManager.config.getWithoutLogs(\r\n            'client/customClasses/objects/'+animProps.key,\r\n            AnimationEngine\r\n        );\r\n        let animationEngine = new classDefinition(sceneDynamic.gameManager, animProps, sceneDynamic);\r\n        // @NOTE: this will populate the objectsAnimations property in the current scene, see scene-dynamic.\r\n        let sprite = animationEngine.createAnimation();\r\n        this.updateAnimationVisibility(existentBody, sprite);\r\n        return animationEngine;\r\n    }\r\n\r\n    updateAnimationPosition(existentBody, animProps)\r\n    {\r\n        // Logger.debug('Existent body:', {existentBody});\r\n        if(!existentBody){\r\n            // expected, not all animation objects may have a body:\r\n            return false;\r\n        }\r\n        // @NOTE: respawn objects would have the animProp position outdated since it comes from the roomData, which\r\n        // only contains the objects original initial position.\r\n        //Logger.debug('Existent body \"'+animProps.key+'\" position:', {x: existentBody.x, y: existentBody.y});\r\n        //Logger.debug('AnimProps \"'+animProps.key+'\" position:', {x: animProps.x, y: animProps.y});\r\n        if(animProps.x !== existentBody.x){\r\n            animProps.x = existentBody.x;\r\n        }\r\n        if(animProps.y !== existentBody.y){\r\n            animProps.y = existentBody.y;\r\n        }\r\n    }\r\n\r\n    updateAnimationVisibility(existentBody, sprite)\r\n    {\r\n        if(!existentBody){\r\n            // expected, not all animation objects may have a body:\r\n            return false;\r\n        }\r\n        if(GameConst.STATUS.DEATH !== existentBody.inState && GameConst.STATUS.DISABLED !== existentBody.inState){\r\n            return false;\r\n        }\r\n        sprite.visible = false;\r\n    }\r\n\r\n    fetchExistentBody(sceneDynamic, activeRoomEvents, animProps)\r\n    {\r\n        //Logger.debug('Scene key vs roomName: '+sceneDynamic.key+' / '+activeRoomEvents.roomName+'.');\r\n        if(sceneDynamic.key !== activeRoomEvents.roomName){\r\n            Logger.warning('Scene key and roomName miss match: '+sceneDynamic.key+' / '+activeRoomEvents.roomName+'.');\r\n            return false;\r\n        }\r\n        return activeRoomEvents.room.state.bodies.get(animProps?.key);\r\n    }\r\n}\r\n\r\nmodule.exports.ObjectsPlugin = ObjectsPlugin;\r\n","/**\r\n *\r\n * Reldens - AnimationEngine\r\n *\r\n * Objects flow:\r\n *\r\n * When you create an NpcObject this can/should be set as \"interactive\", after the validation\r\n * if(this.isInteractive){\r\n * This will activate the onpointerdown event so when you click on the object it will send the action\r\n * ObjectsConst.OBJECT_INTERACTION\r\n * Along with its own ID and type.\r\n * The server will pick up this information and validate it on the NpcObject.executeMessageActions method, and return\r\n * a UI message to open a UI dialog box, updated with the information coming in the message.\r\n * See RoomEvents.initUi method.\r\n *\r\n */\r\n\r\nconst { Logger, sc } = require('@reldens/utils');\r\nconst { ObjectsConst } = require('../constants');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { ActionsConst } = require('../../actions/constants');\r\n\r\nclass AnimationEngine\r\n{\r\n\r\n    constructor(gameManager, props, currentPreloader)\r\n    {\r\n        this.currentPreloader = currentPreloader;\r\n        this.currentAnimation = false;\r\n        this.gameManager = gameManager;\r\n        this.enabled = props.enabled || false;\r\n        this.key = props.key;\r\n        this.id = props.id;\r\n        this.asset_key = props.asset_key || props.key;\r\n        this.assetPath = props.assetPath || '/assets/custom/sprites/';\r\n        this.type = props.type || false;\r\n        this.ui = props.ui || false;\r\n        this.targetName = props.targetName;\r\n        this.frameRate = props.frameRate || false;\r\n        this.frameStart = props.frameStart || 0;\r\n        this.frameEnd = props.frameEnd || 0;\r\n        this.x = props.x || 0;\r\n        this.y = props.y || 0;\r\n        this.repeat = isNaN(props.repeat) ? -1 : props.repeat;\r\n        this.hideOnComplete = props.hideOnComplete || false;\r\n        if(!this.gameManager.createdAnimations){\r\n            this.gameManager.createdAnimations = {};\r\n        }\r\n        // @NOTE: you cannot combine destroyOnComplete with repeat = -1, because an animation with infinite\r\n        // repetitions will never trigger the complete event.\r\n        this.destroyOnComplete = props.destroyOnComplete || false;\r\n        this.autoStart = props.autoStart || false;\r\n        this.layerName = props.layerName || false;\r\n        this.positionFix = props.positionFix || false;\r\n        this.zeroPad = props.zeroPad || false;\r\n        this.prefix = props.prefix || false;\r\n        this.isInteractive = props.isInteractive || false;\r\n        this.highlightOnOver = Boolean(sc.get(\r\n            props,\r\n            'highlightOnOver',\r\n            this.gameManager.config.getWithoutLogs('client/ui/animations/highlightOnOver', true)\r\n        ));\r\n        this.highlightColor = sc.get(\r\n            props,\r\n            'highlightColor',\r\n            this.gameManager.config.getWithoutLogs('client/ui/animations/highlightColor', '0x00ff00')\r\n        );\r\n        this.restartTime = sc.get(props, 'restartTime', false);\r\n        this.calculateAnimPosition();\r\n        // @NOTE: having this here we will get the animations generated for each object instance, so normally you would\r\n        // get duplicated animations for any respawn \"multiple\" object, BUT, at the same time, you could have an\r\n        // animation for a specific instance ID, we need to keep this here and check if the animation already exists on\r\n        // the preloader list to avoid generate it again.\r\n        if(sc.hasOwn(props, 'animations')){\r\n            this.createObjectAnimations(props.animations);\r\n        }\r\n    }\r\n\r\n    updateObjectAndSpritePositions(x, y)\r\n    {\r\n        this.sceneSprite.x = x;\r\n        this.sceneSprite.y = y;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.calculateAnimPosition();\r\n    }\r\n\r\n    calculateAnimPosition()\r\n    {\r\n        this.animPos = {x: this.x, y: this.y};\r\n        if(!this.positionFix){\r\n            return;\r\n        }\r\n        if(sc.hasOwn(this.positionFix, 'x')){\r\n            this.animPos.x = this.x + this.positionFix.x;\r\n        }\r\n        if(sc.hasOwn(this.positionFix, 'y')){\r\n            this.animPos.y = this.y + this.positionFix.y;\r\n        }\r\n    }\r\n\r\n    updateObjectDepth()\r\n    {\r\n        let objectNewDepth = this.y + this.sceneSprite.height;\r\n        this.sceneSprite.setDepth(objectNewDepth);\r\n        return objectNewDepth;\r\n    }\r\n\r\n    createAnimation()\r\n    {\r\n        if(!this.enabled){\r\n            Logger.error('Animation disabled: '+this.key);\r\n            return;\r\n        }\r\n        let currentScene = this.gameManager.activeRoomEvents.getActiveScene();\r\n        if(!currentScene){\r\n            Logger.error('Active scene not found.');\r\n            return;\r\n        }\r\n        let animationData = {start: this.frameStart, end: this.frameEnd};\r\n        if(this.prefix !== false){\r\n            animationData.prefix = this.prefix;\r\n        }\r\n        if(this.zeroPad !== false){\r\n            animationData.zeroPad = this.zeroPad;\r\n        }\r\n        if(!this.currentPreloader.anims.textureManager.list[this.asset_key]){\r\n            Logger.warning('Asset not found in preloader.', this.asset_key, animationData);\r\n            this.currentPreloader.load.spritesheet(this.asset_key, this.assetPath+this.asset_key, animationData);\r\n            this.currentPreloader.load.once('complete', async () => {\r\n                this.createAnimation();\r\n            });\r\n            return;\r\n        }\r\n        let frameNumbers = this.currentPreloader.anims.generateFrameNumbers(this.asset_key, animationData);\r\n        let createData = {\r\n            key: this.key,\r\n            frames: frameNumbers,\r\n            frameRate: this.frameRate,\r\n            repeat: this.repeat,\r\n            hideOnComplete: this.hideOnComplete\r\n        };\r\n        this.currentAnimation = this.gameManager.createdAnimations[this.key];\r\n        if(!this.currentAnimation){\r\n            Logger.debug('Creating animation: '+this.key);\r\n            this.currentAnimation = this.currentPreloader.anims.create(createData);\r\n        }\r\n        this.currentPreloader.objectsAnimations[this.key] = this.currentAnimation;\r\n        this.gameManager.createdAnimations[this.key] = this.currentAnimation;\r\n        let spriteX = this.positionFix ? this.animPos.x : this.x;\r\n        let spriteY = this.positionFix ? this.animPos.y : this.y;\r\n        // this is where the animation is actually been created and stored:\r\n        this.sceneSprite = currentScene.physics.add.sprite(spriteX, spriteY, this.asset_key);\r\n        if(this.autoStart){\r\n            this.sceneSprite.anims.play(this.key, true);\r\n        }\r\n        this.enableInteraction(currentScene);\r\n        this.enableAutoRestart();\r\n        this.automaticDestroyOnComplete();\r\n        // @NOTE: sprites depth will be set according to their Y position, since the same was applied on the\r\n        // players sprites and updated as they move the depth is fixed automatically and the objects will get\r\n        // above or below the player.\r\n        this.sceneSprite.setDepth(this.y + this.sceneSprite.body.height);\r\n        currentScene.objectsAnimations[this.key] = this;\r\n        this.gameManager.events.emitSync('reldens.createAnimationAfter', {animationEngine: this});\r\n        return this.sceneSprite;\r\n    }\r\n\r\n    automaticDestroyOnComplete()\r\n    {\r\n        if(!this.destroyOnComplete){\r\n            return;\r\n        }\r\n        this.sceneSprite.on('animationcomplete', () => {\r\n            this.currentAnimation?.destroy();\r\n            this.sceneSprite.destroy();\r\n        }, this);\r\n    }\r\n\r\n    enableAutoRestart()\r\n    {\r\n        if(!this.restartTime){\r\n            return;\r\n        }\r\n        this.sceneSprite.on('animationcomplete', () => {\r\n            setTimeout(() => {\r\n                // if the animation was used to change the scene this won't be available on the user who run it.\r\n                if(!this.sceneSprite.anims){\r\n                    return;\r\n                }\r\n                this.sceneSprite.anims.restart();\r\n                this.sceneSprite.anims.pause();\r\n            }, this.restartTime);\r\n        },\r\n        this);\r\n    }\r\n\r\n    enableInteraction(currentScene)\r\n    {\r\n        if(!this.isInteractive){\r\n            return;\r\n        }\r\n        this.sceneSprite.setInteractive({useHandCursor: true}).on('pointerdown', (e) => {\r\n            // @NOTE: we avoid running the object interactions while any UI element is open, if we click on the UI the\r\n            // elements in the background scene should not be executed.\r\n            if(GameConst.SELECTORS.CANVAS !== e.downElement.nodeName){\r\n                return false;\r\n            }\r\n            // @TODO - BETA - CHECK - TempId is a temporal fix for multiple objects case.\r\n            let tempId = (this.key === this.asset_key) ? this.id : this.key;\r\n            let dataSend = {\r\n                act: ObjectsConst.OBJECT_INTERACTION,\r\n                id: tempId,\r\n                type: this.type\r\n            };\r\n            this.gameManager.activeRoomEvents.send(dataSend);\r\n            if(!this.targetName){\r\n                return false;\r\n            }\r\n            let previousTarget = Object.assign({}, currentScene.player.currentTarget);\r\n            let thisTarget = {id: tempId, type: ObjectsConst.TYPE_OBJECT};\r\n            currentScene.player.currentTarget = thisTarget;\r\n            this.gameManager.gameEngine.showTarget(this.targetName, thisTarget, previousTarget);\r\n            // Auto-attack on enemy click: if the clicked object is an enemy and a default action is configured,\r\n            // send the action immediately using the current target.\r\n            if(ObjectsConst.TYPE_ENEMY === this.type){\r\n                let defaultActionKey = this.gameManager.config.get('client/ui/controls/defaultActionKey') || 'physical_attack';\r\n                this.gameManager.activeRoomEvents.send({\r\n                    act: ActionsConst.ACTION,\r\n                    target: currentScene.player.currentTarget,\r\n                    type: defaultActionKey\r\n                });\r\n            }\r\n        });\r\n        if(this.highlightOnOver){\r\n            this.sceneSprite.on('pointerover', () => {\r\n                this.sceneSprite.setTint(this.highlightColor);\r\n            });\r\n            this.sceneSprite.on('pointerout', () => {\r\n                this.sceneSprite.clearTint();\r\n            });\r\n        }\r\n    }\r\n\r\n    runAnimation()\r\n    {\r\n        if(!this.sceneSprite){\r\n            Logger.error('Current animation not found: '+this.key);\r\n            return;\r\n        }\r\n        this.sceneSprite.anims.play(this.key, true);\r\n    }\r\n\r\n    getPosition()\r\n    {\r\n        return {x: this.x, y: this.y};\r\n    }\r\n\r\n    createObjectAnimations(animations)\r\n    {\r\n        if(!animations){\r\n            return;\r\n        }\r\n        let animationsKeys = Object.keys(animations);\r\n        if(0 === animationsKeys.length){\r\n            return;\r\n        }\r\n        for(let i of animationsKeys){\r\n            if(this.gameManager.createdAnimations[i]){\r\n                this.currentPreloader.objectsAnimations[i] = this.gameManager.createdAnimations[i];\r\n                continue;\r\n            }\r\n            if(sc.hasOwn(this.currentPreloader.objectsAnimations, i)){\r\n                // @TODO - BETA - Clean up, can objectsAnimations be removed?\r\n                continue;\r\n            }\r\n            let animData = animations[i];\r\n            let frameNumbers = this.currentPreloader.anims.generateFrameNumbers(\r\n                (animData['asset_key'] || this.asset_key), {\r\n                    start: animData['start'] || this.frameStart,\r\n                    end: animData['end'] || this.frameEnd\r\n                }\r\n            );\r\n            let createData = {\r\n                key: i,\r\n                frames: frameNumbers,\r\n                frameRate: animData['frameRate'] || this.frameRate,\r\n                repeat: animData['repeat'] || this.repeat,\r\n                hideOnComplete: animData['hideOnComplete'] || this.hideOnComplete,\r\n                asset_key: animData['asset_key'] || this.asset_key\r\n            };\r\n            this.currentPreloader.objectsAnimations[i] = this.currentPreloader.anims.create(createData);\r\n            this.gameManager.createdAnimations[i] = this.currentPreloader.objectsAnimations[i];\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.AnimationEngine = AnimationEngine;\r\n","/**\r\n *\r\n * Reldens - ObjectsMessageListener\r\n *\r\n */\r\n\r\nconst { TraderObjectUi } = require('./trader-object-ui');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ObjectsMessageListener\r\n{\r\n\r\n    async executeClientMessageActions(props)\r\n    {\r\n        let message = sc.get(props, 'message', false);\r\n        if(!message){\r\n            Logger.error('Missing message data on ObjectsMessageListener.', props);\r\n            return false;\r\n        }\r\n        let messageResult = sc.get(message, 'result', false);\r\n        if(!messageResult){\r\n            Logger.error('Missing result data on ObjectsMessageListener.', props);\r\n            return false;\r\n        }\r\n        let messageId = sc.get(message, 'id', false);\r\n        if(!messageId){\r\n            Logger.error('Missing Object ID on ObjectsMessageListener.', props);\r\n            return false;\r\n        }\r\n        let roomEvents = sc.get(props, 'roomEvents', false);\r\n        if(!roomEvents){\r\n            Logger.error('Missing RoomEvents on ObjectsMessageListener.', props);\r\n            return false;\r\n        }\r\n        // @TODO - BETA - Rename class to TraderObjectMessageHandler, split in several services.\r\n        let traderObjectUi = new TraderObjectUi({roomEvents, message});\r\n        if(!traderObjectUi.validate()){\r\n            return false;\r\n        }\r\n        traderObjectUi.updateContents();\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ObjectsMessageListener = ObjectsMessageListener;\r\n","/**\r\n *\r\n * Reldens - TraderObjectUi\r\n *\r\n */\r\n\r\nconst { ItemsConst } = require('@reldens/items-system');\r\nconst { ObjectsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass TraderObjectUi\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        // @TODO - BETA - Rename class to TraderObjectMessageHandler, split in several services.\r\n        this.roomEvents = sc.get(props, 'roomEvents', false);\r\n        this.message = sc.get(props, 'message', false);\r\n        this.gameManager = this.roomEvents?.gameManager;\r\n        this.gameDom = this.gameManager?.gameDom;\r\n        this.uiScene = this.gameManager?.gameEngine?.uiScene;\r\n        this.itemsManager = this.gameManager?.inventory?.manager;\r\n        this.objectUi = this.roomEvents?.objectsUi[this.message?.id];\r\n        this.setConfirmMessages();\r\n    }\r\n\r\n    validate()\r\n    {\r\n        if(!this.roomEvents){\r\n            Logger.error('Missing RoomEvents on TraderObjectUi.');\r\n            return false;\r\n        }\r\n        if(!this.message){\r\n            Logger.error('Missing message on TraderObjectUi.');\r\n            return false;\r\n        }\r\n        if(!this.gameManager){\r\n            Logger.error('Missing GameManager on TraderObjectUi.');\r\n            return false;\r\n        }\r\n        if(!this.uiScene){\r\n            Logger.error('Missing UiScene on TraderObjectUi.');\r\n            return false;\r\n        }\r\n        if(!this.itemsManager){\r\n            Logger.error('Missing ItemsManager on TraderObjectUi.');\r\n            return false;\r\n        }\r\n        if(!this.objectUi){\r\n            Logger.error('Missing objectUi on TraderObjectUi.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    setConfirmMessages()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        this.confirmMessages = {\r\n            buy: this.gameManager.services.translator.t('objects.trader.buyConfirmed'),\r\n            sell: this.gameManager.services.translator.t('objects.trader.sellConfirmed')\r\n        };\r\n    }\r\n\r\n    updateContents()\r\n    {\r\n        let container = this.gameManager.gameDom.getElement('#box-'+this.objectUi.id+' .box-content');\r\n        if(!container){\r\n            Logger.error('Missing container: \"#box-'+this.objectUi.id+' .box-content\".');\r\n            return false;\r\n        }\r\n        let tradeAction = this.message.result.action;\r\n        if(ObjectsConst.TRADE_ACTIONS_FUNCTION_NAME.CONFIRM === this.message.result.subAction){\r\n            container.innerHTML = this.confirmMessages[tradeAction];\r\n            return true;\r\n        }\r\n        let items = sc.get(this.message.result, 'items', false);\r\n        let inventoryKey = this.mapInventoryKeyFromAction(tradeAction);\r\n        let exchangeData = sc.get(this.message.result, 'exchangeData', false);\r\n        let exchangeItems = sc.get(exchangeData, inventoryKey, false);\r\n        let exchangeRequirementsA = this.message.result.exchangeRequirementsA || [];\r\n        let exchangeRewardsB = this.message.result.exchangeRewardsB || [];\r\n        this.updateItemsList(items, tradeAction, exchangeRequirementsA, exchangeRewardsB, container, exchangeItems);\r\n        this.updateExchangeData(exchangeItems, tradeAction, exchangeRequirementsA, exchangeRewardsB, items);\r\n    }\r\n\r\n    updateItemsList(items, tradeAction, exchangeRequirementsA, exchangeRewardsB, container, exchangeData)\r\n    {\r\n        if(!items){\r\n            return;\r\n        }\r\n        let tradeItems = '';\r\n        let tempItemsList = {};\r\n        for(let i of Object.keys(items)){\r\n            let messageItem = items[i];\r\n            let itemsProps = Object.assign({manager: this.itemsManager}, messageItem, {uid: i});\r\n            let itemClass = sc.get(\r\n                this.itemsManager.itemClasses,\r\n                itemsProps.key,\r\n                this.itemsManager.types.classByTypeId(itemsProps.type)\r\n            );\r\n            tempItemsList[i] = new itemClass(itemsProps);\r\n            tempItemsList[i].quantityDisplay = 1;\r\n            tempItemsList[i].quantityMaxDisplay = Math.max(tempItemsList[i].qty_limit, messageItem.qty);\r\n            tempItemsList[i].tradeAction = tradeAction;\r\n            tempItemsList[i].exchangeRequirements = this.fetchItemRequirements(itemsProps.key, exchangeRequirementsA);\r\n            tempItemsList[i].exchangeRewards = this.fetchItemRewards(itemsProps.key, exchangeRewardsB);\r\n            tradeItems += this.createTradeItemBox(tempItemsList[i], sc.get(exchangeData, tempItemsList[i].uid, false));\r\n        }\r\n        container.innerHTML = this.createTradeContainer(tradeAction, tradeItems);\r\n        this.activateItemsBoxActions(tempItemsList);\r\n        this.activateConfirmButtonAction(tradeAction);\r\n    }\r\n\r\n    activateConfirmButtonAction(tradeAction)\r\n    {\r\n        let confirmButton = this.gameManager.gameDom.getElement('.confirm-'+tradeAction);\r\n        let dataSend = {\r\n            act: ObjectsConst.OBJECT_INTERACTION,\r\n            id: this.message.id,\r\n            value: tradeAction,\r\n            sub: ObjectsConst.TRADE_ACTIONS.CONFIRM\r\n        };\r\n        confirmButton?.addEventListener('click', () => {\r\n            this.gameManager.activeRoomEvents.send(dataSend);\r\n        });\r\n    }\r\n\r\n    updateExchangeData(exchangeData, tradeAction, exchangeRequirementsA, exchangeRewardsB, items)\r\n    {\r\n        if(false === exchangeData){\r\n            return false;\r\n        }\r\n        let content = this.createConfirmItemsBox(exchangeData, items, tradeAction);\r\n        let itemsContainer = null;\r\n        if('buy' === tradeAction){\r\n            itemsContainer = this.gameDom.getElement('.trade-container-buy .trade-col.trade-col-2');\r\n        }\r\n        if('sell' === tradeAction){\r\n            itemsContainer = this.gameDom.getElement('.trade-container-sell .trade-col.trade-col-1');\r\n        }\r\n        if(null === itemsContainer){\r\n            Logger.error('Missing \"'+tradeAction+'\" items container.', {message: this.message});\r\n            return false;\r\n        }\r\n        itemsContainer.innerHTML = content;\r\n        this.assignRemoveActions(exchangeData, items, tradeAction);\r\n        return true;\r\n    }\r\n\r\n    createConfirmItemsBox(exchangeItems, items, tradeAction)\r\n    {\r\n        // @TODO - BETA - Since we are using one template \"inventoryTradeItem\", use only one \"createConfirmItemsBox\".\r\n        let exchangeItemsUids = Object.keys(exchangeItems);\r\n        if(0 === exchangeItemsUids.length){\r\n            // @NOTE: this will be the case if you don't have a required item.\r\n            if(!this.message.lastErrorMessage){\r\n                Logger.info('Undefined exchange items on confirmation trader-object-ui.', {message: this.message});\r\n            }\r\n            return '';\r\n        }\r\n        let content = '';\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeItem');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeItem\".');\r\n            return '';\r\n        }\r\n        for(let itemUid of exchangeItemsUids){\r\n            let qty = exchangeItems[itemUid];\r\n            let item = items[itemUid];\r\n            let isBuy = ItemsConst.TRADE_ACTIONS.BUY === tradeAction;\r\n            let isSell = ItemsConst.TRADE_ACTIONS.SELL === tradeAction;\r\n            content += this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n                key: item.key,\r\n                label: item.label,\r\n                description: item.description,\r\n                id: itemUid,\r\n                qty: item.qty,\r\n                hiddenClass: '',\r\n                tradeRequirements: isBuy ? this.createTradeRequirementsContent(item) : '',\r\n                tradeRewards: isSell ? this.createTradeRewardsContent(item) : '',\r\n                tradeAction: this.createTradeActionRemove(item),\r\n                tradeActionKey: tradeAction,\r\n                tradeQuantityContent: qty\r\n            });\r\n        }\r\n        return content;\r\n    }\r\n\r\n    assignRemoveActions(exchangeItems, items, tradeAction)\r\n    {\r\n        let exchangeItemsUids = Object.keys(exchangeItems);\r\n        if(0 === exchangeItemsUids.length){\r\n            // @NOTE: this will be the case if you don't have a required item.\r\n            if(!this.message.lastErrorMessage){\r\n                Logger.info('Undefined exchange items on remove trader-object-ui.', {message: this.message});\r\n            }\r\n            return false;\r\n        }\r\n        for(let itemUid of exchangeItemsUids){\r\n            let itemContainerSelector = '.trade-item-to-be-'+tradeAction+'.trade-item-'+itemUid;\r\n            let itemContainer = this.gameDom.getElement(itemContainerSelector);\r\n            if(!itemContainer){\r\n                Logger.error('Assign trade item \"'+itemUid+'\" container not found.', {message: this.message});\r\n                continue;\r\n            }\r\n            let itemActionButton = this.gameDom.getElement(\r\n                '.trade-item-'+tradeAction+'.trade-item-'+itemUid+' .trade-action-remove'\r\n            );\r\n            if(!itemActionButton){\r\n                Logger.error('Assign trade item \"'+itemUid+'\" remove button not found.', {message: this.message});\r\n                continue;\r\n            }\r\n            let item = items[itemUid];\r\n            itemActionButton.addEventListener('click', () => {\r\n                itemContainer.classList.remove('hidden');\r\n                let dataSend = {\r\n                    act: ObjectsConst.OBJECT_INTERACTION,\r\n                    id: this.message.id,\r\n                    value: tradeAction,\r\n                    itemId: itemUid,\r\n                    itemKey: item.key,\r\n                };\r\n                dataSend[ObjectsConst.TRADE_ACTIONS.SUB_ACTION] = ObjectsConst.TRADE_ACTIONS.REMOVE;\r\n                this.gameManager.activeRoomEvents.send(dataSend);\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    createTradeContainer(tradeActionKey, tradeItems)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeContainer');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeContainer\".');\r\n            return '';\r\n        }\r\n        // @TODO - BETA - Populate requirements totals.\r\n        let confirmRequirements = '';\r\n        let lastErrorData = this.message.result.lastErrorData;\r\n        if(lastErrorData?.itemUid){\r\n            lastErrorData.item = this.fetchItemLabelByUid(lastErrorData.itemUid);\r\n        }\r\n        if(lastErrorData?.requiredItemKey){\r\n            lastErrorData.requiredItem = this.fetchItemLabelByUid(lastErrorData.requiredItemKey);\r\n        }\r\n        let lastErrorMessage = this.gameManager.services.translator.t(\r\n            this.message.result.lastErrorMessage,\r\n            lastErrorData\r\n        );\r\n        let tradeItemsBuy = ItemsConst.TRADE_ACTIONS.BUY === tradeActionKey ? tradeItems : '';\r\n        let tradeItemsSell = ItemsConst.TRADE_ACTIONS.SELL === tradeActionKey ? tradeItems : '';\r\n        return this.gameManager.gameEngine.parseTemplate(\r\n            messageTemplate,\r\n            {\r\n                tradeActionKey,\r\n                confirmRequirements,\r\n                lastErrorMessage,\r\n                tradeActionLabel: ObjectsConst.TRADE_ACTIONS_FUNCTION_NAME.CONFIRM,\r\n                tradeItemsBuy,\r\n                tradeItemsSell\r\n            }\r\n        );\r\n    }\r\n\r\n    fetchItemLabelByUid(itemUid)\r\n    {\r\n        return this.gameManager?.inventory?.manager?.items[itemUid]?.label\r\n            || this.message?.result?.items[itemUid]?.label\r\n            || '';\r\n    }\r\n\r\n    fetchItemRequirements(itemKey, exchangeRequirements)\r\n    {\r\n        if(0 === exchangeRequirements.length){\r\n            return false;\r\n        }\r\n        let itemExchangeRequirements = {};\r\n        for(let exchangeRequirement of exchangeRequirements){\r\n            if(itemKey !== exchangeRequirement.itemKey){\r\n                continue;\r\n            }\r\n            itemExchangeRequirements[exchangeRequirement.itemKey] = exchangeRequirement;\r\n        }\r\n        return itemExchangeRequirements;\r\n    }\r\n\r\n    fetchItemRewards(itemKey, exchangeRewards)\r\n    {\r\n        if(0 === exchangeRewards.length){\r\n            return false;\r\n        }\r\n        let itemExchangeRewards = {};\r\n        for(let exchangeReward of exchangeRewards){\r\n            if(itemKey !== exchangeReward.itemKey){\r\n                continue;\r\n            }\r\n            itemExchangeRewards[exchangeReward.itemKey] = exchangeReward;\r\n        }\r\n        return itemExchangeRewards;\r\n    }\r\n\r\n    createTradeItemBox(item, exchangeDataItem)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeItem');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeItem\".');\r\n            return '';\r\n        }\r\n        let qtyTemplate = this.uiScene.cache.html.get('inventoryTradeItemQuantity');\r\n        if(!qtyTemplate){\r\n            Logger.error('Missing template \"inventoryTradeItemQuantity\".');\r\n            return '';\r\n        }\r\n        let isBuy = ItemsConst.TRADE_ACTIONS.BUY === item.tradeAction;\r\n        let isSell = ItemsConst.TRADE_ACTIONS.SELL === item.tradeAction;\r\n        let qty = exchangeDataItem || 0;\r\n        return this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            key: item.key,\r\n            label: item.label,\r\n            description: item.description,\r\n            id: item.getInventoryId(),\r\n            qty: item.qty,\r\n            hiddenClass: 0 < qty && item.qty === qty ? ' hidden' : '',\r\n            tradeRequirements: isBuy ? this.createTradeRequirementsContent(item) : '',\r\n            tradeRewards: isSell ? this.createTradeRewardsContent(item) : '',\r\n            tradeAction: this.createTradeActionContent(item),\r\n            tradeActionKey: 'to-be-'+item.tradeAction,\r\n            tradeQuantityContent: this.gameManager.gameEngine.parseTemplate(qtyTemplate, {\r\n                quantityDisplay: item.quantityDisplay || 1,\r\n                quantityMaxDisplay: 0 < item.quantityMaxDisplay ? 'max=\"' + item.quantityMaxDisplay + '\"' : ''\r\n            })\r\n        });\r\n    }\r\n\r\n    createTradeRequirementsContent(item)\r\n    {\r\n        if(!item.exchangeRequirements){\r\n            return '';\r\n        }\r\n        let requirementsKeys = Object.keys(item.exchangeRequirements);\r\n        if(0 === requirementsKeys.length){\r\n            return '';\r\n        }\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeRequirements');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeRequirements\".');\r\n            return '';\r\n        }\r\n        let content = '';\r\n        for(let i of requirementsKeys){\r\n            let requirement = item.exchangeRequirements[i];\r\n            content += this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n                itemKey: item.key,\r\n                requiredItemKey: requirement.requiredItemKey,\r\n                requiredQuantity: requirement.requiredQuantity\r\n            });\r\n        }\r\n        return content;\r\n    }\r\n\r\n    createTradeRewardsContent(item)\r\n    {\r\n        if(!item.exchangeRewards){\r\n            return '';\r\n        }\r\n        let rewardsKeys = Object.keys(item.exchangeRewards);\r\n        if(0 === rewardsKeys.length){\r\n            return '';\r\n        }\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeRewards');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeRewards\".');\r\n            return '';\r\n        }\r\n        let content = '';\r\n        for(let i of rewardsKeys){\r\n            let reward = item.exchangeRewards[i];\r\n            content += this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n                itemKey: item.key,\r\n                rewardItemKey: reward.rewardItemKey,\r\n                rewardQuantity: reward.rewardQuantity\r\n            });\r\n        }\r\n        return content;\r\n    }\r\n\r\n    createTradeActionContent(item, tradeAction)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeAction');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeAction\".');\r\n            return '';\r\n        }\r\n        return this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            key: item.key,\r\n            id: item.getInventoryId(),\r\n            tradeAction: tradeAction || sc.get(item, 'tradeAction', '')\r\n        });\r\n    }\r\n\r\n    createTradeActionRemove(item)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeActionRemove');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeActionRemove\".');\r\n            return '';\r\n        }\r\n        return this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            key: item.key,\r\n            id: item.uid,\r\n            tradeAction: 'remove'\r\n        });\r\n    }\r\n\r\n    activateItemsBoxActions(items)\r\n    {\r\n        for(let i of Object.keys(items)){\r\n            let item = items[i];\r\n            let itemContainerSelector = '.trade-item-to-be-'+item.tradeAction+'.trade-item-'+item.uid\r\n                +' .trade-action-'+item.tradeAction;\r\n            let itemButtonSelector = itemContainerSelector+' button';\r\n            let itemActionButton = this.gameDom.getElement(itemButtonSelector);\r\n            if(!itemActionButton){\r\n                Logger.error('Activate trade item \"'+item.uid+'\" action button not found.');\r\n                continue;\r\n            }\r\n            itemActionButton.addEventListener('click', () => {\r\n                let qtySelector = this.gameDom.getElement('.trade-item-'+item.getInventoryId()+' .item-qty input');\r\n                let qtySelected = qtySelector?.value || 1;\r\n                let dataSend = {\r\n                    act: ObjectsConst.OBJECT_INTERACTION,\r\n                    id: this.message.id,\r\n                    value: item.tradeAction,\r\n                    itemId: item.getInventoryId(),\r\n                    itemKey: item.key,\r\n                    qty: Number(qtySelected)\r\n                };\r\n                dataSend[ObjectsConst.TRADE_ACTIONS.SUB_ACTION] = ObjectsConst.TRADE_ACTIONS.ADD;\r\n                this.gameManager.activeRoomEvents.send(dataSend);\r\n            });\r\n        }\r\n    }\r\n\r\n    mapInventoryKeyFromAction(action)\r\n    {\r\n        let map = {buy: 'A', sell: 'B'};\r\n        return sc.get(map, action, false);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TraderObjectUi = TraderObjectUi;","/**\r\n *\r\n * Reldens - DropsMessageListener\r\n *\r\n */\r\n\r\nconst { ObjectsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass DropsMessageListener\r\n{\r\n\r\n    static listenMessages(room, gameManager)\r\n    {\r\n        room.onMessage('*', (message) => {\r\n            let drops = sc.get(message, ObjectsConst.DROPS.KEY, false);\r\n            if(drops){\r\n                this.loadObjects(drops, gameManager);\r\n            }\r\n            if(ObjectsConst.DROPS.REMOVE === message.act){\r\n                this.removeDropById(message.id, gameManager);\r\n            }\r\n        });\r\n    }\r\n\r\n    static loadObjects(drops, gameManager)\r\n    {\r\n        let currentScene = gameManager.getActiveScene();\r\n        let gameConfig = gameManager.config;\r\n        let objectPlugin = gameManager.getFeature('objects');\r\n        let loader = currentScene.load;\r\n        if(!this.validateParams({currentScene, gameConfig, objectPlugin, loader})){\r\n            return false;\r\n        }\r\n        for(let [dropId, drop] of Object.entries(drops)){\r\n            this.loadSpritesheet(drop, loader, gameConfig);\r\n            loader.once('complete', async (event) => {\r\n                await this.createDropAnimation(objectPlugin, drop, dropId, currentScene);\r\n            });\r\n        }\r\n        loader.start();\r\n        return true;\r\n    }\r\n\r\n    static async createDropAnimation(objectsPlugin, drop, dropId, currentScene)\r\n    {\r\n        let dropAnimationData = {\r\n            type: ObjectsConst.DROPS.PICK_UP_ACT,\r\n            enabled: true,\r\n            ui: true,\r\n            frameStart: drop[ObjectsConst.DROPS.PARAMS]['start'],\r\n            frameEnd: drop[ObjectsConst.DROPS.PARAMS]['end'],\r\n            repeat: drop[ObjectsConst.DROPS.PARAMS]['repeat'],\r\n            autoStart: true,\r\n            key: dropId,\r\n            id: dropId,\r\n            targetName: '',\r\n            layerName: dropId,\r\n            isInteractive: true,\r\n            asset_key: drop[ObjectsConst.DROPS.ASSET_KEY],\r\n            x: drop.x,\r\n            y: drop.y,\r\n            yoyo: drop[ObjectsConst.DROPS.PARAMS]['yoyo']\r\n        };\r\n        return await objectsPlugin.createAnimationFromAnimData(dropAnimationData, currentScene);\r\n    }\r\n\r\n    static loadSpritesheet(drop, loader, gameConfig)\r\n    {\r\n        loader.spritesheet(\r\n            drop[ObjectsConst.DROPS.ASSET_KEY],\r\n            this.getSpritesheetPath(drop),\r\n            this.getRewardFrameConfig(drop[ObjectsConst.DROPS.PARAMS], gameConfig)\r\n        );\r\n    }\r\n\r\n    static getRewardFrameConfig(dropParams, gameConfig)\r\n    {\r\n        return {\r\n            frameWidth: sc.get(\r\n                dropParams,\r\n                'frameWidth',\r\n                gameConfig.getWithoutLogs('client/map/dropsTile/width', gameConfig.get('client/map/tileData/width'))\r\n            ),\r\n            frameHeight: sc.get(\r\n                dropParams,\r\n                'frameHeight',\r\n                gameConfig.getWithoutLogs('client/map/dropsTile/height', gameConfig.get('client/map/tileData/height'))\r\n            )\r\n        };\r\n    }\r\n\r\n    static getSpritesheetPath(drop)\r\n    {\r\n        return ObjectsConst.DROPS.ASSETS_PATH + drop[ObjectsConst.DROPS.FILE];\r\n    }\r\n\r\n    static removeDropById(dropId, gameManager)\r\n    {\r\n        if(!dropId){\r\n            return false;\r\n        }\r\n        let currentScene = gameManager.activeRoomEvents.getActiveScene();\r\n        let dropAnimation = sc.get(currentScene.objectsAnimations, dropId, false);\r\n        if(!dropAnimation){\r\n            return false;\r\n        }\r\n        dropAnimation.sceneSprite.destroy();\r\n        delete currentScene.objectsAnimations[dropId];\r\n    }\r\n\r\n    static validateParams(props)\r\n    {\r\n        let isValid = true;\r\n        if(!sc.get(props, 'currentScene', false)){\r\n            Logger.error('Scene is undefined in Rewards Message Listener.');\r\n            isValid = false;\r\n        }\r\n        if(!sc.get(props, 'gameConfig', false)){\r\n            Logger.error('Game Config is undefined in Rewards Message Listener.');\r\n            isValid = false;\r\n        }\r\n        if(!sc.get(props, 'objectPlugin', false)){\r\n            Logger.error('Object Plugin is undefined in Rewards Message Listener.');\r\n            isValid = false;\r\n        }\r\n        if(!sc.get(props, 'loader', false)){\r\n            Logger.error('Loader is undefined in Rewards Message Listener.');\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n}\r\n\r\nmodule.exports.DropsMessageListener = DropsMessageListener;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    objects: {\r\n        npcInvalid: 'I do not understand.',\r\n        trader: {\r\n            content: 'Hi there! What would you like to do?',\r\n            options: {\r\n                buy: 'Buy',\r\n                sell: 'Sell'\r\n            },\r\n            buyConfirmed: 'Thanks for buying!',\r\n            sellConfirmed: 'Thanks for your products!'\r\n        }\r\n    },\r\n}\r\n","/**\r\n *\r\n * Reldens - UserInterface\r\n *\r\n */\r\n\r\nconst { GameConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass UserInterface\r\n{\r\n\r\n    constructor(gameManager, animProps, template = '/assets/html/dialog-box.html', uiPositionKey)\r\n    {\r\n        this.events = gameManager.events;\r\n        this.gameDom = gameManager.gameDom;\r\n        this.initialTitle = '';\r\n        this.initialContent = '';\r\n        this.id = animProps.id;\r\n        this.animProps = animProps;\r\n        this.template = template;\r\n        this.uiPositionKey = uiPositionKey || 'default';\r\n        this.openButton = null;\r\n        this.closeButton = null;\r\n        this.listenEvents();\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events){\r\n            return false;\r\n        }\r\n        this.events.on('reldens.beforePreload', (preloadScene) => {\r\n            this.preloadUiElement(preloadScene);\r\n        });\r\n        this.events.on('reldens.createPreload', (preloadScene, uiScene) => {\r\n            this.createUiElement(uiScene);\r\n        });\r\n    }\r\n\r\n    preloadUiElement(preloadScene)\r\n    {\r\n        if(!this.template){\r\n            return;\r\n        }\r\n        preloadScene.load.html(this.id, this.template);\r\n    }\r\n\r\n    createUiElement(uiScene, templateKey = '')\r\n    {\r\n        if('' === templateKey){\r\n            templateKey = this.id;\r\n        }\r\n        let objectElementId = 'box-'+this.id;\r\n        if(sc.get(uiScene.elementsUi, this.id)){\r\n            return this;\r\n        }\r\n        let dialogBox = this.createDialogBox(uiScene, templateKey);\r\n        this.createBoxContent(uiScene, templateKey, dialogBox);\r\n        let dialogContainer = this.gameDom.getElement('.ui-box.ui-dialog-box', dialogBox.node);\r\n        if(!dialogContainer){\r\n            Logger.critical('Missing dialog container for template key: \"'+templateKey+'\".', {\r\n                dialogBox,\r\n                dialogContainer,\r\n                objectElementId\r\n            });\r\n            return false;\r\n        }\r\n        dialogContainer.id = objectElementId;\r\n        dialogContainer.classList.add('type-'+(this.animProps?.type || 'dialog-box'));\r\n        this.activateOpenButton(dialogBox, dialogContainer, uiScene);\r\n        this.activateCloseButton(dialogBox, dialogContainer, uiScene);\r\n        uiScene.userInterfaces[this.id] = this;\r\n        uiScene.elementsUi[this.id] = dialogBox;\r\n        // @TODO - BETA - refactor to return the created dialog box.\r\n        return this;\r\n    }\r\n\r\n    createDialogBox(uiScene, templateKey)\r\n    {\r\n        let {newWidth, newHeight} = uiScene.gameManager.gameEngine.getCurrentScreenSize(uiScene.gameManager);\r\n        let {uiX, uiY} = uiScene.getUiPosition(this.uiPositionKey, newWidth, newHeight);\r\n        return uiScene.add.dom(uiX, uiY).createFromCache(templateKey);\r\n    }\r\n\r\n    createBoxContent(uiScene, templateKey, dialogBox)\r\n    {\r\n        let messageTemplate = uiScene.cache.html.get(templateKey);\r\n        dialogBox.innerHTML = uiScene.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            title: this.initialTitle,\r\n            content: this.initialContent\r\n        });\r\n    }\r\n\r\n    activateOpenButton(dialogBox, dialogContainer, uiScene)\r\n    {\r\n        // @TODO - BETA - Extract into a new service.\r\n        this.openButton = this.gameDom.getElement('.'+GameConst.UI_BOX + GameConst.UI_OPEN, dialogBox.node);\r\n        if(!this.openButton){\r\n            return false;\r\n        }\r\n        this.openButton.id = GameConst.UI_BOX + GameConst.UI_OPEN + '-' + this.id\r\n        this.openButton.addEventListener('click', () => {\r\n            // @TODO - BETA - Replace styles classes.\r\n            if(sc.get(this.animProps, 'defaultOpen', true)){\r\n                dialogContainer.style.display = 'block';\r\n                this.openButton.style.display = 'none';\r\n                if(false !== sc.get(this.animProps, 'depth', false)){\r\n                    dialogBox.setDepth(this.animProps.depth);\r\n                }\r\n            }\r\n            if(sc.isFunction(this.animProps['openCallBack'])){\r\n                this.animProps['openCallBack']();\r\n            }\r\n            this.events.emit(\r\n                'reldens.openUI',\r\n                {ui: this, openButton: this.openButton, dialogBox, dialogContainer, uiScene}\r\n            );\r\n        });\r\n        return this.openButton;\r\n    }\r\n\r\n    activateCloseButton(dialogBox, dialogContainer, uiScene)\r\n    {\r\n        // @TODO - BETA - Extract into a new service.\r\n        this.closeButton = this.gameDom.getElement('.'+GameConst.UI_BOX + GameConst.UI_CLOSE, dialogBox.node);\r\n        if(!this.closeButton){\r\n            return false;\r\n        }\r\n        this.closeButton.id = GameConst.UI_BOX + GameConst.UI_CLOSE + '-' + this.id;\r\n        this.closeButton.addEventListener('click', () => {\r\n            if(!sc.hasOwn(this.animProps, 'sendCloseMessage') || false === this.animProps['sendCloseMessage']){\r\n                uiScene.gameManager.activeRoomEvents.send({act: GameConst.CLOSE_UI_ACTION, id: this.id});\r\n            }\r\n            // @TODO - BETA - Replace styles classes.\r\n            if(sc.get(this.animProps, 'defaultClose', true)){\r\n                dialogContainer.style.display = 'none';\r\n                if(this.openButton){\r\n                    this.openButton.style.display = 'block';\r\n                }\r\n                if(false !== sc.get(this.animProps, 'depth', false)){\r\n                    dialogBox.setDepth(1);\r\n                }\r\n            }\r\n            if(sc.isFunction(this.animProps['closeCallback'])){\r\n                this.animProps['closeCallback']();\r\n            }\r\n            this.events.emit('reldens.closeUI', {\r\n                ui: this,\r\n                closeButton: this.closeButton,\r\n                openButton: this.openButton,\r\n                dialogBox,\r\n                dialogContainer,\r\n                uiScene\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.UserInterface = UserInterface;\r\n","/**\r\n *\r\n * Reldens - InventoryPlugin\r\n *\r\n */\r\n\r\nconst { InventoryUi } = require('./inventory-ui');\r\nconst { InventoryReceiver } = require('./inventory-receiver');\r\nconst { TradeTargetAction } = require('./exchange/trade-target-action');\r\nconst { TradeMessageListener } = require('./trade-message-listener');\r\nconst { UserInterface } = require('../../game/client/user-interface');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { TemplatesHandler } = require('./templates-handler');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst Translations = require('./snippets/en_US');\r\nconst { InventoryConst } = require('../constants');\r\nconst { ItemsEvents, ItemsConst } = require('@reldens/items-system');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass InventoryPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        // @TODO - BETA - Refactor plugin, extract all the methods into new classes.\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in InventoryPlugin.');\r\n        }\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in InventoryPlugin.');\r\n        }\r\n        this.tradeTargetAction = new TradeTargetAction();\r\n        this.setTradeUi();\r\n        this.listenEvents();\r\n        this.setListener();\r\n        this.setTranslations();\r\n    }\r\n\r\n    setTranslations()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations, InventoryConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    setTradeUi()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        // @TODO - BETA - Make the dialogBox template load on it's own so we can reuse the same object from cache.\r\n        // @NOTE: the tradeUi works as preload for the trade template which at the end is an dialog-box.\r\n        this.tradeUi = new UserInterface(this.gameManager, {id: 'trade', type: 'trade'});\r\n    }\r\n\r\n    setListener()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        this.gameManager.config.client.message.listeners['trade'] = new TradeMessageListener();\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events){\r\n            return false;\r\n        }\r\n        this.events.on('reldens.playersOnAdd', (player, key, previousScene, roomEvents) => {\r\n            this.onPlayerAdd(key, roomEvents, player);\r\n        });\r\n        this.events.on('reldens.preloadUiScene', (preloadScene) => {\r\n            TemplatesHandler.preloadTemplates(preloadScene);\r\n        });\r\n        this.events.on('reldens.createUiScene', (preloadScene) => {\r\n            return this.onPreloadUiScene(preloadScene);\r\n        });\r\n        this.events.on('reldens.gameEngineShowTarget', (gameEngine, target, previousTarget, targetName) => {\r\n            this.tradeTargetAction.showTargetExchangeAction(this.gameManager, target, previousTarget, targetName);\r\n        });\r\n    }\r\n\r\n    onPreloadUiScene(preloadScene)\r\n    {\r\n        this.uiManager = new InventoryUi(preloadScene);\r\n        this.uiManager.createUi();\r\n        let inventoryPanel = preloadScene.getUiElement('inventory').getChildByProperty(\r\n            'id',\r\n            InventoryConst.INVENTORY_ITEMS\r\n        );\r\n        if(!inventoryPanel){\r\n            Logger.error('Inventory UI not found.', inventoryPanel);\r\n            return false;\r\n        }\r\n        let equipmentPanel = preloadScene.getUiElement('equipment').getChildByProperty(\r\n            'id',\r\n            InventoryConst.EQUIPMENT_ITEMS\r\n        );\r\n        if(!equipmentPanel){\r\n            Logger.error('Equipment UI not found.', equipmentPanel);\r\n            return false;\r\n        }\r\n        let manager = preloadScene.gameManager.inventory.manager;\r\n        let inventoryGroups = sc.get(manager, 'groups', {});\r\n        if(Object.keys(inventoryGroups).length){\r\n            preloadScene.gameManager.gameDom.getElement('#' + InventoryConst.EQUIPMENT_ITEMS).innerHTML = '';\r\n            let orderedGroups = this.sortGroups(inventoryGroups);\r\n            for(let i of orderedGroups){\r\n                let output = this.createGroupBox(inventoryGroups[i], preloadScene.gameManager, preloadScene);\r\n                preloadScene.gameManager.gameDom.appendToElement('#' + InventoryConst.EQUIPMENT_ITEMS, output);\r\n            }\r\n        }\r\n        let itemsElements = sc.get(manager, 'items', {});\r\n        let itemsKeys = Object.keys(itemsElements);\r\n        if(0 < itemsKeys.length){\r\n            for(let i of itemsKeys){\r\n                let item = itemsElements[i];\r\n                this.displayItem(item, preloadScene, equipmentPanel, inventoryPanel, i);\r\n            }\r\n        }\r\n        // listen for inventory events:\r\n        this.listenInventoryEvents(preloadScene, inventoryPanel, equipmentPanel);\r\n    }\r\n\r\n    onPlayerAdd(key, roomEvents, player)\r\n    {\r\n        if(key !== roomEvents.room.sessionId){\r\n            return false;\r\n        }\r\n        if(!roomEvents.gameManager.inventory){\r\n            this.createInventoryInstance(player, roomEvents);\r\n        }\r\n        roomEvents.room.onMessage('*', (message) => {\r\n            roomEvents.gameManager.inventory.processMessage(message);\r\n        });\r\n    }\r\n\r\n    createInventoryInstance(player, roomEvents)\r\n    {\r\n        let receiverProps = {\r\n            owner: player,\r\n            ownerIdProperty: 'sessionId',\r\n            gameManager: roomEvents.gameManager\r\n        };\r\n        let inventoryClasses = roomEvents.gameManager.config.getWithoutLogs('client/customClasses/inventory/items', {});\r\n        if(inventoryClasses && 0 < Object.keys(inventoryClasses).length){\r\n            receiverProps.itemClasses = inventoryClasses;\r\n        }\r\n        let groupClasses = roomEvents.gameManager.config.getWithoutLogs('client/customClasses/inventory/groups', {});\r\n        if(groupClasses && Object.keys(groupClasses).length){\r\n            receiverProps.groupClasses = groupClasses;\r\n        }\r\n        roomEvents.gameManager.inventory = new InventoryReceiver(receiverProps);\r\n    }\r\n\r\n    listenInventoryEvents(uiScene, inventoryPanel, equipmentPanel)\r\n    {\r\n        let gameManager = uiScene.gameManager;\r\n        let masterKey = gameManager.inventory.manager.getOwnerEventKey();\r\n        gameManager.inventory.manager.listenEvent(\r\n            ItemsEvents.ADD_ITEM,\r\n            (inventory, item) => {\r\n                let output = this.createItemBox(item, 'inventoryItem', gameManager, uiScene);\r\n                gameManager.gameDom.appendToElement('#'+InventoryConst.INVENTORY_ITEMS, output);\r\n                this.setupButtonsActions(inventoryPanel, item.getInventoryId(), item, uiScene);\r\n            },\r\n            gameManager.inventory.manager.getOwnerUniqueEventKey('addItemPack'),\r\n            masterKey\r\n        );\r\n        gameManager.inventory.manager.listenEvent(\r\n            ItemsEvents.SET_ITEMS,\r\n            (props) => {\r\n                inventoryPanel.innerHTML = '';\r\n                for(let i of Object.keys(props.items)){\r\n                    let item = props.items[i];\r\n                    this.displayItem(item, uiScene, equipmentPanel, inventoryPanel, i);\r\n                }\r\n            },\r\n            gameManager.inventory.manager.getOwnerUniqueEventKey('setItemsPack'),\r\n            masterKey\r\n        );\r\n        gameManager.inventory.manager.listenEvent(\r\n            ItemsEvents.MODIFY_ITEM_QTY,\r\n            (item) => {\r\n                let qtyBox = uiScene.getUiElement('inventory').getChildByID('item-qty-'+item.getInventoryId());\r\n                qtyBox.innerHTML = item.qty;\r\n            },\r\n            gameManager.inventory.manager.getOwnerUniqueEventKey('modifyItemQtyPack'),\r\n            masterKey\r\n        );\r\n        gameManager.inventory.manager.listenEvent(\r\n            ItemsEvents.REMOVE_ITEM,\r\n            (inventory, itemKey) => {\r\n                uiScene.getUiElement('inventory').getChildByID('item-'+itemKey).remove();\r\n            },\r\n            gameManager.inventory.manager.getOwnerUniqueEventKey('removeItemPack'),\r\n            masterKey\r\n        );\r\n        gameManager.inventory.manager.listenEvent(\r\n            ItemsEvents.SET_GROUPS,\r\n            (props) => {\r\n                // @TODO - BETA - If groups are re-set or updated we will need to update the items as well.\r\n                let reEquipItems = false;\r\n                let equipmentItemsGroups = gameManager.gameDom.getElement('#'+InventoryConst.EQUIPMENT_ITEMS);\r\n                if(equipmentItemsGroups.innerHTML !== ''){\r\n                    reEquipItems = true;\r\n                }\r\n                equipmentItemsGroups.innerHTML = '';\r\n                let orderedGroups = this.sortGroups(props.groups);\r\n                for(let i of orderedGroups){\r\n                    let output = this.createGroupBox(props.groups[i], gameManager, uiScene);\r\n                    gameManager.gameDom.appendToElement('#'+InventoryConst.EQUIPMENT_ITEMS, output);\r\n                }\r\n                if(reEquipItems){\r\n                    this.resetEquippedItemsDisplay(gameManager, uiScene, equipmentPanel, inventoryPanel);\r\n                }\r\n            },\r\n            gameManager.inventory.manager.getOwnerUniqueEventKey('setGroupsPack'),\r\n            masterKey\r\n        );\r\n        gameManager.inventory.manager.listenEvent(\r\n            ItemsEvents.EQUIP_ITEM,\r\n            (item) => {\r\n                this.displayItem(item, uiScene, equipmentPanel, inventoryPanel, item.getInventoryId());\r\n            },\r\n            gameManager.inventory.manager.getOwnerUniqueEventKey('equipItemPack'),\r\n            masterKey\r\n        );\r\n        gameManager.inventory.manager.listenEvent(\r\n            ItemsEvents.UNEQUIP_ITEM,\r\n            (item) => {\r\n                this.displayItem(item, uiScene, equipmentPanel, inventoryPanel, item.getInventoryId());\r\n            },\r\n            gameManager.inventory.manager.getOwnerUniqueEventKey('unequipItemPack'),\r\n            masterKey\r\n        );\r\n    }\r\n\r\n    resetEquippedItemsDisplay(gameManager, uiScene, equipmentPanel, inventoryPanel)\r\n    {\r\n        let items = Object.keys(gameManager.inventory.manager.items);\r\n        if(0 === items.length){\r\n            return false;\r\n        }\r\n        for(let i of items){\r\n            let item = gameManager.inventory.manager.items[i];\r\n            if(!this.isEquipped(item)){\r\n                continue;\r\n            }\r\n            this.displayItem(item, uiScene, equipmentPanel, inventoryPanel, item.getInventoryId());\r\n        }\r\n    }\r\n\r\n    displayItem(item, uiScene, equipmentPanel, inventoryPanel, itemIdx)\r\n    {\r\n        let output = this.createItemBox(item, 'inventoryItem', uiScene.gameManager, uiScene);\r\n        let existentElement = uiScene.gameManager.gameDom.getElement('#item-'+item.getInventoryId());\r\n        if(existentElement){\r\n            existentElement.remove();\r\n        }\r\n        if(this.isEquipped(item)){\r\n            let group = this.getGroupById(item.group_id, uiScene.gameManager.inventory.manager.groups);\r\n            if(group && uiScene.gameManager.gameDom.getElement('#group-item-'+group.key+' .equipped-item')){\r\n                uiScene.gameManager.gameDom.updateContent('#group-item-'+group.key+' .equipped-item', output);\r\n            } else {\r\n                // @TODO - BETA - Make this append optional for now we will leave it to make the equipment action\r\n                //   visible.\r\n                // Logger.error('Group element not found. Group ID: '+item.group_id);\r\n                uiScene.gameManager.gameDom.appendToElement('#'+InventoryConst.EQUIPMENT_ITEMS, output);\r\n            }\r\n            this.setupButtonsActions(equipmentPanel, itemIdx, item, uiScene);\r\n        } else {\r\n            uiScene.gameManager.gameDom.appendToElement('#'+InventoryConst.INVENTORY_ITEMS, output);\r\n            this.setupButtonsActions(inventoryPanel, itemIdx, item, uiScene);\r\n        }\r\n    }\r\n\r\n    updateEquipmentStatus(item, gameManager)\r\n    {\r\n        let currentItemElement = gameManager.gameDom.getElement('#item-equip-'+item.idx);\r\n        let equipState = item.equipped ? 'equipped' : 'unequipped';\r\n        // @TODO - BETA - Replace fixed image type.\r\n        currentItemElement.src = '/assets/features/inventory/assets/'+ equipState+GameConst.FILES.EXTENSIONS.PNG;\r\n    }\r\n\r\n    createItemBox(item, templateKey, gameManager, uiScene)\r\n    {\r\n        let messageTemplate = uiScene.cache.html.get(templateKey);\r\n        return gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            key: item.key,\r\n            label: item.label,\r\n            description: item.description,\r\n            id: item.getInventoryId(),\r\n            qty: item.qty,\r\n            usable: this.isUsable(item) ? this.getUsableContent(item, gameManager, uiScene) : '',\r\n            equipment: this.isEquipment(item) ? this.getEquipContent(item, gameManager, uiScene) : ''\r\n        });\r\n    }\r\n\r\n    isEquipment(item)\r\n    {\r\n        return item.isType(ItemsConst.TYPES.EQUIPMENT) || item.isType(ItemsConst.TYPES.SINGLE_EQUIPMENT);\r\n    }\r\n\r\n    isEquipped(item)\r\n    {\r\n        return this.isEquipment(item) && true === item.equipped;\r\n    }\r\n\r\n    isUsable(item)\r\n    {\r\n        return item.isType(ItemsConst.TYPES.USABLE) || item.isType(ItemsConst.TYPES.SINGLE_USABLE);\r\n    }\r\n\r\n    sortGroups(groups)\r\n    {\r\n        return Object.keys(groups).sort((a,b) => {\r\n            return (groups[a].sort > groups[b].sort) ? 1 : -1;\r\n        });\r\n    }\r\n\r\n    createGroupBox(group, gameManager, uiScene)\r\n    {\r\n        let messageTemplate = uiScene.cache.html.get('inventoryGroup');\r\n        return gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            key: group.key,\r\n            label: group.label,\r\n            description: group.description,\r\n            fileName: group.files_name\r\n        });\r\n    }\r\n\r\n    setupButtonsActions(inventoryPanel, idx, item, preloadScene)\r\n    {\r\n        // @TODO - BETA - Improve and move all the styles into an external class, and make it configurable.\r\n        let domMan = preloadScene.gameManager.gameDom;\r\n        // show item data:\r\n        let itemImage = inventoryPanel.querySelector('#item-' + idx + ' .image-container img');\r\n        if(!itemImage){\r\n            Logger.error(['Missing image element.', '#item-' + idx]);\r\n            return false;\r\n        }\r\n        itemImage.addEventListener('click', () => {\r\n            let details = inventoryPanel.querySelector('#item-' + idx + ' .item-data-container');\r\n            let show = false;\r\n            if(details.style.display !== 'block'){\r\n                show = true;\r\n            }\r\n            inventoryPanel.querySelectorAll('.item-box .image-container img').forEach(function(element){\r\n                element.style.border = 'none';\r\n            });\r\n            inventoryPanel.querySelectorAll('.item-data-container').forEach(function(element){\r\n                element.style.display = 'none';\r\n            });\r\n            if(show){\r\n                itemImage.style.border = '1px solid #fff';\r\n                details.style.display = 'block';\r\n            }\r\n        });\r\n        let buttonElement = inventoryPanel.querySelector('#item-trash-' + idx + ' img');\r\n        if(!buttonElement){\r\n            Logger.error(['Missing button.', buttonElement]);\r\n            return false;\r\n        }\r\n        buttonElement.addEventListener('click', () => {\r\n            inventoryPanel.querySelector('#trash-confirm-' + idx).style.display = 'block';\r\n        });\r\n        inventoryPanel.querySelector('#trash-cancel-' + idx).addEventListener('click', () => {\r\n            inventoryPanel.querySelector('#trash-confirm-' + idx).style.display = 'none';\r\n        });\r\n        inventoryPanel.querySelector('#trash-confirmed-' + idx).addEventListener('click', () => {\r\n            let optionSend = {\r\n                idx: idx,\r\n                act: InventoryConst.ACTIONS.REMOVE\r\n            };\r\n            preloadScene.gameManager.activeRoomEvents.send(optionSend);\r\n        });\r\n        if(this.isUsable(item)){\r\n            let useBtn = domMan.getElement('#item-use-'+idx);\r\n            useBtn.addEventListener(\r\n                'click',\r\n                this.clickedBox.bind(this, idx, InventoryConst.ACTIONS.USE, preloadScene)\r\n            );\r\n        }\r\n        if(this.isEquipment(item)){\r\n            let equipBtn = domMan.getElement('#item-equip-'+idx);\r\n            equipBtn.addEventListener(\r\n                'click',\r\n                this.clickedBox.bind(this, idx, InventoryConst.ACTIONS.EQUIP, preloadScene)\r\n            );\r\n        }\r\n    }\r\n\r\n    clickedBox(itemId, action, preloadScene)\r\n    {\r\n        preloadScene.gameManager.activeRoomEvents.send({act: action, idx: itemId});\r\n    }\r\n\r\n    getUsableContent(item, gameManager, uiScene)\r\n    {\r\n        let messageTemplate = uiScene.cache.html.get('inventoryItemUse');\r\n        return gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            id: item.getInventoryId()\r\n        });\r\n    }\r\n\r\n    getEquipContent(item, gameManager, uiScene)\r\n    {\r\n        let messageTemplate = uiScene.cache.html.get('inventoryItemEquip');\r\n        return gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            id: item.getInventoryId(),\r\n            equipStatus: item.equipped ? 'equipped' : 'unequipped'\r\n        });\r\n    }\r\n\r\n    getGroupById(groupId, groupsList)\r\n    {\r\n        let groups = Object.keys(groupsList);\r\n        if(0 === groups.length){\r\n            return false;\r\n        }\r\n        for(let i of groups){\r\n            if(groupsList[i].id === groupId){\r\n                return groupsList[i];\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.InventoryPlugin = InventoryPlugin;\r\n","/**\r\n *\r\n * Reldens - InventoryUi\r\n *\r\n */\r\n\r\nconst { UiFactory } = require('../../game/client/ui-factory');\r\nconst { InventoryConst } = require('../constants');\r\n\r\nclass InventoryUi extends UiFactory\r\n{\r\n\r\n    createUi()\r\n    {\r\n        // @TODO - BETA - Replace by UserInterface.\r\n        this.create('inventory', 5, true, true, null, () => {\r\n            this.inventoryVisibility('inventory');\r\n        });\r\n        this.create('equipment', 4, true, true, null, () => {\r\n            this.inventoryVisibility('inventory');\r\n        });\r\n    }\r\n\r\n    inventoryVisibility(constantCodeName)\r\n    {\r\n        let containerId = '#'+InventoryConst[constantCodeName+'_ITEMS'];\r\n        let itemImages = this.gameManager.gameDom.getElements(containerId+' .item-box .image-container img');\r\n        for(let itemImage of itemImages){\r\n            itemImage.style.border = 'none';\r\n        }\r\n        let itemContainers = this.gameManager.gameDom.getElements(containerId+' .item-data-container')\r\n        for(let itemContainer of itemContainers){\r\n            itemContainer.style.border = 'none';\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.InventoryUi = InventoryUi;\r\n","/**\r\n *\r\n * Reldens - UiFactory\r\n *\r\n */\r\n\r\nconst { GameConst } = require('../constants');\r\n\r\nclass UiFactory\r\n{\r\n\r\n    constructor(uiScene)\r\n    {\r\n        this.uiScene = uiScene;\r\n        this.gameManager = this.uiScene.gameManager;\r\n    }\r\n\r\n    create(uiCodeName, depth, defaultOpen, defaultClose, openCallback, closeCallback)\r\n    {\r\n        // @TODO - BETA - Replace by UserInterface.\r\n        let {uiX, uiY} = this.uiScene.getUiConfig(uiCodeName);\r\n        let dialogBox = this.uiScene.add.dom(uiX, uiY).createFromCache(uiCodeName);\r\n        let openButton = dialogBox.getChildByProperty('id', uiCodeName+GameConst.UI_OPEN);\r\n        let closeButton = dialogBox.getChildByProperty('id', uiCodeName+GameConst.UI_CLOSE);\r\n        openButton?.addEventListener('click', () => {\r\n            // @TODO - BETA - Replace styles classes.\r\n            let dialogContainer = dialogBox.getChildByProperty('id', uiCodeName+'-ui');\r\n            if(defaultOpen){\r\n                if(dialogContainer){\r\n                    dialogContainer.style.display = 'block';\r\n                }\r\n                openButton.style.display = 'none';\r\n                dialogBox.setDepth(depth);\r\n            }\r\n            if(openCallback && 'function' === typeof (openCallback)){\r\n                openCallback();\r\n            }\r\n            this.gameManager.events.emit(\r\n                'reldens.openUI',\r\n                {ui: this, openButton, dialogBox, dialogContainer, uiScene: this.uiScene}\r\n            );\r\n        });\r\n        closeButton?.addEventListener('click', () => {\r\n            let dialogContainer = dialogBox.getChildByProperty('id', uiCodeName+'-ui');\r\n            if(defaultClose){\r\n                if(dialogContainer){\r\n                    dialogContainer.style.display = 'none';\r\n                }\r\n                dialogBox.setDepth(1);\r\n                if(openButton){\r\n                    openButton.style.display = 'block';\r\n                }\r\n            }\r\n            if(closeCallback && 'function' === typeof (closeCallback)){\r\n                closeCallback();\r\n            }\r\n            this.gameManager.events.emit(\r\n                'reldens.closeUI',\r\n                {ui: this, closeButton, openButton, dialogBox, dialogContainer, uiScene: this.uiScene}\r\n            );\r\n        });\r\n        this.uiScene.elementsUi[uiCodeName] = dialogBox;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.UiFactory = UiFactory;\r\n","/**\r\n *\r\n * Reldens - InventoryConst\r\n *\r\n */\r\n\r\nlet prefix = 'ivp'\r\n\r\nmodule.exports.InventoryConst = {\r\n    INVENTORY_ITEMS: 'inventory-items',\r\n    INVENTORY_OPEN: 'inventory-open',\r\n    INVENTORY_CLOSE: 'inventory-close',\r\n    EQUIPMENT_ITEMS: 'equipment-items',\r\n    EQUIPMENT_CLOSE: 'equipment-close',\r\n    EQUIPMENT_OPEN: 'equipment-open',\r\n    ANIMATION_KEY_PREFIX: 'aK_',\r\n    GROUP_BUCKET: '/assets/custom/groups',\r\n    ACTIONS: {\r\n        PREFIX: prefix,\r\n        REMOVE: prefix+'Rm',\r\n        USE: prefix+'Use',\r\n        EQUIP: prefix+'Eqi',\r\n        TRADE_START: prefix+'tStart',\r\n        TRADE_ACCEPTED: prefix+'tAccepted',\r\n        TRADE_SHOW: prefix+'tShow',\r\n        TRADE_ACTION: prefix+'tAction'\r\n    },\r\n    MESSAGE: {\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'items'\r\n        }\r\n    },\r\n};\r\n","/**\r\n *\r\n * Reldens - InventoryReceiver\r\n *\r\n */\r\n\r\nconst { InventoryConst } = require('../constants');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { Receiver } = require('@reldens/items-system');\r\nconst { ErrorManager, Logger, sc } = require('@reldens/utils');\r\n\r\nclass InventoryReceiver extends Receiver\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        if(!sc.hasOwn(props, 'gameManager')){\r\n            ErrorManager.error('InventoryReceiver gameManager not specified.');\r\n        }\r\n        super(props);\r\n        this.gameManager = props.gameManager;\r\n        this.itemSprites = {};\r\n        this.itemsAnimations = {};\r\n    }\r\n\r\n    onExecuting(message)\r\n    {\r\n        // @TODO - BETA - Improve, split in several classes, methods and functionalities.\r\n        let item = message.item;\r\n        if(!sc.hasOwn(item, 'animationData')){\r\n            Logger.warning('Item does not contain animation data.', message);\r\n            return false;\r\n        }\r\n        let animKey = InventoryConst.ANIMATION_KEY_PREFIX+item.key;\r\n        let currentScene = this.gameManager.getActiveScene();\r\n        let existentAnimation = this.itemSprites[animKey]\r\n            && this.itemSprites[animKey].anims\r\n            && currentScene.anims.get(animKey);\r\n        if(existentAnimation){\r\n            Logger.debug('Animation already exists, playing: '+animKey);\r\n            this.playSpriteAnimation(animKey, item);\r\n            return false;\r\n        }\r\n        // @TODO - BETA - Remove hardcoded file extension.\r\n        currentScene.load.spritesheet(animKey, '/assets/custom/sprites/'+item.key+GameConst.FILES.EXTENSIONS.PNG, {\r\n            frameWidth: item.animationData.frameWidth || 64,\r\n            frameHeight: item.animationData.frameHeight || 64\r\n        }).on('loaderror', (event) => {\r\n            Logger.error('Sprite load error: '+animKey, event);\r\n        });\r\n        currentScene.load.on('complete', () => {\r\n            Logger.debug('Scene load complete, playing: '+animKey);\r\n            this.createItemSprites(animKey, item, message, currentScene);\r\n        });\r\n        currentScene.load.start();\r\n    }\r\n\r\n    createItemSprites(animKey, item, message, currentScene)\r\n    {\r\n        let targetId = this.extractTargetId(item, message, currentScene);\r\n        if(!targetId){\r\n            Logger.error('Target ID not found.');\r\n            return false;\r\n        }\r\n        let playerSprite = sc.get(currentScene.player.players, targetId, false);\r\n        if(!playerSprite){\r\n            Logger.error('Player sprite not found by target ID.');\r\n            return false;\r\n        }\r\n        // @TODO - BETA - Make all the defaults configurable.\r\n        let animationFromScene = currentScene.anims.get(animKey);\r\n        if(!animationFromScene){\r\n            Logger.debug('Creating new animation on scene: '+animKey);\r\n            animationFromScene = currentScene.anims.create({\r\n                key: animKey,\r\n                frames: currentScene.anims.generateFrameNumbers(animKey, {\r\n                    start: item.animationData.start || 0,\r\n                    end: item.animationData.end || 1\r\n                }),\r\n                frameRate: sc.get(item.animationData, 'frameRate', currentScene.configuredFrameRate),\r\n                repeat: item.animationData.repeat || 3,\r\n                hideOnComplete: sc.get(item.animationData, 'hide', true),\r\n                showOnStart: sc.get(item.animationData, 'showOnStart', true),\r\n            });\r\n        }\r\n        this.itemsAnimations[animKey] = animationFromScene;\r\n        let x = sc.get(item.animationData, 'fixedX', (item.animationData.usePlayerPosition ? playerSprite.x : 0));\r\n        let y = sc.get(item.animationData, 'fixedY', (item.animationData.usePlayerPosition ? playerSprite.y : 0));\r\n        this.itemSprites[animKey] = currentScene.physics.add.sprite(x, y, animKey);\r\n        this.itemSprites[animKey] = this.itemSprites[animKey].setDepth(90000);\r\n        this.itemSprites[animKey].depthByPlayer = 'above';\r\n        if(item.animationData.followPlayer){\r\n            playerSprite.moveSprites[animKey] = this.itemSprites[animKey];\r\n        }\r\n        // @TODO - BETA - Make auto-destroy configurable.\r\n        Logger.debug('Playing sprite: '+animKey);\r\n        this.playSpriteAnimation(animKey, item).on('animationcomplete', () => {\r\n            if(item.animationData.destroyOnComplete){\r\n                this.destroyAnimation(item, animKey, playerSprite);\r\n            }\r\n        });\r\n    }\r\n\r\n    playSpriteAnimation(animKey, item)\r\n    {\r\n        // @TODO - BETA - Make closeInventoryOnUse and ignoreIfPlaying default values configurable.\r\n        let closeInventoryOnUse = sc.get(item.animationData, 'closeInventoryOnUse', false);\r\n        if(closeInventoryOnUse){\r\n            this.gameManager.gameDom.getElement('#inventory-close')?.click();\r\n        }\r\n        let spriteAnims = this.itemSprites[animKey].anims;\r\n        if(!spriteAnims){\r\n            Logger.error('Sprite animation not found: '+animKey);\r\n            return false;\r\n        }\r\n        spriteAnims.visible = true;\r\n        return spriteAnims.play(animKey, sc.get(item.animationData, 'ignoreIfPlaying', true));\r\n    }\r\n\r\n    destroyAnimation(item, animKey, playerSprite)\r\n    {\r\n        this.itemSprites[animKey].destroy();\r\n        delete this.itemSprites[animKey];\r\n        delete this.itemsAnimations[animKey];\r\n        if(item.animationData.followPlayer){\r\n            delete playerSprite.moveSprites[animKey];\r\n        }\r\n        Logger.debug('Animation and sprite destroyed: '+animKey);\r\n    }\r\n\r\n    extractTargetId(item, message, currentScene)\r\n    {\r\n        if(item.animationData.startsOnTarget && message.target?.playerId){\r\n            return message.target.playerId;\r\n        }\r\n        return currentScene.player?.playerId || false;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.InventoryReceiver = InventoryReceiver;\r\n","/**\r\n *\r\n * Reldens - TradeTargetAction\r\n *\r\n */\r\n\r\nconst { InventoryConst } = require('../../constants');\r\nconst { GameConst } = require('../../../game/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass TradeTargetAction\r\n{\r\n\r\n    showTargetExchangeAction(gameManager, target, previousTarget, targetName)\r\n    {\r\n        if(GameConst.TYPE_PLAYER !== target.type || gameManager.getCurrentPlayer().playerId === target.id){\r\n            return false;\r\n        }\r\n        let uiScene = gameManager.gameEngine.uiScene;\r\n        let uiTarget = sc.get(uiScene, 'uiTarget', false);\r\n        if(false === uiTarget){\r\n            return false;\r\n        }\r\n        let inventoryTradeStartTemplate = uiScene.cache.html.get('inventoryTradeStart');\r\n        if(!inventoryTradeStartTemplate){\r\n            Logger.critical('Template \"inventoryTradeStart\" not found.');\r\n            return false;\r\n        }\r\n        gameManager.gameDom.appendToElement(\r\n            '#target-container',\r\n            gameManager.gameEngine.parseTemplate(\r\n                inventoryTradeStartTemplate,\r\n                {\r\n                    playerName: targetName,\r\n                    playerId: target.id\r\n                }\r\n            )\r\n        );\r\n        let tradeStartButton = gameManager.gameDom.getElement('.start-trade-'+target.id+' button');\r\n        if(!tradeStartButton){\r\n            Logger.critical('Trade start button not found for selector: \"'+'.start-trade-'+target.id+' button'+'\"');\r\n            return false;\r\n        }\r\n        tradeStartButton.addEventListener('click', () => {\r\n            let sendData = {act: InventoryConst.ACTIONS.TRADE_START, id: target.id};\r\n            gameManager.activeRoomEvents.send(sendData);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TradeTargetAction = TradeTargetAction;","/**\r\n *\r\n * Reldens - TradeMessageListener\r\n *\r\n */\r\n\r\nconst { TradeMessageHandler } = require('./trade-message-handler');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass TradeMessageListener\r\n{\r\n\r\n    async executeClientMessageActions(props)\r\n    {\r\n        let message = sc.get(props, 'message', false);\r\n        if(!message){\r\n            Logger.error('Missing message data on TradeMessageListener.', props);\r\n            return false;\r\n        }\r\n        let roomEvents = sc.get(props, 'roomEvents', false);\r\n        if(!roomEvents){\r\n            Logger.error('Missing RoomEvents on TradeMessageListener.', props);\r\n            return false;\r\n        }\r\n        let tradeMessageHandler = new TradeMessageHandler({roomEvents, message});\r\n        tradeMessageHandler.updateContents();\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TradeMessageListener = TradeMessageListener;\r\n","/**\r\n *\r\n * Reldens - TradeMessageHandler\r\n *\r\n */\r\n\r\nconst { ErrorManager, Logger, sc } = require('@reldens/utils');\r\nconst { InventoryConst } = require('../constants');\r\nconst { ObjectsConst } = require('../../objects/constants');\r\nconst { UserInterface } = require('../../game/client/user-interface');\r\n\r\nclass TradeMessageHandler\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.roomEvents = sc.get(props, 'roomEvents', false);\r\n        this.message = sc.get(props, 'message', false);\r\n        this.gameManager = this.roomEvents?.gameManager;\r\n        this.gameDom = this.gameManager?.gameDom;\r\n        this.uiScene = this.gameManager?.gameEngine?.uiScene;\r\n        this.itemsManager = this.gameManager?.inventory?.manager;\r\n        this.validate();\r\n    }\r\n\r\n    validate()\r\n    {\r\n        if(!this.roomEvents){\r\n            ErrorManager.error('Missing RoomEvents.');\r\n        }\r\n        if(!this.message){\r\n            ErrorManager.error('Missing message.');\r\n        }\r\n        if(!this.gameManager){\r\n            ErrorManager.error('Missing GameManager.');\r\n        }\r\n        if(!this.uiScene){\r\n            ErrorManager.error('Missing UiScene.');\r\n        }\r\n        if(!this.itemsManager){\r\n            ErrorManager.error('Missing ItemsManager.');\r\n        }\r\n    }\r\n\r\n    updateContents()\r\n    {\r\n        if(InventoryConst.ACTIONS.TRADE_START === this.message.act){\r\n            return this.showTradeRequest();\r\n        }\r\n        if(InventoryConst.ACTIONS.TRADE_SHOW === this.message.act){\r\n            return this.showTradeBox();\r\n        }\r\n    }\r\n\r\n    showTradeRequest()\r\n    {\r\n        // @TODO - BETA - Make all these values configurable.\r\n        let tradeUiKey = 'trade'+this.message.id;\r\n        this.createTradeUi(tradeUiKey);\r\n        this.roomEvents.initUi({\r\n            id: tradeUiKey,\r\n            title: this.gameManager.config.getWithoutLogs(\r\n                'client/trade/titles/tradeRequestFromLabel',\r\n                'Trade request from:'\r\n            ),\r\n            content: this.message.from,\r\n            options: this.gameManager.config.get('client/ui/options/acceptOrDecline'),\r\n            overrideSendOptions: {\r\n                act: InventoryConst.ACTIONS.TRADE_ACCEPTED,\r\n                id: this.message.id\r\n            }\r\n        });\r\n        this.gameDom.getElement('#opt-2-'+tradeUiKey)?.addEventListener('click', () => {\r\n            this.gameDom.getElement('#box-close-'+tradeUiKey)?.click();\r\n        });\r\n    }\r\n\r\n    showTradeBox()\r\n    {\r\n        let tradeUiKey = 'trade'+this.message.id;\r\n        this.createTradeUi(tradeUiKey);\r\n        // this will create or reset the ui content:\r\n        this.roomEvents.initUi({\r\n            id: tradeUiKey,\r\n            title: this.gameManager.services.translator.t('items.tradeWith', {playerName: this.message.with}),\r\n            content: '',\r\n            options: {}\r\n        });\r\n        let container = this.gameManager.gameDom.getElement('#box-'+tradeUiKey+' .box-content');\r\n        if(!container){\r\n            Logger.error('Missing container: \"#box-'+tradeUiKey+' .box-content\".');\r\n            return false;\r\n        }\r\n        if(true === this.message.isTradeEnd){\r\n            this.gameDom.getElement('#box-close-'+'trade'+this.message.id)?.click();\r\n            return true;\r\n        }\r\n        let items = sc.get(this.message, 'items', false);\r\n        let traderItemsData = sc.get(this.message, 'traderItemsData', {});\r\n        let exchangeData = sc.get(this.message, 'exchangeData', {});\r\n        let traderExchangeKey = sc.get(this.message, 'playerToExchangeKey', {});\r\n        // my exchange key is the opposite to the received exchange key:\r\n        let myExchangeKey = 'A' === traderExchangeKey ? 'B' : 'A';\r\n        this.updateItemsList(items, container, exchangeData[myExchangeKey]);\r\n        this.updateMyExchangeData((exchangeData[myExchangeKey] || {}), items, myExchangeKey);\r\n        this.updateTraderExchangeData((exchangeData[traderExchangeKey] || {}), traderItemsData, traderExchangeKey);\r\n    }\r\n\r\n    createTradeUi(tradeUiKey)\r\n    {\r\n        let tradeUi = sc.get(this.roomEvents.tradeUi, tradeUiKey);\r\n        if(!tradeUi){\r\n            this.roomEvents.tradeUi[tradeUiKey] = new UserInterface(\r\n                this.gameManager,\r\n                {id: tradeUiKey, type: 'trade'},\r\n                '/assets/html/dialog-box.html',\r\n                'trade'\r\n            );\r\n            this.roomEvents.tradeUi[tradeUiKey].createUiElement(this.uiScene, 'trade');\r\n        }\r\n        return tradeUi;\r\n    }\r\n\r\n    updateItemsList(items, container, exchangeData)\r\n    {\r\n        if(!items){\r\n            return;\r\n        }\r\n        let tradeItems = '';\r\n        let tempItemsList = {};\r\n        for(let i of Object.keys(items)){\r\n            let messageItem = items[i];\r\n            let itemsProps = Object.assign({manager: this.itemsManager}, messageItem, {uid: i});\r\n            let itemClass = sc.get(\r\n                this.itemsManager.itemClasses,\r\n                itemsProps.key,\r\n                this.itemsManager.types.classByTypeId(itemsProps.type)\r\n            );\r\n            tempItemsList[i] = new itemClass(itemsProps);\r\n            tempItemsList[i].quantityDisplay = 1;\r\n            tempItemsList[i].quantityMaxDisplay = Math.max(tempItemsList[i].qty_limit, messageItem.qty);\r\n            tempItemsList[i].tradeAction = 'trade';\r\n            tradeItems += this.createTradeItemBox(tempItemsList[i], sc.get(exchangeData, tempItemsList[i].uid, false));\r\n        }\r\n        container.innerHTML = this.createTradeContainer(tradeItems);\r\n        this.activateItemsBoxActions(tempItemsList);\r\n        this.activateConfirmButtonAction();\r\n    }\r\n\r\n    activateConfirmButtonAction()\r\n    {\r\n        let confirmButton = this.gameManager.gameDom.getElement('.confirm-'+this.message.id);\r\n        confirmButton?.addEventListener('click', () => {\r\n            this.gameManager.activeRoomEvents.send({\r\n                act: InventoryConst.ACTIONS.TRADE_ACTION,\r\n                id: this.message.id,\r\n                value: this.message.id,\r\n                sub: ObjectsConst.TRADE_ACTIONS.CONFIRM\r\n            });\r\n        });\r\n        let disconfirmButton = this.gameManager.gameDom.getElement('.disconfirm-'+this.message.id);\r\n        disconfirmButton?.addEventListener('click', () => {\r\n            this.gameManager.activeRoomEvents.send({\r\n                act: InventoryConst.ACTIONS.TRADE_ACTION,\r\n                id: this.message.id,\r\n                value: this.message.id,\r\n                sub: ObjectsConst.TRADE_ACTIONS.DISCONFIRM\r\n            });\r\n        });\r\n        let cancelButton = this.gameManager.gameDom.getElement('.cancel-'+this.message.id);\r\n        cancelButton?.addEventListener('click', () => {\r\n            this.gameDom.getElement('#box-close-'+'trade'+this.message.id)?.click();\r\n        });\r\n    }\r\n\r\n    updateMyExchangeData(exchangeDataItems, items, exchangeKey)\r\n    {\r\n        if(0 === Object.keys(exchangeDataItems).length){\r\n            return false;\r\n        }\r\n        let content = this.createConfirmItemsBox(exchangeDataItems, items);\r\n        let itemsContainer = this.gameDom.getElement('.trade-items-boxes .trade-player-col.trade-col-2');\r\n        if(!itemsContainer){\r\n            Logger.error('Missing \"'+exchangeKey+'\" items container.');\r\n            return false;\r\n        }\r\n        itemsContainer.innerHTML = content;\r\n        this.assignRemoveActions(exchangeDataItems, items);\r\n        return true;\r\n    }\r\n\r\n    updateTraderExchangeData(exchangeDataItems, traderItemsData, exchangeKey)\r\n    {\r\n        if(0 === Object.keys(exchangeDataItems).length){\r\n            return false;\r\n        }\r\n        let content = this.createReceivingItemsBox(exchangeDataItems, traderItemsData);\r\n        let itemsContainer = this.gameDom.getElement('.trade-items-boxes .trade-player-col.trade-col-3');\r\n        if(!itemsContainer){\r\n            Logger.error('Missing \"'+exchangeKey+'\" items container.');\r\n            return false;\r\n        }\r\n        itemsContainer.innerHTML = content;\r\n        return true;\r\n    }\r\n\r\n    createConfirmItemsBox(exchangeItems, items)\r\n    {\r\n        // @TODO - BETA - Since we are using one template \"inventoryTradeItem\", use only one \"createConfirmItemsBox\".\r\n        let exchangeItemsUids = Object.keys(exchangeItems);\r\n        if(0 === exchangeItemsUids.length){\r\n            Logger.info('Undefined exchange items on confirmation trade-message-handler.', {message: this.message});\r\n            return '';\r\n        }\r\n        let content = '';\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeItem');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeItem\".');\r\n            return '';\r\n        }\r\n        for(let itemUid of exchangeItemsUids){\r\n            let qty = exchangeItems[itemUid];\r\n            let item = items[itemUid];\r\n            content += this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n                key: item.key,\r\n                label: item.label,\r\n                description: item.description,\r\n                id: itemUid,\r\n                qty: item.qty,\r\n                hiddenClass: '',\r\n                tradeAction: this.createTradeActionRemove(item),\r\n                tradeActionKey: this.message.id,\r\n                tradeQuantityContent: qty\r\n            });\r\n        }\r\n        return content;\r\n    }\r\n\r\n    createReceivingItemsBox(exchangeItems, traderItemsData)\r\n    {\r\n        let exchangeItemsUids = Object.keys(exchangeItems);\r\n        if(0 === exchangeItemsUids.length){\r\n            Logger.info('Undefined exchange items on receive trade-message-handler.', {message: this.message});\r\n            return '';\r\n        }\r\n        let content = '';\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeItem');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeItem\".');\r\n            return '';\r\n        }\r\n        for(let itemUid of exchangeItemsUids){\r\n            let qty = exchangeItems[itemUid];\r\n            let item = traderItemsData[itemUid];\r\n            content += this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n                key: item.key,\r\n                label: item.label,\r\n                description: item.description,\r\n                id: itemUid,\r\n                qty: item.qty,\r\n                hiddenClass: '',\r\n                tradeAction: '',\r\n                tradeActionKey: this.message.id,\r\n                tradeQuantityContent: qty\r\n            });\r\n        }\r\n        return content;\r\n    }\r\n\r\n    assignRemoveActions(exchangeItems, items)\r\n    {\r\n        let exchangeItemsUids = Object.keys(exchangeItems);\r\n        if(0 === exchangeItemsUids.length){\r\n            Logger.info('Undefined exchange items on remove trade-message-handler.', {message: this.message});\r\n            return false;\r\n        }\r\n        for(let itemUid of exchangeItemsUids){\r\n            let itemContainerSelector = '.pushed-to-trade .trade-item-'+itemUid;\r\n            let itemContainer = this.gameDom.getElement(itemContainerSelector);\r\n            if(!itemContainer){\r\n                Logger.error('Assign trade item \"'+itemUid+'\" container not found.');\r\n                continue;\r\n            }\r\n            let itemActionButton = this.gameDom.getElement(\r\n                '.pushed-to-trade .trade-item-'+itemUid+' .trade-action-remove'\r\n            );\r\n            if(!itemActionButton){\r\n                Logger.error('Assign trade item \"'+itemUid+'\" remove button not found.');\r\n                continue;\r\n            }\r\n            let item = items[itemUid];\r\n            itemActionButton.addEventListener('click', () => {\r\n                itemContainer.classList.remove('hidden');\r\n                let dataSend = {\r\n                    act: InventoryConst.ACTIONS.TRADE_ACTION,\r\n                    id: this.message.id,\r\n                    value: 'remove',\r\n                    itemId: itemUid,\r\n                    itemKey: item.key,\r\n                };\r\n                dataSend[ObjectsConst.TRADE_ACTIONS.SUB_ACTION] = ObjectsConst.TRADE_ACTIONS.REMOVE;\r\n                this.gameManager.activeRoomEvents.send(dataSend);\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    createTradeContainer(tradeItems)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradePlayerContainer');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeContainer\".');\r\n            return '';\r\n        }\r\n        let functionLabels = ObjectsConst.TRADE_ACTIONS_FUNCTION_NAME;\r\n        let templateParams = {\r\n            tradeActionKey: this.message.id,\r\n            confirmLabel: this.gameManager.config.getWithoutLogs(\r\n                'client/trade/titles/confirmLabel',\r\n                functionLabels.CONFIRM\r\n            ),\r\n            disconfirmLabel: this.gameManager.config.getWithoutLogs(\r\n                'client/trade/titles/disconfirmLabel',\r\n                functionLabels.DISCONFIRM\r\n            ),\r\n            cancelLabel: this.gameManager.config.getWithoutLogs(\r\n                'client/trade/titles/cancelLabel',\r\n                functionLabels.CANCEL\r\n            ),\r\n            myItems: tradeItems,\r\n            myItemsTitle: this.gameManager.config.getWithoutLogs('client/trade/titles/myItems', 'My Items:'),\r\n            pushedToTradeTitle: this.gameManager.config.getWithoutLogs(\r\n                'client/trade/titles/pushedToTradeTitle',\r\n                'Sending:'\r\n            ),\r\n            gotFromTradeTitle: this.gameManager.config.getWithoutLogs(\r\n                'client/trade/titles/gotFromTradeTitle',\r\n                'Receiving:'\r\n            ),\r\n            playerConfirmedLabel: this.playerConfirmedLabel(),\r\n        };\r\n        return this.gameManager.gameEngine.parseTemplate(messageTemplate, templateParams);\r\n    }\r\n\r\n    playerConfirmedLabel()\r\n    {\r\n        if(!this.message.playerConfirmed){\r\n            return '';\r\n        }\r\n        return this.gameManager.config.getWithoutLogs(\r\n            'client/trade/titles/playerConfirmedLabel',\r\n            '%playerName CONFIRMED'\r\n            ).replace('%playerName', this.message.with);\r\n    }\r\n\r\n    createTradeItemBox(item, exchangeDataItem)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeItem');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeItem\".');\r\n            return '';\r\n        }\r\n        let qtyTemplate = this.uiScene.cache.html.get('inventoryTradeItemQuantity');\r\n        if(!qtyTemplate){\r\n            Logger.error('Missing template \"inventoryTradeItemQuantity\".');\r\n            return '';\r\n        }\r\n        let qty = exchangeDataItem || 0;\r\n        return this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            key: item.key,\r\n            label: item.label,\r\n            description: item.description,\r\n            id: item.getInventoryId(),\r\n            qty: item.qty,\r\n            hiddenClass: 0 < qty && item.qty === qty ? ' hidden' : '',\r\n            tradeAction: this.createTradeActionContent(item),\r\n            tradeActionKey: 'to-be-'+item.tradeAction,\r\n            tradeQuantityContent: this.gameManager.gameEngine.parseTemplate(qtyTemplate, {\r\n                quantityDisplay: item.quantityDisplay || 1,\r\n                quantityMaxDisplay: 0 < item.quantityMaxDisplay ? 'max=\"' + item.quantityMaxDisplay + '\"' : ''\r\n            })\r\n        });\r\n    }\r\n\r\n    createTradeActionContent(item, tradeAction)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeAction');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeAction\".');\r\n            return '';\r\n        }\r\n        return this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            key: item.key,\r\n            id: item.getInventoryId(),\r\n            tradeAction: tradeAction || sc.get(item, 'tradeAction', '')\r\n        });\r\n    }\r\n\r\n    createTradeActionRemove(item)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let messageTemplate = this.uiScene.cache.html.get('inventoryTradeActionRemove');\r\n        if(!messageTemplate){\r\n            Logger.error('Missing template \"inventoryTradeActionRemove\".');\r\n            return '';\r\n        }\r\n        return this.gameManager.gameEngine.parseTemplate(messageTemplate, {\r\n            key: item.key,\r\n            id: item.uid,\r\n            tradeAction: 'remove'\r\n        });\r\n    }\r\n\r\n    activateItemsBoxActions(items)\r\n    {\r\n        for(let i of Object.keys(items)){\r\n            let item = items[i];\r\n            let itemContainerSelector = '.trade-item-to-be-'+item.tradeAction+'.trade-item-'+item.uid\r\n                +' .trade-action-'+item.tradeAction;\r\n            let itemButtonSelector = itemContainerSelector+' button';\r\n            let itemActionButton = this.gameDom.getElement(itemButtonSelector);\r\n            if(!itemActionButton){\r\n                Logger.error('Activate trade item \"'+item.uid+'\" action button not found.');\r\n                continue;\r\n            }\r\n            itemActionButton.addEventListener('click', () => {\r\n                let qtySelector = this.gameDom.getElement('.trade-item-'+item.getInventoryId()+' .item-qty input');\r\n                let qtySelected = qtySelector?.value || 1;\r\n                let dataSend = {\r\n                    act: InventoryConst.ACTIONS.TRADE_ACTION,\r\n                    id: this.message.id,\r\n                    value: item.tradeAction,\r\n                    itemId: item.getInventoryId(),\r\n                    itemKey: item.key,\r\n                    qty: Number(qtySelected)\r\n                };\r\n                dataSend[ObjectsConst.TRADE_ACTIONS.SUB_ACTION] = ObjectsConst.TRADE_ACTIONS.ADD;\r\n                this.gameManager.activeRoomEvents.send(dataSend);\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TradeMessageHandler = TradeMessageHandler;\r\n","/**\r\n *\r\n * Reldens - TemplatesHandler\r\n *\r\n */\r\n\r\nclass TemplatesHandler\r\n{\r\n\r\n    static preloadTemplates(preloadScene)\r\n    {\r\n        // @TODO - BETA - Replace by loader replacing snake name file name by camel case for the template key.\r\n        let inventoryTemplatePath = '/assets/features/inventory/templates/';\r\n        // @TODO - BETA - Move the preload HTML as part of the engine driver.\r\n        preloadScene.load.html('inventory', inventoryTemplatePath+'ui-inventory.html');\r\n        preloadScene.load.html('equipment', inventoryTemplatePath+'ui-equipment.html');\r\n        preloadScene.load.html('inventoryItem', inventoryTemplatePath+'item.html');\r\n        preloadScene.load.html('inventoryItemUse', inventoryTemplatePath+'usable.html');\r\n        preloadScene.load.html('inventoryItemEquip', inventoryTemplatePath+'equip.html');\r\n        preloadScene.load.html('inventoryGroup', inventoryTemplatePath+'group.html');\r\n        preloadScene.load.html('inventoryTradeContainer', inventoryTemplatePath+'trade-container.html');\r\n        preloadScene.load.html('inventoryTradePlayerContainer', inventoryTemplatePath+'trade-player-container.html');\r\n        preloadScene.load.html('inventoryTradeRequirements', inventoryTemplatePath+'trade-requirements.html');\r\n        preloadScene.load.html('inventoryTradeRewards', inventoryTemplatePath+'trade-rewards.html');\r\n        preloadScene.load.html('inventoryTradeAction', inventoryTemplatePath+'trade-action.html');\r\n        preloadScene.load.html('inventoryTradeActionRemove', inventoryTemplatePath+'trade-action-remove.html');\r\n        preloadScene.load.html('inventoryTradeItem', inventoryTemplatePath+'trade-item.html');\r\n        preloadScene.load.html('inventoryTradeItemQuantity', inventoryTemplatePath+'trade-item-quantity.html');\r\n        preloadScene.load.html('inventoryTradeStart', inventoryTemplatePath+'trade-start.html');\r\n        preloadScene.load.html('inventoryTradeAccept', inventoryTemplatePath+'trade-accept.html');\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TemplatesHandler = TemplatesHandler;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    items: {\r\n        undefinedItem: 'Add item error, undefined item.',\r\n        undefinedMethodInventoryId: 'Add item error, undefined getInventoryId.',\r\n        undefinedItemKey: 'Add item error, undefined item key.',\r\n        invalidItemInstance: 'Invalid item instance.',\r\n        lockedForAddItem: 'Inventory locked, cannot add item: %itemUid',\r\n        maxTotalReachedForAddItem: 'Cannot add item, max total reached.',\r\n        itemExistsForAddItem: 'Cannot add item, item already exists: %itemUid',\r\n        itemLimitExceededForAddItem: 'Cannot add item, item qty limit exceeded.',\r\n        addItemsError: 'Cannot add item \"%itemUid\".',\r\n        lockedForSetItem: 'Inventory locked, cannot set item: %itemUid.',\r\n        lockedForRemoveItem: 'Inventory locked, cannot remove item: %itemUid.',\r\n        keyNotFound: 'Cannot remove item, key not found: %itemUid.',\r\n        lockedForModifyItemQty: 'Inventory locked, cannot modify item qty: %itemUid.',\r\n        undefinedItemKeyForOperation: 'Cannot \"%operation\" item qty, undefined item key: %itemUid.',\r\n        qtyNotANumber: 'Cannot \"%operation\" item qty, quantity is not a number: %qty.',\r\n        itemQtyLimitExceeded: 'Cannot \"%operation\" item qty, item qty limit exceeded: %qty > %limitPerItem.',\r\n        lockedForSetItems: 'Inventory locked, cannot set items.',\r\n        tradeWith: 'Trading with %playerName',\r\n        exchange: {\r\n            missingConfirmation: 'Missing confirmation.',\r\n            invalidPushedQuantity: 'Invalid item pushed quantity (%qty), available: %pushedItemQty.',\r\n            invalidQuantity: 'Invalid item quantity 0.',\r\n            invalidExchange: 'Inventories \"FROM\" and \"TO\" are the same, exchange cancelled.',\r\n            decreaseQuantity: 'Exchange inventory decrease error.',\r\n            itemAdd: 'Exchange add inventory result error.'\r\n        },\r\n        requirements: {\r\n            itemNotPresent: 'Required item \"%requiredItemKey\" is not present.',\r\n            quantityNotAvailable: 'Required item \"%requiredItemKey\" quantity %totalRequiredQuantity'\r\n                +' is not available.',\r\n            itemNotPushed: 'Required item \"%requiredItemKey\" was not pushed for exchange.',\r\n            itemQuantityNotPushed: 'Required item \"%requiredItemKey\" quantity %totalRequiredQuantity'\r\n                +' was not pushed for exchange.',\r\n            itemDoesNotExists: 'Requirement error, item \"%itemUid\" does not exits on inventory.',\r\n            itemAdd: 'Requirement add item error.'\r\n        },\r\n        reward: {\r\n            doesNotExists: 'Reward error, item \"%itemUid\" does not exits.',\r\n            missingItem: 'Reward error, item \"%itemUid\" does not exits.',\r\n            itemNotPresent: 'Reward item \"%rewardItemKey\" is not present on inventory.',\r\n            quantityNotAvailable: 'Reward item %rewardItemKey reward quantity (%rewardQuantity) is not available.',\r\n            missingPushed: 'Missing pushed for exchange item \"%itemUid\".',\r\n            getItemDoesNotExists: 'Reward error, item \"%itemUid\" does not exits on inventory.',\r\n            processItem: 'Process item reward error, item \"%itemUid\".',\r\n            processInventory: 'Rewards process inventory error.',\r\n            addItems: 'Rewards error on add items: %itemsKeys.',\r\n            quantityOverload: 'Reward quantity (%rewardQuantityTotal) is bigger than the available in the'\r\n                +' inventory (%rewardInventoryItemQty).'\r\n        },\r\n        equipment: {\r\n            modifiersApply: 'Cannot apply modifiers the item is not equipped: %itemUid',\r\n            modifiersRevert: 'Cannot revert modifiers the item is not equipped: %itemUid',\r\n        }\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - ActionsPlugin\r\n *\r\n * Main functionalities:\r\n * The ActionsPlugin class is responsible for setting up and managing the actions plugin for the Reldens game engine.\r\n * It listens to various events and sets up the necessary components for the actions plugin to work, such as the player\r\n * selector, preloader handler, and UI manager. It also handles message processing and enriching the game manager with\r\n * the necessary skills and receivers.\r\n *\r\n * Methods:\r\n * - setup(props): sets up the plugin by initializing the necessary components and listening to events.\r\n * - setTranslations(): sets up translations for the plugin using the TranslationsMapper class.\r\n * - listenEvents(): listens to various events and sets up the necessary components for the plugin to work.\r\n *\r\n * Fields:\r\n * - gameManager: the game manager instance.\r\n * - events: the events manager instance.\r\n * - playerSelector: an instance of the PlayerSelector class.\r\n * - preloaderHandler: an instance of the PreloaderHandler class.\r\n * - uiManager: an instance of the SkillsUi class.\r\n *\r\n */\r\n\r\nconst { SkillsUi } = require('./skills-ui');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { PlayerSelector } = require('./player-selector');\r\nconst { PreloaderHandler } = require('./preloader-handler');\r\nconst { MessagesHandler } = require('./messages-handler');\r\nconst { GameManagerEnricher } = require('./game-manager-enricher');\r\nconst Translations = require('./snippets/en_US');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst { ActionsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ActionsPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in ActionsPlugin.');\r\n        }\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in ActionsPlugin.');\r\n        }\r\n        this.playerSelector = new PlayerSelector(props);\r\n        this.preloaderHandler = new PreloaderHandler(props);\r\n        this.setTranslations();\r\n        this.listenEvents();\r\n    }\r\n\r\n    setTranslations()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations, ActionsConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events || !this.gameManager){\r\n            return false;\r\n        }\r\n        this.events.on('reldens.preloadUiScene', (uiScene) => {\r\n            this.preloaderHandler.loadContents(uiScene);\r\n        });\r\n        this.events.on('reldens.createPreload', (preloadScene) => {\r\n            this.preloaderHandler.createAnimations(preloadScene);\r\n        });\r\n        this.events.on('reldens.createUiScene', (preloadScene) => {\r\n            this.uiManager = new SkillsUi(preloadScene);\r\n            this.uiManager.createUi();\r\n        });\r\n        this.events.on('reldens.beforeCreateEngine', (initialGameData) => {\r\n            this.playerSelector.populateClassesSelector(\r\n                sc.get(initialGameData, 'classesData', {}),\r\n                initialGameData.gameConfig.client.players,\r\n                initialGameData.player\r\n            );\r\n        });\r\n        this.events.on('reldens.activateRoom', (room) => {\r\n            room.onMessage('*', (message) => {\r\n                MessagesHandler.processOrQueueMessage(message, this.gameManager);\r\n            });\r\n        });\r\n        this.events.on('reldens.playersOnAddReady', (props) => {\r\n            GameManagerEnricher.withReceiver(props.player, props.roomEvents, this.gameManager);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ActionsPlugin = ActionsPlugin;\r\n","/**\r\n *\r\n * Reldens - SkillsUi\r\n *\r\n */\r\n\r\nconst { ActionsConst } = require('../constants');\r\n\r\nclass SkillsUi\r\n{\r\n\r\n    constructor(uiScene)\r\n    {\r\n        this.uiScene = uiScene;\r\n        this.gameManager = this.uiScene.gameManager;\r\n        this.defaultAction = this.gameManager.config.get('client/ui/controls/defaultActionKey');\r\n    }\r\n\r\n    createUi()\r\n    {\r\n        let selector = ActionsConst.SELECTORS.UI_PLAYER_EXTRAS;\r\n        this.appendToUiContainer(selector, 'skillsClassPath');\r\n        this.appendToUiContainer(selector, 'skillsLevel');\r\n        this.appendToUiContainer(selector, 'skillsExperience', {\r\n            experienceLabel: this.gameManager.services.translator.t(ActionsConst.SNIPPETS.EXPERIENCE_LABEL)\r\n        });\r\n        this.createUiBox('skills', 7);\r\n    }\r\n\r\n    appendSkills(skills)\r\n    {\r\n        // @TODO - BETA - Implement skills groups.\r\n        let skillsList = Object.keys(skills);\r\n        // if the default action is a skill we won't show a duplicated box:\r\n        if(0 === skillsList.length){\r\n            return false;\r\n        }\r\n        for(let i of skillsList){\r\n            let skill = skills[i];\r\n            if(skill === this.defaultAction){\r\n                continue;\r\n            }\r\n            this.createSkillBox(skill);\r\n        }\r\n    }\r\n\r\n    appendToUiContainer(containerSelector, skillsUiTemplate, snippets = {})\r\n    {\r\n        let messageTemplate = this.uiScene.cache.html.get(skillsUiTemplate);\r\n        let snippetsKeys = Object.keys(snippets);\r\n        if(0 < snippetsKeys.length){\r\n            messageTemplate = this.gameManager.gameEngine.parseTemplate(messageTemplate, snippets);\r\n        }\r\n        this.gameManager.gameDom.appendToElement(containerSelector, messageTemplate);\r\n    }\r\n\r\n    createUiBox(codeName, depth)\r\n    {\r\n        // @TODO - BETA - Replace by UserInterface.\r\n        let {uiX, uiY} = this.uiScene.getUiConfig(codeName);\r\n        let generatedUi = this.uiScene.add.dom(uiX, uiY).createFromCache(codeName);\r\n        generatedUi.setDepth(depth);\r\n        this.uiScene.elementsUi[codeName] = generatedUi;\r\n    }\r\n\r\n    createSkillBox(skill)\r\n    {\r\n        let skillBox = this.parseSkillTemplate(skill);\r\n        this.gameManager.gameDom.appendToElement(ActionsConst.SELECTORS.SKILLS_CONTAINER, skillBox);\r\n        this.uiScene.setupActionButtonInBox(skill, this.uiScene.getUiElement('skills'));\r\n    }\r\n\r\n    parseSkillTemplate(skill)\r\n    {\r\n        let skillTemplate = this.uiScene.cache.html.get('skillBox');\r\n        return this.gameManager.gameEngine.parseTemplate(skillTemplate, {\r\n            key: skill,\r\n            // @TODO - BETA - Get all the required skill data on the client, from the label to the delay time counter.\r\n            skillName: skill\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.SkillsUi = SkillsUi;\r\n","/**\r\n *\r\n * Reldens - PlayerSelector.\r\n *\r\n * Main functionalities:\r\n * The PlayerSelector class is responsible for populating the class path selector with the available classes and their\r\n * corresponding avatars. It also appends the selector to the player creation form and handles the avatar change when\r\n * the user selects a different class.\r\n *\r\n * Methods:\r\n * - populateClassesSelector: populates the class path selector with the available classes and their avatars.\r\n * - appendAvatarOnSelector: appends the avatar of the selected class to the selector and handles the avatar change\r\n * when the user selects a different class.\r\n *\r\n */\r\n\r\nconst { ActionsConst } = require('../constants');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass PlayerSelector\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        /** @type {GameManager} **/\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in ActionsPlugin PlayerSelector.');\r\n        }\r\n        /** @type EventsManager **/\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in ActionsPlugin PlayerSelector.');\r\n        }\r\n        /** @type {GameDom} **/\r\n        this.gameDom = this.gameManager.gameDom;\r\n    }\r\n\r\n    populateClassesSelector(classesData, playersConfig, activePlayer)\r\n    {\r\n        if(!sc.isObject(classesData) || 0 === Object.keys(classesData).length){\r\n            Logger.error('Classes not defined, can not populate the classes selector.');\r\n            this.gameDom.getElement('.player-selection-form-errors')?.append(\r\n                this.gameManager.services?.translator.t('game.errors.missingClasses')\r\n            );\r\n            return false;\r\n        }\r\n        let multiConfig = sc.get(playersConfig, 'multiplePlayers', false);\r\n        if((!multiConfig || !multiConfig.enabled) && activePlayer){\r\n            return false;\r\n        }\r\n        let playerAdditional = this.gameDom.getElement(ActionsConst.SELECTORS.PLAYER_CREATION_ADDITIONAL_INFO);\r\n        if(!playerAdditional){\r\n            return false;\r\n        }\r\n        // @TODO - BETA - Extract all the DOM objects creation, move into the gameDom.\r\n        this.gameDom.getElement(ActionsConst.SELECTORS.PLAYER_CREATE_FORM)?.classList.remove('hidden');\r\n        let div = this.gameDom.createElement('div');\r\n        div.id = 'class-path-selector-box';\r\n        div.classList.add('input-box');\r\n        let label = this.gameDom.createElement('label');\r\n        let classPathSelectId = 'class-path-select';\r\n        label.htmlFor = classPathSelectId;\r\n        label.innerText = this.gameManager.services.translator.t(ActionsConst.SNIPPETS.SELECT_CLASS_PATH);\r\n        let select = this.gameDom.createElement('select');\r\n        select.id = classPathSelectId;\r\n        select.name = 'class_path_select';\r\n        for(let id of Object.keys(classesData)){\r\n            let option = new Option(classesData[id].label, id);\r\n            option.dataset.key = classesData[id].key;\r\n            select.append(option);\r\n        }\r\n        div.append(label);\r\n        div.append(select);\r\n        if(this.gameManager.config.getWithoutLogs('client/players/multiplePlayers/showAvatar', true)){\r\n            let avatarDiv = this.gameDom.createElement('div');\r\n            avatarDiv.className = 'avatar-container';\r\n            this.appendAvatarOnSelector(select, avatarDiv, playersConfig);\r\n            div.append(avatarDiv);\r\n        }\r\n        playerAdditional.append(div);\r\n    }\r\n\r\n    appendAvatarOnSelector(select, container, playersConfig)\r\n    {\r\n        // @TODO - BETA - Refactor, extract all the styles and replace the avatar background by an element.\r\n        let avatar = this.gameDom.createElement('div');\r\n        let avatarKey = select.options[select.selectedIndex].dataset.key;\r\n        avatar.classList.add('class-path-select-avatar');\r\n        avatar.style.backgroundImage = `url('/assets/custom/sprites/${avatarKey}${GameConst.FILES.EXTENSIONS.PNG}')`;\r\n        let widthInPx = playersConfig.size.width+'px';\r\n        avatar.style.backgroundPositionX = '-'+widthInPx;\r\n        avatar.style.width = widthInPx;\r\n        avatar.style.height = playersConfig.size.height+'px';\r\n        select.addEventListener('change', () => {\r\n            let avatarKey = select.options[select.selectedIndex].dataset.key;\r\n            avatar.style.backgroundImage = `url('/assets/custom/sprites/${avatarKey}${GameConst.FILES.EXTENSIONS.PNG}')`;\r\n        });\r\n        container.append(avatar);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PlayerSelector = PlayerSelector;","/**\r\n *\r\n * Reldens - PreloaderHandler.\r\n *\r\n */\r\n\r\nconst { Logger, sc } = require('@reldens/utils');\r\nconst { GameConst } = require('../../game/constants');\r\n\r\nclass PreloaderHandler\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in ActionsPlugin PreloaderHandler.');\r\n        }\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in ActionsPlugin PreloaderHandler.');\r\n        }\r\n        this.setProperties(props);\r\n    }\r\n\r\n    setProperties(props)\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        this.gameDom = this.gameManager.gameDom;\r\n        this.initialGameData = this.gameManager.initialGameData;\r\n        this.levelsAnimConfig = this.gameManager.config.get('client/levels/animations');\r\n        this.skillsAnimConfig = this.gameManager.config.get('client/skills/animations');\r\n        this.assetsCustomActionsSpritesPath = sc.get(\r\n            props,\r\n            'assetsCustomActionsSpritesPath',\r\n            'assets/custom/actions/sprites/'\r\n        );\r\n        if(!this.gameManager.loadedAssets){\r\n            this.gameManager.loadedAssets = {};\r\n        }\r\n        if(!this.gameManager.createdAnimations){\r\n            this.gameManager.createdAnimations = {};\r\n        }\r\n    }\r\n\r\n    loadContents(uiScene)\r\n    {\r\n        uiScene.load.html('skillsClassPath', '/assets/features/skills/templates/ui-class-path.html');\r\n        uiScene.load.html('skillsLevel', '/assets/features/skills/templates/ui-level.html');\r\n        uiScene.load.html('skillsExperience', '/assets/features/skills/templates/ui-experience.html');\r\n        uiScene.load.html('skills', '/assets/features/skills/templates/ui-skills.html');\r\n        uiScene.load.html('skillBox', '/assets/features/skills/templates/ui-skill-box.html');\r\n        uiScene.load.html('actionBox', '/assets/html/ui-action-box.html');\r\n        this.preloadClassPaths(uiScene);\r\n        this.loopAnimationsAnd(this.levelsAnimConfig, 'preload', uiScene);\r\n        this.loopAnimationsAnd(this.skillsAnimConfig, 'preload', uiScene);\r\n    }\r\n\r\n    preloadClassPaths(uiScene)\r\n    {\r\n        let classesData = sc.get(this.initialGameData, 'classesData', false);\r\n        if(!classesData){\r\n            return false;\r\n        }\r\n        for(let i of Object.keys(classesData)){\r\n            let avatarKey = classesData[i].key;\r\n            let spriteSheetLoader = uiScene.load.spritesheet(\r\n                avatarKey,\r\n                '/assets/custom/sprites/'+avatarKey+GameConst.FILES.EXTENSIONS.PNG,\r\n                uiScene.playerSpriteSize\r\n            );\r\n            spriteSheetLoader.on('filecomplete', async (completedKey) => {\r\n                this.gameManager.loadedAssets[completedKey] = completedKey;\r\n            });\r\n        }\r\n    }\r\n\r\n    createAnimations(preloadScene)\r\n    {\r\n        let levelsAnimations = this.levelsAnimConfig;\r\n        this.loopAnimationsAnd(levelsAnimations, 'create', preloadScene);\r\n        let skillsAnimations = this.skillsAnimConfig;\r\n        this.loopAnimationsAnd(skillsAnimations, 'create', preloadScene);\r\n        this.createAvatarsAnimations(preloadScene);\r\n    }\r\n\r\n    createAvatarsAnimations(preloadScene)\r\n    {\r\n        let classesData = sc.get(this.initialGameData, 'classesData', false);\r\n        if(!classesData){\r\n            Logger.debug('Classes data not found. Fallback to player avatar.');\r\n            return false;\r\n        }\r\n        if(!this.gameManager.mappedAvatars){\r\n            this.gameManager.mappedAvatars = {};\r\n        }\r\n        Logger.debug({availableClassesData: classesData});\r\n        for(let i of Object.keys(classesData)){\r\n            let avatarKey = classesData[i].key;\r\n            if(!this.gameManager.loadedAssets[avatarKey]){\r\n                avatarKey = GameConst.IMAGE_PLAYER;\r\n                Logger.info('Avatar for class path \"'+avatarKey+'\" not found in assets. Fallback to player avatar.');\r\n            }\r\n            this.gameManager.mappedAvatars[avatarKey] = avatarKey;\r\n            preloadScene.createPlayerAnimations(avatarKey);\r\n        }\r\n        return this.gameManager.mappedAvatars;\r\n    }\r\n\r\n    loopAnimationsAnd(animations, command, uiScene)\r\n    {\r\n        if(!animations){\r\n            Logger.warning('Animations not found.', animations);\r\n            return false;\r\n        }\r\n        for(let i of Object.keys(animations)){\r\n            let data = animations[i];\r\n            if(!data.animationData.enabled){\r\n                Logger.debug('Animation \"'+i+'\" not enabled, skipping.', data);\r\n                continue;\r\n            }\r\n            Logger.debug({[command+'Animation']: data});\r\n            this[command+'Animation'](data, uiScene);\r\n        }\r\n    }\r\n\r\n    // @NOTE: dynamically named used method, see loopAnimationsAnd(animations, command, uiScene) method.\r\n    preloadAnimation(data, uiScene)\r\n    {\r\n        // @TODO - BETA - Remove the hardcoded file extensions.\r\n        // @NOTE: here we use have two keys, the animation key and the animationData.img, this is because we could have\r\n        // a single sprite with multiple attacks, and use the start and end frame to run the required one.\r\n        if(\r\n            sc.hasOwn(data.animationData, ['type', 'img'])\r\n            && GameConst.ANIMATIONS_TYPE.SPRITESHEET === data.animationData.type\r\n        ){\r\n            this.preloadAnimationsInDirections(data, uiScene);\r\n        }\r\n        if(data.classKey && sc.isFunction(data.classKey['prepareAnimation'])){\r\n            data.classKey['prepareAnimation']({data, uiScene, pack: this});\r\n        }\r\n    }\r\n\r\n    preloadAnimationsInDirections(data, uiScene)\r\n    {\r\n        // try load directions:\r\n        // - 1: both (this is to include diagonals)\r\n        // - 2: up/down\r\n        // - 3: left/right\r\n        let animDir = sc.get(data.animationData, 'dir', 0);\r\n        if(0 === animDir){\r\n            uiScene.load.spritesheet(\r\n                this.getAnimationKey(data),\r\n                this.assetsCustomActionsSpritesPath + data.animationData.img+GameConst.FILES.EXTENSIONS.PNG,\r\n                data.animationData\r\n            );\r\n            return;\r\n        }\r\n        // @TODO - BETA - Refactor and implement animDir = 1 (both): up_right, up_left, down_right, down_left.\r\n        if(1 === animDir || 2 === animDir){\r\n            this.preloadSpriteInDirection(uiScene, data, GameConst.UP);\r\n            this.preloadSpriteInDirection(uiScene, data, GameConst.DOWN);\r\n        }\r\n        if(1 === animDir || 3 === animDir){\r\n            this.preloadSpriteInDirection(uiScene, data, GameConst.LEFT);\r\n            this.preloadSpriteInDirection(uiScene, data, GameConst.RIGHT);\r\n        }\r\n    }\r\n\r\n    preloadSpriteInDirection(uiScene, data, direction)\r\n    {\r\n        uiScene.load.spritesheet(\r\n            this.getAnimationKey(data, direction),\r\n            this.assetsCustomActionsSpritesPath+data.animationData.img+'_'+direction+GameConst.FILES.EXTENSIONS.PNG,\r\n            data.animationData\r\n        );\r\n    }\r\n\r\n    createAnimation(data, uiScene)\r\n    {\r\n        if(\r\n            sc.hasOwn(data.animationData, ['type', 'img'])\r\n            && data.animationData.type === GameConst.ANIMATIONS_TYPE.SPRITESHEET\r\n        ){\r\n            let animDir = sc.get(data.animationData, 'dir', 0);\r\n            0 < animDir\r\n                ? this.createWithMultipleDirections(uiScene, data, animDir)\r\n                : this.createWithDirection(data, uiScene);\r\n        }\r\n        if(data.classKey && sc.isFunction(data.classKey['createAnimation'])){\r\n            data.classKey['createAnimation']({data, uiScene, pack: this});\r\n        }\r\n    }\r\n\r\n    createWithMultipleDirections(uiScene, data, animDir)\r\n    {\r\n        // @TODO - BETA - Refactor and implement animDir = 1 (both): up_right, up_left, down_right,\r\n        //   down_left.\r\n        uiScene.directionalAnimations[this.getAnimationKey(data)] = data.animationData.dir;\r\n        if(1 === animDir || 2 === animDir){\r\n            this.createWithDirection(data, uiScene, GameConst.UP);\r\n            this.createWithDirection(data, uiScene, GameConst.DOWN);\r\n        }\r\n        if(1 === animDir || 3 === animDir){\r\n            this.createWithDirection(data, uiScene, GameConst.LEFT);\r\n            this.createWithDirection(data, uiScene, GameConst.RIGHT);\r\n        }\r\n    }\r\n\r\n    createWithDirection(data, uiScene, direction = '')\r\n    {\r\n        let animationCreateData = this.prepareAnimationData(data, uiScene, direction);\r\n        if(this.gameManager.createdAnimations[animationCreateData.key]){\r\n            return this.gameManager.createdAnimations[animationCreateData.key];\r\n        }\r\n        let newAnimation = uiScene.anims.create(animationCreateData);\r\n        if(sc.hasOwn(data.animationData, 'destroyTime')){\r\n            newAnimation.destroyTime = data.animationData.destroyTime;\r\n        }\r\n        if(sc.hasOwn(data.animationData, 'depthByPlayer')){\r\n            newAnimation.depthByPlayer = data.animationData.depthByPlayer;\r\n        }\r\n        this.gameManager.createdAnimations[animationCreateData.key] = newAnimation;\r\n        return this.gameManager.createdAnimations[animationCreateData.key];\r\n    }\r\n\r\n    prepareAnimationData(data, uiScene, direction = '')\r\n    {\r\n        // @NOTE: here we use have two keys, the animation key and the animationData.img, this is because we could have\r\n        // a single sprite with multiple attacks, and use the start and end frame to run the required one.\r\n        let imageKey = this.getAnimationKey(data, direction);\r\n        let animationCreateData = {\r\n            key: imageKey,\r\n            frames: uiScene.anims.generateFrameNumbers(imageKey, data.animationData),\r\n            hideOnComplete: sc.get(data.animationData, 'hide', true),\r\n        };\r\n        if(sc.hasOwn(data.animationData, 'duration')){\r\n            animationCreateData.duration = data.animationData.duration;\r\n        } else {\r\n            animationCreateData.frameRate = sc.get(data.animationData, 'frameRate', uiScene.configuredFrameRate);\r\n        }\r\n        if(sc.hasOwn(data.animationData, 'repeat')){\r\n            animationCreateData.repeat = data.animationData.repeat;\r\n        }\r\n        return animationCreateData;\r\n    }\r\n\r\n    getAnimationKey(data, direction = '')\r\n    {\r\n        return (data.skillKey ? data.skillKey+'_' : '')+data.key+(direction && '' !== direction ? '_'+direction : '');\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PreloaderHandler = PreloaderHandler;","/**\r\n *\r\n * Reldens - MessagesHandler\r\n *\r\n *\r\n * Main functionalities:\r\n * The MessagesHandler class is responsible for processing or queuing messages received by the gameManager.\r\n * It validates the message using the MessagesGuard class and checks if there is an active scene and player. If there\r\n * is an active scene and player, it processes the message using the skills.processMessage() method. Otherwise, it\r\n * queues the message in the skillsQueue field of the gameManager.\r\n *\r\n * Methods:\r\n * - processOrQueueMessage(message, gameManager): This method processes or queues the message received by the\r\n * gameManager. It validates the message using the MessagesGuard class and checks if there is an active scene and\r\n * player. If there is an active scene and player, it processes the message using the skills.processMessage() method.\r\n * Otherwise, it queues the message in the skillsQueue field of the gameManager.\r\n *\r\n */\r\n\r\nconst { MessagesGuard } = require('./messages-guard');\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass MessagesHandler\r\n{\r\n\r\n    static processOrQueueMessage(message, gameManager)\r\n    {\r\n        if(!MessagesGuard.validate(message)){\r\n            return false;\r\n        }\r\n        let currentScene = gameManager.getActiveScene();\r\n        if(currentScene && currentScene.player){\r\n            return gameManager.skills.processMessage(message);\r\n        }\r\n        if(!sc.hasOwn(gameManager, 'skillsQueue')){\r\n            gameManager.skillsQueue = [];\r\n        }\r\n        gameManager.skillsQueue.push(message);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MessagesHandler = MessagesHandler;\r\n","/**\r\n *\r\n * Reldens - MessagesGuard\r\n *\r\n * Main functionalities:\r\n * The MessagesGuard class is responsible for validating messages received by the server. It checks if the message\r\n * contains a valid action and if it belongs to certain categories of actions defined in the ActionsConst object.\r\n *\r\n * Methods:\r\n * - validate(message): a static method that receives a message object and returns a boolean indicating if the message\r\n * is valid or not. It checks if the message contains a valid action and if it belongs to certain categories of actions\r\n * defined in the ActionsConst object.\r\n *\r\n * Fields:\r\n * - None. However, the class uses the ActionsConst object to validate messages. This object contains constants related\r\n * to actions, messages, selectors, and snippets.\r\n *\r\n */\r\n\r\nconst { SkillConst } = require('@reldens/skills');\r\nconst { ActionsConst } = require('../constants');\r\n\r\nclass MessagesGuard\r\n{\r\n\r\n    static validate(message)\r\n    {\r\n        if(!message.act){\r\n            return false;\r\n        }\r\n        return (\r\n            0 === message.act.indexOf(SkillConst.ACTIONS_PREF)\r\n            || -1 !== message.act.indexOf(ActionsConst.ACTIONS.SUFFIX.ATTACK)\r\n            || -1 !== message.act.indexOf(ActionsConst.ACTIONS.SUFFIX.EFFECT)\r\n            || -1 !== message.act.indexOf(ActionsConst.ACTIONS.SUFFIX.HIT)\r\n        );\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MessagesGuard = MessagesGuard;\r\n","/**\r\n *\r\n * Reldens - GameManagerEnricher\r\n *\r\n * Main functionalities:\r\n * The GameManagerEnricher class is responsible for enriching the GameManager class with a ReceiverWrapper instance,\r\n * which is used to process messages related to skills. It checks if the player is the owner of the room and if the\r\n * gameManager has a skills instance. If so, it processes the messages in the skillsQueue.\r\n *\r\n * Methods:\r\n * - withReceiver(player, roomEvents, gameManager): static method that receives a player, roomEvents, and gameManager\r\n * instances. It checks if the player is the owner of the room and if the gameManager has a skills instance. If so, it\r\n * processes the messages in the skillsQueue.\r\n *\r\n */\r\n\r\nconst { ReceiverWrapper } = require('./receiver-wrapper');\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass GameManagerEnricher\r\n{\r\n    \r\n    static withReceiver(player, roomEvents, gameManager)\r\n    {\r\n        if(!player || !roomEvents || !gameManager){\r\n            Logger.error('Invalid input parameters for GameManagerEnricher.withReceiver method.');\r\n            return false;\r\n        }\r\n        if(player?.playerId !== roomEvents?.room.sessionId){\r\n            return false;\r\n        }\r\n        if(!gameManager.skills){\r\n            gameManager.skills = new ReceiverWrapper({owner: player, roomEvents, events: gameManager.events});\r\n        }\r\n        if(!gameManager.skillsQueue?.length){\r\n            return false;\r\n        }\r\n        for(let message of gameManager.skillsQueue){\r\n            gameManager.skills.processMessage(message);\r\n        }\r\n        gameManager.skillsQueue = [];\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.GameManagerEnricher = GameManagerEnricher;\r\n","/**\r\n *\r\n * Reldens - ReceiverWrapper\r\n *\r\n */\r\n\r\nconst { Receiver } = require('@reldens/skills');\r\nconst { Logger, sc } = require('@reldens/utils');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { ActionsConst } = require('../constants');\r\n\r\nclass ReceiverWrapper extends Receiver\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in ReceiverWrapper.');\r\n        }\r\n        this.gameManager = sc.get(props.roomEvents, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in ReceiverWrapper.');\r\n        }\r\n        this.room = sc.get(props.roomEvents, 'room', false);\r\n        if(!this.room){\r\n            Logger.error('Room undefined in ReceiverWrapper.');\r\n        }\r\n        this.translator = this.gameManager?.services?.translator;\r\n    }\r\n\r\n    processMessage(message)\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        let currentScene = this.gameManager.getActiveScene();\r\n        if(!currentScene || !currentScene.player){\r\n            return false;\r\n        }\r\n        super.processMessage(message);\r\n        this.playAttackOrEffectAnimation(message, currentScene);\r\n        this.playHitAnimation(message, currentScene);\r\n    }\r\n\r\n    playHitAnimation(message, currentScene)\r\n    {\r\n        if(-1 === message.act.indexOf('_hit')){\r\n            return;\r\n        }\r\n        this.runHitAnimation(message.x, message.y, currentScene, message.act);\r\n    }\r\n\r\n    playAttackOrEffectAnimation(message, currentScene)\r\n    {\r\n        let isEffect = -1 !== message.act.indexOf('_eff');\r\n        let isAttack = -1 !== message.act.indexOf('_atk');\r\n        if(!isAttack && !isEffect){\r\n            return;\r\n        }\r\n        this.events.emitSync('reldens.playerAttack', message, this.room);\r\n        let actKey = isEffect ? '_eff' : '_atk';\r\n        let animKey = message.act.substring(0, message.act.indexOf(actKey));\r\n        let {ownerSprite, targetSprite, targetType} = this.extractOwnerTargetAndType(currentScene, message);\r\n        // @TODO - BETA - Refactor to use a single play animation method and make sure the animation is valid.\r\n        let actAnimKey = sc.get(this.gameManager.config.client.skills.animations, animKey, 'default' + actKey);\r\n        if(ownerSprite && currentScene.getAnimationByKey(actAnimKey)){\r\n            let ownerAnim = currentScene.physics.add.sprite(ownerSprite.x, ownerSprite.y, actAnimKey);\r\n            ownerAnim.setDepth(200000);\r\n            // @TODO - BETA - Refactor and implement animDir = 1 (both): up_right, up_left, down_right,\r\n            //   down_left.\r\n            let playDir = '';\r\n            if(sc.hasOwn(this.gameManager.gameEngine.uiScene.directionalAnimations, actAnimKey)){\r\n                let animDir = this.gameManager.gameEngine.uiScene.directionalAnimations[actAnimKey];\r\n                playDir = (animDir === 3) ?\r\n                    (ownerSprite.x < targetSprite.x ? '_right' : '_left')\r\n                    : (ownerSprite.y < targetSprite.y ? '_down' : '_up');\r\n            }\r\n            ownerAnim.anims.play(actAnimKey + playDir, true).on('animationcomplete', () => {\r\n                ownerAnim.destroy();\r\n            });\r\n        }\r\n        if(targetSprite){\r\n            this.runHitAnimation(\r\n                targetSprite.x,\r\n                targetSprite.y,\r\n                currentScene,\r\n                animKey + '_hit',\r\n                message.target,\r\n                targetType\r\n            );\r\n        }\r\n    }\r\n\r\n    extractOwnerTargetAndType(currentScene, message)\r\n    {\r\n        if(!currentScene){\r\n            Logger.critical('Current scene not found.', currentScene, message);\r\n            return false;\r\n        }\r\n        let ownerSprite = false;\r\n        let targetSprite = false;\r\n        let targetType = ActionsConst.DATA_TYPE_VALUE_PLAYER;\r\n        let playersList = currentScene.player.players;\r\n        let objectsList = currentScene.objectsAnimations;\r\n        let isPvP = (sc.hasOwn(playersList, message.owner) && sc.hasOwn(playersList, message.target));\r\n        if(isPvP){\r\n            ownerSprite = playersList[message.owner];\r\n            targetSprite = playersList[message.target];\r\n            return {ownerSprite, targetSprite, targetType};\r\n        }\r\n        if(sc.hasOwn(objectsList, message.owner)){\r\n            ownerSprite = objectsList[message.owner].sceneSprite;\r\n            targetSprite = playersList[message.target];\r\n        }\r\n        if(sc.hasOwn(objectsList, message.target)){\r\n            targetSprite = objectsList[message.target].sceneSprite;\r\n            ownerSprite = playersList[message.owner];\r\n            targetType = ActionsConst.DATA_TYPE_VALUE_OBJECT;\r\n        }\r\n        return {ownerSprite, targetSprite, targetType};\r\n    }\r\n\r\n    runHitAnimation(x, y, currentScene, hitKey, targetKey, targetType)\r\n    {\r\n        // @TODO - BETA - Refactor.\r\n        let allAnimations = this.gameManager.config.client.skills.animations;\r\n        let hitAnimKey = sc.hasOwn(allAnimations, hitKey) ? hitKey : ActionsConst.DEFAULT_HIT_ANIMATION_KEY;\r\n        if(!currentScene.getAnimationByKey(hitAnimKey) || !sc.hasOwn(allAnimations, hitAnimKey)){\r\n            return false;\r\n        }\r\n        let targetSprite = false;\r\n        let targetSpriteId = false;\r\n        if(targetType === ActionsConst.DATA_TYPE_VALUE_PLAYER){\r\n            targetSprite = this.gameManager.getCurrentPlayer().players[targetKey];\r\n            targetSpriteId = targetSprite.playerId;\r\n        }\r\n        if(targetType === ActionsConst.DATA_TYPE_VALUE_OBJECT){\r\n            targetSprite = currentScene.objectsAnimations[targetKey];\r\n            targetSpriteId = targetKey;\r\n        }\r\n        let hitSprite = currentScene.physics.add.sprite(x, y, hitAnimKey);\r\n        hitSprite = this.setTargetSpriteDepth(targetSprite, hitAnimKey, targetSpriteId, hitSprite, allAnimations);\r\n        hitSprite.anims.play(hitAnimKey, true).on('animationcomplete', () => {\r\n            hitSprite.destroy();\r\n            if(targetSprite && sc.hasOwn(targetSprite, 'moveSprites')){\r\n                delete targetSprite.moveSprites[hitAnimKey+'_'+targetSpriteId];\r\n            }\r\n        });\r\n    }\r\n\r\n    setTargetSpriteDepth(targetSprite, hitAnimKey, targetSpriteId, hitSprite, allAnimations)\r\n    {\r\n        if(!targetSprite){\r\n            hitSprite.setDepth(300000);\r\n            return hitSprite;\r\n        }\r\n        if(sc.hasOwn(targetSprite, 'targetSprite')){\r\n            targetSprite.moveSprites[hitAnimKey + '_' + targetSpriteId] = hitSprite;\r\n        }\r\n        let animData = allAnimations[hitAnimKey];\r\n        let depth = targetSprite.depth+('above' === sc.get(animData.animationData, 'depthByPlayer', '') ? 100 : -0.1);\r\n        hitSprite.depthByPlayer = animData.animationData.depthByPlayer;\r\n        hitSprite.setDepth(depth);\r\n        return hitSprite;\r\n    }\r\n\r\n    updateLevelAndExperience(message)\r\n    {\r\n        this.gameManager.gameDom.updateContent(\r\n            ActionsConst.SELECTORS.LEVEL_LABEL,\r\n            this.translator.t(\r\n                ActionsConst.SNIPPETS.LEVEL,\r\n                {currentLevel: message.data[ActionsConst.MESSAGE.DATA.LEVEL]}\r\n            )\r\n        );\r\n        this.onLevelExperienceAdded(message);\r\n        let classPathLabel = message.data[ActionsConst.MESSAGE.DATA.CLASS_PATH_LABEL];\r\n        if(classPathLabel){\r\n            this.gameManager.gameDom.updateContent(\r\n                ActionsConst.SELECTORS.CLASS_PATH_LABEL,\r\n                this.translator.t(ActionsConst.SNIPPETS.CLASS_PATH_LABEL, {classPathLabel})\r\n            );\r\n        }\r\n        let nextLevelExperience = message.data[ActionsConst.MESSAGE.DATA.NEXT_LEVEL_EXPERIENCE];\r\n        if(nextLevelExperience){\r\n            this.gameManager.gameDom.updateContent(\r\n                ActionsConst.SELECTORS.NEXT_LEVEL_EXPERIENCE,\r\n                this.translator.t(ActionsConst.SNIPPETS.NEXT_LEVEL_EXPERIENCE, {nextLevelExperience})\r\n            );\r\n        }\r\n    }\r\n\r\n    onInitClassPathEnd(message)\r\n    {\r\n        // @NOTE: careful with messages received and double ui elements generation.\r\n        if(this.gameManager.skills && this.gameManager.skills.uiCreated){\r\n            return false;\r\n        }\r\n        this.gameManager.skills.uiCreated = true;\r\n        this.updateLevelAndExperience(message);\r\n        this.gameManager.skills.skills = message.data[ActionsConst.MESSAGE.DATA.SKILL_LEVEL];\r\n        this.gameManager.getFeature('actions').uiManager.appendSkills(message.data.skl);\r\n    }\r\n\r\n    onLevelUp(message)\r\n    {\r\n        this.updateLevelAndExperience(message);\r\n        if(sc.hasOwn(message.data, 'skl')){\r\n            Object.assign(this.gameManager.skills.skills, message.data.skl);\r\n            this.gameManager.getFeature('actions').uiManager.appendSkills(message.data.skl);\r\n        }\r\n        let levelUpAnimKey = this.getLevelUpAnimationKey(message.data.skl);\r\n        if(levelUpAnimKey){\r\n            this.playSkillPlayerAnimation(this.gameManager.getCurrentPlayer().playerId, levelUpAnimKey);\r\n        }\r\n    }\r\n\r\n    getLevelUpAnimationKey(level)\r\n    {\r\n        let animationsListObj = this.gameManager.config.client.levels.animations;\r\n        let exactKey = 'level_'+this.gameManager.playerData.avatarKey+'_'+level;\r\n        if(sc.hasOwn(animationsListObj, exactKey)){\r\n            return exactKey;\r\n        }\r\n        let avatarKey = 'level_'+this.gameManager.playerData.avatarKey;\r\n        if(sc.hasOwn(animationsListObj, avatarKey)){\r\n            return avatarKey;\r\n        }\r\n        let levelKey = 'level_'+level;\r\n        if(sc.hasOwn(animationsListObj, levelKey)){\r\n            return levelKey;\r\n        }\r\n        if(sc.hasOwn(animationsListObj, 'level_default')){\r\n            return 'level_default';\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onLevelExperienceAdded(message)\r\n    {\r\n        this.gameManager.gameDom.updateContent(\r\n            ActionsConst.SELECTORS.CURRENT_EXPERIENCE,\r\n            this.translator.t(\r\n                ActionsConst.SNIPPETS.EXPERIENCE,\r\n                {experience: message.data[ActionsConst.MESSAGE.DATA.EXPERIENCE]}\r\n            )\r\n        );\r\n    }\r\n\r\n    onSkillBeforeCast(message)\r\n    {\r\n        this.playSkillPlayerAnimation(\r\n            message.data.extraData[ActionsConst.DATA_OWNER_KEY],\r\n            this.determineCastKey(message)\r\n        );\r\n    }\r\n\r\n    determineCastKey(message)\r\n    {\r\n        let castKey = message.data.skillKey + '_cast';\r\n        if(sc.hasOwn(this.gameManager.config.client.skills.animations, castKey)){\r\n            return castKey;\r\n        }\r\n        return 'default_cast';\r\n    }\r\n\r\n    playSkillPlayerAnimation(ownerId, animationKey)\r\n    {\r\n        let currentScene = this.gameManager.getActiveScene();\r\n        let sceneAnimation = currentScene.getAnimationByKey(animationKey);\r\n        if(!sceneAnimation){\r\n            if(-1 === animationKey.indexOf('default')){\r\n                Logger.error(\r\n                    'Animation sprite not found for \"'+animationKey+'\".',\r\n                    this.gameManager.config.client.skills.animations\r\n                );\r\n            }\r\n            return false;\r\n        }\r\n        let ownerSprite = this.gameManager.getCurrentPlayer().players[ownerId];\r\n        let spriteX = ownerSprite.x;\r\n        let spriteY = ownerSprite.y;\r\n        let animationSprite = currentScene.physics.add.sprite(spriteX, spriteY, animationKey);\r\n        // the default value will be the caster depth - 1 so the animation will be played below the player.\r\n        let depth = sc.hasOwn(sceneAnimation, 'depthByPlayer') && 'above' === sceneAnimation['depthByPlayer']\r\n            ? ownerSprite.depth + 1 : ownerSprite.depth - 0.1;\r\n        animationSprite.depthByPlayer = sceneAnimation.depthByPlayer;\r\n        animationSprite.setDepth(depth);\r\n        let blockMovement = sc.get(sceneAnimation, 'blockMovement', false);\r\n        if(!blockMovement){\r\n            ownerSprite.moveSprites[animationKey+'_'+ownerSprite.playerId] = animationSprite;\r\n        }\r\n        animationSprite.anims.play(animationKey, true);\r\n        let destroyTime = sc.get(sceneAnimation, 'destroyTime', false);\r\n        if(destroyTime){\r\n            setTimeout(() => {\r\n                animationSprite.destroy();\r\n                delete ownerSprite.moveSprites[animationKey+'_'+ownerSprite.playerId];\r\n            }, destroyTime);\r\n        }\r\n    }\r\n\r\n    onSkillAfterCast(message)\r\n    {\r\n        let currentPlayer = this.gameManager.getCurrentPlayer();\r\n        if(\r\n            !sc.hasOwn(message.data.extraData, ActionsConst.DATA_OWNER_TYPE)\r\n            || !sc.hasOwn(message.data.extraData, ActionsConst.DATA_OWNER_KEY)\r\n            || message.data.extraData[ActionsConst.DATA_OWNER_TYPE] !== ActionsConst.DATA_TYPE_VALUE_PLAYER\r\n            || !sc.hasOwn(currentPlayer.players, message.data.extraData[ActionsConst.DATA_OWNER_KEY])\r\n        ){\r\n            return false;\r\n        }\r\n        let currentScene = this.gameManager.getActiveScene();\r\n        let ownerSprite = this.gameManager.getCurrentPlayer()\r\n            .players[message.data.extraData[ActionsConst.DATA_OWNER_KEY]];\r\n        let playDirection = this.getPlayDirection(message.data.extraData, ownerSprite, currentPlayer, currentScene);\r\n        if(playDirection){\r\n            ownerSprite.anims.play(ownerSprite.avatarKey+'_'+playDirection, true);\r\n            ownerSprite.anims.stop();\r\n        }\r\n    }\r\n\r\n    onSkillAttackApplyDamage(message)\r\n    {\r\n        let damageConfig = this.gameManager.config.get('client/actions/damage');\r\n        if(!damageConfig.enabled){\r\n            return false;\r\n        }\r\n        let currentPlayer = this.gameManager.getCurrentPlayer();\r\n        if(!damageConfig.showAll && message.data.extraData[ActionsConst.DATA_OWNER_KEY] !== currentPlayer.playerId){\r\n            return false;\r\n        }\r\n        let currentScene = this.gameManager.getActiveScene();\r\n        let target = currentScene.getObjectFromExtraData(\r\n            ActionsConst.DATA_OBJECT_KEY_TARGET,\r\n            message.data.extraData,\r\n            currentPlayer\r\n        );\r\n        if(!target){\r\n            return false;\r\n        }\r\n        currentScene.createFloatingText(\r\n            target.x,\r\n            target.y,\r\n            message.data.d,\r\n            damageConfig.color,\r\n            damageConfig.font,\r\n            damageConfig.fontSize,\r\n            damageConfig.duration,\r\n            damageConfig.top,\r\n            damageConfig.stroke,\r\n            damageConfig.strokeThickness,\r\n            damageConfig.shadowColor\r\n        );\r\n    }\r\n\r\n    getPlayDirection(extraData, ownerSprite, currentPlayer, currentScene)\r\n    {\r\n        let playDirection = false;\r\n        let target = currentScene.getObjectFromExtraData(ActionsConst.DATA_OBJECT_KEY_TARGET, extraData, currentPlayer);\r\n        if(!target){\r\n            return false;\r\n        }\r\n        let playX = target.x - ownerSprite.x;\r\n        let playY = target.y - ownerSprite.y;\r\n        playDirection = (playX >= 0) ? GameConst.RIGHT : GameConst.LEFT;\r\n        if(Math.abs(playX) < Math.abs(playY)){\r\n            playDirection = (playY >= 0) ? GameConst.DOWN : GameConst.UP;\r\n        }\r\n        return playDirection;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ReceiverWrapper = ReceiverWrapper;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    actions: {\r\n        selectClassPath: 'Select Your Class-Path',\r\n        currentLevel: 'Level %currentLevel',\r\n        experience: '%experience',\r\n        experienceLabel: 'XP',\r\n        classPathLabel: '%classPathLabel',\r\n        nextLevelExperience: '%nextLevelExperience'\r\n    }\r\n}\r\n","/**\r\n *\r\n * Reldens - Users Client Plugin.\r\n *\r\n */\r\n\r\nconst { LifebarUi } = require('./lifebar-ui');\r\nconst { PlayerStatsUi } = require('./player-stats-ui');\r\nconst { ActionsConst } = require('../../actions/constants');\r\nconst { GameConst } = require('../../game/constants');\r\nconst Translations = require('./snippets/en_US');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst { UsersConst } = require('../constants');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass UsersPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        this.events = sc.get(props, 'events', false);\r\n        this.initialGameData = {};\r\n        if(this.validateProperties()){\r\n            this.setTranslations();\r\n            this.listenEvents();\r\n            this.setupPlayerStatsUi();\r\n        }\r\n    }\r\n\r\n    validateProperties()\r\n    {\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in UsersPlugin.');\r\n            return false;\r\n        }\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in UsersPlugin.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    setupPlayerStatsUi()\r\n    {\r\n        this.playerStatsUi = new PlayerStatsUi({events: this.events});\r\n        this.playerStatsUi.createPlayerStatsUi();\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        this.events.on('reldens.beforeCreateEngine', (initialGameData, gameManager) => {\r\n            this.initialGameData = initialGameData;\r\n            this.onBeforeCreateEngine(initialGameData, gameManager);\r\n            if(!this.lifeBarUi){\r\n                this.lifeBarUi = new LifebarUi({events: this.events});\r\n                this.lifeBarUi.createLifeBarUi(gameManager);\r\n            }\r\n        });\r\n    }\r\n\r\n    setTranslations()\r\n    {\r\n        if(!this.events || !this.gameManager){\r\n            return false;\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations, UsersConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    onBeforeCreateEngine(initialGameData, gameManager)\r\n    {\r\n        let isMultiplayerEnabled = gameManager.config.get('client/players/multiplePlayers/enabled', false);\r\n        let isRoomSelectionDisabled = gameManager.config.get('client/rooms/selection/allowOnLogin', false);\r\n        // @TODO - BETA - If the player selection container doesn't exist we should create one.\r\n        let playersCount = sc.isTrue(initialGameData, 'players') ? Object.keys(initialGameData.players).length : 0;\r\n        // if multiplayer is disabled and the user already has a player then just allow the engine to be executed:\r\n        if(0 < playersCount && !isMultiplayerEnabled && !isRoomSelectionDisabled){\r\n            // before return set the only player available:\r\n            initialGameData.player = initialGameData.players[0];\r\n            return;\r\n        }\r\n        // for every other case we will stop the normal execution of the engine and show the selection/creation block:\r\n        gameManager.canInitEngine = false;\r\n        let playerSelection = gameManager.gameDom.getElement(GameConst.SELECTORS.PLAYER_SELECTION);\r\n        playerSelection.classList.remove('hidden');\r\n        // if multiplayer is enabled, the user already has a player it can only select the room:\r\n        if(!isMultiplayerEnabled && 1 === playersCount){\r\n            this.prepareSinglePlayerInput(playerSelection, initialGameData, gameManager);\r\n            return;\r\n        }\r\n        // if multiplayer is enabled and the user already has a player then set up the selector form:\r\n        if(isMultiplayerEnabled && 0 < playersCount){\r\n            this.preparePlayerSelector(playerSelection, initialGameData, gameManager);\r\n        }\r\n        this.preparePlayerCreator(playerSelection, initialGameData, gameManager);\r\n    }\r\n\r\n    prepareSinglePlayerInput(playerSelection, initialGameData, gameManager)\r\n    {\r\n        // @TODO - BETA - Extract all this.\r\n        let form = gameManager.gameDom.getElement(GameConst.SELECTORS.PLAYER_SELECTION_FORM);\r\n        let player = initialGameData.player;\r\n        if(!form || !player){\r\n            Logger.error('Form or player not defined in prepareSinglePlayerInput.');\r\n            return false;\r\n        }\r\n        gameManager.gameDom.getElement(GameConst.SELECTORS.PLAYER_SELECT_ELEMENT)?.remove();\r\n        let playerLabel = this.gameManager.services.translator.t(\r\n            UsersConst.SNIPPETS.OPTION_LABEL,\r\n            {\r\n                playerName: player.name,\r\n                currentLevel: player.currentLevel,\r\n                classPathLabel: player.currentClassPathLabel\r\n            }\r\n        );\r\n        let selectedPlayerHiddenInput = gameManager.gameDom.createElement('input');\r\n        selectedPlayerHiddenInput.type = 'hidden';\r\n        selectedPlayerHiddenInput.id = GameConst.SELECTORS.PLAYER_SELECT_ELEMENT;\r\n        selectedPlayerHiddenInput.value = player.id;\r\n        let playerLabelElement = gameManager.gameDom.createElement('div');\r\n        playerLabelElement.innerText = playerLabel;\r\n        form.append(selectedPlayerHiddenInput);\r\n        let playerSelectBox = gameManager.gameDom.getElement('.player-select-box');\r\n        playerSelectBox?.append(playerLabelElement);\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            playerSelection.classList.add('hidden');\r\n            this.submitSelectedPlayer(gameManager, form, selectedPlayerHiddenInput, player);\r\n            return false;\r\n        });\r\n        this.showAvatarContainer(gameManager, initialGameData, selectedPlayerHiddenInput);\r\n        form.classList.remove('hidden');\r\n    }\r\n\r\n    submitSelectedPlayer(gameManager, form, selectElement, player)\r\n    {\r\n        // @TODO - BETA - Extract all this.\r\n        gameManager.events.emitSync('reldens.onPrepareSinglePlayerSelectorFormSubmit', {\r\n            usersPlugin: this,\r\n            form,\r\n            selectElement,\r\n            player,\r\n            gameManager\r\n        });\r\n        gameManager.initEngine().catch((error) => {\r\n            Logger.error(error);\r\n            // @TODO - BETA - Add error handling here.\r\n        });\r\n    }\r\n\r\n    showAvatarContainer(gameManager, initialGameData, selectElement)\r\n    {\r\n        // @TODO - BETA - Extract all this.\r\n        let additionalInfoContainer = gameManager.gameDom.getElement(\r\n            GameConst.SELECTORS.PLAYER_SELECTION_ADDITIONAL_INFO\r\n        );\r\n        if(!additionalInfoContainer){\r\n            return;\r\n        }\r\n        if(!this.gameManager.config.getWithoutLogs('client/players/multiplePlayers/showAvatar', true)){\r\n            return;\r\n        }\r\n        let avatarContainer = gameManager.gameDom.createElement('div');\r\n        avatarContainer.className = 'avatar-container';\r\n        // @TODO - BETA - Refactor, extract all the styles and replace the avatar background by an element.\r\n        let avatar = gameManager.gameDom.createElement('div');\r\n        let avatarKey = initialGameData.player.avatarKey;\r\n        avatar.classList.add('class-path-select-avatar');\r\n        avatar.style.backgroundImage = `url('/assets/custom/sprites/${avatarKey}${GameConst.FILES.EXTENSIONS.PNG}')`;\r\n        let widthInPx = this.gameManager.config.getWithoutLogs('client/players/size/width', '0')+'px';\r\n        avatar.style.backgroundPositionX = '-'+widthInPx;\r\n        avatar.style.width = widthInPx;\r\n        avatar.style.height = this.gameManager.config.getWithoutLogs('client/players/size/height', '0')+'px';\r\n        avatarContainer.append(avatar);\r\n        additionalInfoContainer.append(avatarContainer);\r\n    }\r\n\r\n    preparePlayerSelector(playerSelection, initialGameData, gameManager)\r\n    {\r\n        let form = gameManager.gameDom.getElement(GameConst.SELECTORS.PLAYER_SELECTION_FORM);\r\n        let select = gameManager.gameDom.getElement(GameConst.SELECTORS.PLAYER_SELECT_ELEMENT);\r\n        if(!form || !select){\r\n            return false;\r\n        }\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            let selectedOption = select.options[select.selectedIndex].value;\r\n            let selectedPlayer = this.getPlayerById(initialGameData.players, Number(selectedOption));\r\n            if(selectedPlayer){\r\n                let loadingContainer = form.querySelector(GameConst.SELECTORS.LOADING_CONTAINER);\r\n                if(loadingContainer){\r\n                    loadingContainer?.classList.remove(GameConst.CLASSES.HIDDEN);\r\n                }\r\n                gameManager.initialGameData.player = selectedPlayer;\r\n                gameManager.events.emitSync('reldens.onPreparePlayerSelectorFormSubmit', {\r\n                    usersPlugin: this,\r\n                    form,\r\n                    select,\r\n                    selectedPlayer,\r\n                    gameManager\r\n                });\r\n                gameManager.initEngine().catch((error) => {\r\n                    Logger.error(error);\r\n                });\r\n            }\r\n            return false;\r\n        });\r\n        for(let i of Object.keys(initialGameData.players)){\r\n            let player = initialGameData.players[i];\r\n            let option = new Option(\r\n                this.gameManager.services.translator.t(\r\n                    UsersConst.SNIPPETS.OPTION_LABEL,\r\n                    {\r\n                        playerName: player.name,\r\n                        currentLevel: player.currentLevel,\r\n                        classPathLabel: player.currentClassPathLabel\r\n                    }\r\n                ),\r\n                player.id\r\n            );\r\n            option.dataset.key = player.avatarKey;\r\n            select.append(option);\r\n        }\r\n        this.showAvatarContainer(gameManager, initialGameData, select);\r\n        form.classList.remove('hidden');\r\n    }\r\n\r\n    preparePlayerCreator(playerSelection, initialGameData, gameManager)\r\n    {\r\n        let form = gameManager.gameDom.getElement(ActionsConst.SELECTORS.PLAYER_CREATE_FORM);\r\n        if(!form){\r\n            return;\r\n        }\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            let errorElement = gameManager.gameDom.getElement('#player-create-form .response-error');\r\n            errorElement.innerHTML = '';\r\n            let formData = new FormData(form);\r\n            let serializedForm = sc.serializeFormData(formData);\r\n            // @TODO - BETA - Make player name length configurable.\r\n            if(3 > serializedForm['new-player-name'].toString().length){\r\n                return false;\r\n            }\r\n            gameManager.submitedForm = true;\r\n            gameManager.events.emitSync('reldens.onPreparePlayerCreationFormSubmit', {\r\n                usersPlugin: this,\r\n                form,\r\n                gameManager\r\n            });\r\n            try {\r\n                gameManager.gameRoom.send('*', {act: GameConst.CREATE_PLAYER, formData: serializedForm});\r\n            } catch (error) {\r\n                Logger.critical('Create player error.', error);\r\n                gameManager.gameDom.alertReload(gameManager.services.translator.t('game.errors.connectionLost'));\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    getPlayerById(players, playerId)\r\n    {\r\n        if(0 === players.length){\r\n            return false;\r\n        }\r\n        for(let player of players){\r\n            if(player.id === playerId){\r\n                return player;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.UsersPlugin = UsersPlugin;\r\n","/**\r\n *\r\n * Reldens - LifebarUi\r\n *\r\n */\r\n\r\nconst { UsersConst } = require('../constants');\r\nconst { ActionsConst } = require('../../actions/constants');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { ObjectsConst } = require('../../objects/constants');\r\nconst { ObjectsHandler } = require('./objects-handler');\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass LifebarUi\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.events = props.events;\r\n    }\r\n\r\n    createLifeBarUi(gameManager)\r\n    {\r\n        // @TODO - BETA - General refactor, extract methods into different services.\r\n        this.barConfig = gameManager.config.get('client/ui/lifeBar');\r\n        if(!this.barConfig.enabled){\r\n            return false;\r\n        }\r\n        this.gameManager = gameManager;\r\n        this.fixedPositionX = false;\r\n        this.fixedPositionY = false;\r\n        this.barProperty = this.gameManager.config.get('client/actions/skills/affectedProperty');\r\n        this.playerSize = this.gameManager.config.get('client/players/size');\r\n        this.lifeBars = {};\r\n        this.lifeDataByKey = {};\r\n        this.listenEvents();\r\n        return this;\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        this.events.on('reldens.playerStatsUpdateAfter', (message, roomEvents) => {\r\n            this.updatePlayerLifeBar(message, roomEvents);\r\n        });\r\n        this.events.on('reldens.joinedRoom', (room) => {\r\n            this.listenMessages(room);\r\n        });\r\n        this.events.on('reldens.runPlayerAnimation', (playerEngine, playerId) => {\r\n            this.drawPlayerLifeBar(playerId);\r\n        });\r\n        this.events.on('reldens.updateGameSizeBefore', (gameEngine, newWidth, newHeight) => {\r\n            this.drawOnGameResize(newWidth, newHeight);\r\n        });\r\n        this.events.on('reldens.playersOnRemove', (player, key) => {\r\n            this.removePlayerLifeBar(key);\r\n        });\r\n        this.events.on('reldens.playerEngineAddPlayer', () => {\r\n            this.processLifeBarQueue();\r\n        });\r\n        this.events.on('reldens.createAnimationAfter', () => {\r\n            ObjectsHandler.drawObjectsLifeBar(this);\r\n        });\r\n        this.events.on('reldens.objectBodyChanged', (event) => {\r\n            ObjectsHandler.generateObjectLifeBar(event.key, this);\r\n        });\r\n        this.events.on('reldens.gameEngineShowTarget', (gameEngine, target, previousTarget) => {\r\n            this.showTargetLifeBar(target, previousTarget);\r\n        });\r\n        this.events.on('reldens.gameEngineClearTarget', (gameEngine, previousTarget) => {\r\n            this.clearPreviousBar(previousTarget);\r\n        });\r\n    }\r\n\r\n    drawOnGameResize(newWidth, newHeight)\r\n    {\r\n        if(!this.barConfig.fixedPosition){\r\n            return false;\r\n        }\r\n        this.setPlayerLifeBarFixedPosition(newWidth, newHeight);\r\n        this.drawPlayerLifeBar(this.gameManager.getCurrentPlayer().playerId);\r\n    }\r\n\r\n    clearPreviousBar(previousTarget)\r\n    {\r\n        if(\r\n            previousTarget\r\n            && sc.hasOwn(this.lifeBars, previousTarget.id)\r\n            && this.gameManager.getCurrentPlayer().playerId !== previousTarget.id\r\n        ){\r\n            this.lifeBars[previousTarget.id].destroy();\r\n        }\r\n    }\r\n\r\n    showTargetLifeBar(target, previousTarget)\r\n    {\r\n        if(!this.barConfig.showOnClick){\r\n            return false;\r\n        }\r\n        this.clearPreviousBar(previousTarget);\r\n        if(target.type === ObjectsConst.TYPE_OBJECT){\r\n            ObjectsHandler.generateObjectLifeBar(target.id, this);\r\n        }\r\n        if(target.type === GameConst.TYPE_PLAYER){\r\n            this.drawPlayerLifeBar(target.id);\r\n        }\r\n    }\r\n\r\n    barPropertyValue()\r\n    {\r\n        return this.barProperty + 'Value';\r\n    }\r\n\r\n    barPropertyTotal()\r\n    {\r\n        return this.barProperty + 'Total';\r\n    }\r\n\r\n    setPlayerLifeBarFixedPosition(newWidth, newHeight)\r\n    {\r\n        if(!newWidth || !newHeight){\r\n            let position = this.gameManager.gameEngine.getCurrentScreenSize(this.gameManager);\r\n            newWidth = position.newWidth;\r\n            newHeight = position.newHeight;\r\n        }\r\n        let {uiX, uiY} = this.gameManager.gameEngine.uiScene.getUiConfig('lifeBar', newWidth, newHeight);\r\n        this.fixedPositionX = uiX;\r\n        this.fixedPositionY = uiY;\r\n    }\r\n\r\n    updatePlayerLifeBar(message, roomEvents)\r\n    {\r\n        let currentPlayer = roomEvents.gameManager.getCurrentPlayer();\r\n        this.updatePlayerBarData(\r\n            currentPlayer.playerId,\r\n            message.statsBase[this.barProperty],\r\n            message.stats[this.barProperty]\r\n        );\r\n        this.drawPlayerLifeBar(currentPlayer.playerId);\r\n    }\r\n\r\n    listenMessages(room)\r\n    {\r\n        room.onMessage('*', (message) => {\r\n            this.listenBattleEnd(message);\r\n            this.listenLifeBarUpdates(message);\r\n        });\r\n    }\r\n\r\n    listenBattleEnd(message)\r\n    {\r\n        if(message.act !== ActionsConst.BATTLE_ENDED){\r\n            return false;\r\n        }\r\n        if(!sc.hasOwn(this.lifeBars, message.t)){\r\n            return false;\r\n        }\r\n        this.lifeBars[message.t].destroy();\r\n    }\r\n\r\n    listenLifeBarUpdates(message)\r\n    {\r\n        if(message.act !== UsersConst.ACTION_LIFEBAR_UPDATE){\r\n            return false;\r\n        }\r\n        ObjectsHandler.processObjectLifeBarMessage(message, true, this);\r\n        this.processPlayerLifeBarMessage(message, true);\r\n    }\r\n\r\n    canShowPlayerLifeBar(playerId)\r\n    {\r\n        let currentPlayer = this.gameManager.getCurrentPlayer();\r\n        if(!sc.isFunction(currentPlayer?.isDeath)){\r\n            // expected, when changing scenes the next scene could not be active yet\r\n            return false;\r\n        }\r\n        let isCurrentPlayer = playerId === currentPlayer?.playerId;\r\n        if(isCurrentPlayer && currentPlayer && (currentPlayer.isDeath() || currentPlayer.isDisabled())){\r\n            this.lifeBars[playerId]?.setVisible(false);\r\n            return false;\r\n        }\r\n        if(isCurrentPlayer){\r\n            return true;\r\n        }\r\n        if(this.barConfig.showAllPlayers){\r\n            // @TODO - BETA - Include validation for other players inState.\r\n            return true;\r\n        }\r\n        return this.barConfig.showOnClick && playerId === this.getCurrentTargetId();\r\n    }\r\n\r\n    queueLifeBarMessage(message)\r\n    {\r\n        if(!sc.hasOwn(this.gameManager, 'lifeBarQueue')){\r\n            this.gameManager.lifeBarQueue = [];\r\n        }\r\n        this.gameManager.lifeBarQueue.push(message);\r\n    }\r\n\r\n    processPlayerLifeBarMessage(message, queue = false)\r\n    {\r\n        if(ActionsConst.DATA_TYPE_VALUE_PLAYER !== message[ActionsConst.DATA_OWNER_TYPE]){\r\n            return false;\r\n        }\r\n        let currentPlayer = this.gameManager.getCurrentPlayer();\r\n        let messageOwnerKey = message[ActionsConst.DATA_OWNER_KEY];\r\n        if(!currentPlayer || !currentPlayer.players || !currentPlayer.players[messageOwnerKey]){\r\n            if(queue){\r\n                this.queueLifeBarMessage(message);\r\n            }\r\n            return false;\r\n        }\r\n        this.updatePlayerBarData(messageOwnerKey, message.totalValue, message.newValue);\r\n        if(this.canShowPlayerLifeBar(messageOwnerKey)){\r\n            this.drawPlayerLifeBar(messageOwnerKey);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    updatePlayerBarData(playerId, total, newValue)\r\n    {\r\n        let currentPlayer = this.gameManager.getCurrentPlayer();\r\n        currentPlayer.players[playerId][this.barPropertyTotal()] = total;\r\n        currentPlayer.players[playerId][this.barPropertyValue()] = newValue;\r\n    }\r\n\r\n    processLifeBarQueue()\r\n    {\r\n        if(0 === this.gameManager.lifeBarQueue.length){\r\n            return false;\r\n        }\r\n        let forDelete = [];\r\n        for(let message of this.gameManager.lifeBarQueue){\r\n            if(ObjectsHandler.processObjectLifeBarMessage(message, false, this)){\r\n                forDelete.push(message);\r\n            }\r\n            if(this.processPlayerLifeBarMessage(message, false)){\r\n                forDelete.push(message);\r\n            }\r\n        }\r\n        if(0 < forDelete.length){\r\n            this.gameManager.lifeBarQueue = this.gameManager.lifeBarQueue.filter(item => !forDelete.includes(item));\r\n        }\r\n    }\r\n\r\n    drawPlayerLifeBar(playerId)\r\n    {\r\n        this.destroyByKey(playerId);\r\n        if(!this.canShowPlayerLifeBar(playerId)){\r\n            this.lifeBars[playerId]?.setVisible(false);\r\n            return false;\r\n        }\r\n        let barData = this.prepareBarData(playerId);\r\n        let barHeight = this.barConfig.height;\r\n        let barTop = this.barConfig.top;\r\n        let fullBarWidth = this.barConfig.width;\r\n        let uiX = barData.player.x - (fullBarWidth / 2);\r\n        let uiY = barData.player.y - barHeight - barTop + (barData.ownerTop/2);\r\n        if(playerId === this.gameManager.getCurrentPlayer().playerId && this.barConfig.fixedPosition){\r\n            // if the position is fixed then the bar has to go on the ui scene:\r\n            this.lifeBars[playerId] = this.gameManager.getActiveScenePreloader().add.graphics();\r\n            if(this.fixedPositionX === false || this.fixedPositionY === false){\r\n                this.setPlayerLifeBarFixedPosition();\r\n            }\r\n            uiX = this.fixedPositionX;\r\n            uiY = this.fixedPositionY;\r\n        } else {\r\n            // otherwise, the bar will be added in the current scene:\r\n            this.lifeBars[playerId] = this.gameManager.getActiveScene().add.graphics();\r\n        }\r\n        this.drawBar(this.lifeBars[playerId], barData.fullValue, barData.filledValue, uiX, uiY);\r\n        return this;\r\n    }\r\n\r\n    destroyByKey(barKey)\r\n    {\r\n        if(sc.hasOwn(this.lifeBars, barKey)){\r\n            this.lifeBars[barKey].destroy();\r\n        }\r\n    }\r\n\r\n    prepareBarData(playerId)\r\n    {\r\n        let player = this.gameManager.getCurrentPlayer().players[playerId];\r\n        let fullValue = player[this.barPropertyTotal()];\r\n        let filledValue = player[this.barPropertyValue()];\r\n        let ownerTop = sc.get(player, 'topOff', 0) - this.playerSize.height;\r\n        return {player, fullValue, filledValue, ownerTop};\r\n    }\r\n\r\n    removePlayerLifeBar(playerId)\r\n    {\r\n        if(!sc.hasOwn(this.lifeBars, playerId)){\r\n            return false;\r\n        }\r\n        this.lifeBars[playerId].destroy();\r\n        delete this.lifeBars[playerId];\r\n    }\r\n\r\n    drawBar(lifeBarGraphic, fullValue, filledValue, uiX, uiY)\r\n    {\r\n        let barHeight = this.barConfig.height;\r\n        let fullBarWidth = this.barConfig.width;\r\n        let filledBarWidth = (filledValue * fullBarWidth) / fullValue;\r\n        lifeBarGraphic.clear();\r\n        lifeBarGraphic.fillStyle(parseInt(this.barConfig.fillStyle), 1);\r\n        lifeBarGraphic.fillRect(uiX, uiY, filledBarWidth, barHeight);\r\n        lifeBarGraphic.lineStyle(1, parseInt(this.barConfig.lineStyle));\r\n        lifeBarGraphic.strokeRect(uiX, uiY, fullBarWidth, barHeight);\r\n        lifeBarGraphic.alpha = 0.6;\r\n        lifeBarGraphic.setDepth(300000);\r\n    }\r\n\r\n    getCurrentTargetId()\r\n    {\r\n        return sc.get(this.gameManager.getCurrentPlayer()?.currentTarget, 'id', false);\r\n    }\r\n\r\n    getObjectByKey(objectKey)\r\n    {\r\n        return sc.get(this.gameManager.getActiveScene()?.objectsAnimations, objectKey, false);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.LifebarUi = LifebarUi;\r\n","/**\r\n *\r\n * Reldens - UsersConst\r\n *\r\n */\r\n\r\nlet snippetsPrefix = 'users.';\r\n\r\nmodule.exports.UsersConst = {\r\n    ACTION_LIFEBAR_UPDATE: 'alu',\r\n    SNIPPETS: {\r\n        PREFIX: snippetsPrefix,\r\n        OPTION_LABEL: snippetsPrefix+'optionLabel'\r\n    },\r\n    MESSAGE: {\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'users'\r\n        }\r\n    },\r\n};\r\n","/**\r\n *\r\n * Reldens - ObjectsHandler\r\n *\r\n */\r\n\r\nconst { ActionsConst } = require('../../actions/constants');\r\nconst { GameConst } = require('../../game/constants');\r\n\r\nclass ObjectsHandler\r\n{\r\n\r\n    static processObjectLifeBarMessage(message, queue = false, lifeBarUi)\r\n    {\r\n        if(!this.isValidMessage(message, lifeBarUi)){\r\n            return false;\r\n        }\r\n        let objectKey = message[ActionsConst.DATA_OWNER_KEY];\r\n        let barData = {};\r\n        barData[lifeBarUi.barPropertyTotal()] = message.totalValue;\r\n        barData[lifeBarUi.barPropertyValue()] = message.newValue;\r\n        lifeBarUi.lifeDataByKey[objectKey] = barData;\r\n        let object = lifeBarUi.getObjectByKey(objectKey);\r\n        if(!object){\r\n            if(queue){\r\n                lifeBarUi.queueLifeBarMessage(message);\r\n            }\r\n            return false;\r\n        }\r\n        this.drawObjectLifeBar(\r\n            object,\r\n            message[ActionsConst.DATA_OWNER_KEY],\r\n            message.totalValue,\r\n            message.newValue,\r\n            lifeBarUi\r\n        );\r\n        return true;\r\n    }\r\n\r\n    static isValidMessage(message, lifeBarUi)\r\n    {\r\n        return ActionsConst.DATA_TYPE_VALUE_OBJECT === message[ActionsConst.DATA_OWNER_TYPE]\r\n            && lifeBarUi.barConfig.showEnemies;\r\n    }\r\n\r\n    static drawObjectsLifeBar(lifeBarUi)\r\n    {\r\n        for(let objectKey of Object.keys(lifeBarUi.lifeDataByKey)){\r\n            let object = lifeBarUi.getObjectByKey(objectKey);\r\n            this.drawObjectLifeBar(\r\n                object,\r\n                objectKey,\r\n                lifeBarUi.lifeDataByKey[objectKey][lifeBarUi.barPropertyTotal()],\r\n                lifeBarUi.lifeDataByKey[objectKey][lifeBarUi.barPropertyValue()],\r\n                lifeBarUi\r\n            );\r\n        }\r\n    }\r\n\r\n    static isValidToDraw(object, key, lifeBarUi)\r\n    {\r\n        if(!object){\r\n            return false;\r\n        }\r\n        if(GameConst.STATUS.DEATH === object.inState || GameConst.STATUS.DISABLED === object.inState){\r\n            return false;\r\n        }\r\n        return !(lifeBarUi.barConfig.showOnClick && key !== lifeBarUi.getCurrentTargetId());\r\n    }\r\n\r\n    static generateObjectLifeBar(objectKey, lifeBarUi)\r\n    {\r\n        let lifeBarData = lifeBarUi.lifeDataByKey[objectKey];\r\n        if(!lifeBarData){\r\n            return false;\r\n        }\r\n        let object = lifeBarUi.getObjectByKey(objectKey);\r\n        this.drawObjectLifeBar(\r\n            object,\r\n            objectKey,\r\n            lifeBarData[lifeBarUi.barPropertyTotal()],\r\n            lifeBarData[lifeBarUi.barPropertyValue()],\r\n            lifeBarUi\r\n        );\r\n    }\r\n\r\n    static drawObjectLifeBar(object, objectKey, totalValue, newValue, lifeBarUi)\r\n    {\r\n        lifeBarUi.destroyByKey(objectKey);\r\n        if(!this.isValidToDraw(object, objectKey, lifeBarUi)){\r\n            return false;\r\n        }\r\n        this.drawLifeBarInPosition(lifeBarUi, objectKey, object, totalValue, newValue);\r\n    }\r\n\r\n    static drawLifeBarInPosition(lifeBarUi, key, object, totalValue, newValue)\r\n    {\r\n        lifeBarUi.lifeBars[key] = lifeBarUi.gameManager.getActiveScene().add.graphics();\r\n        let {x, y} = this.calculateObjectLifeBarPosition(object, lifeBarUi);\r\n        lifeBarUi.drawBar(lifeBarUi.lifeBars[key], totalValue, newValue, x, y);\r\n    }\r\n\r\n   static calculateObjectLifeBarPosition(object, lifeBarUi)\r\n    {\r\n        return {\r\n            x: object.x - (object.sceneSprite.width / 2),\r\n            y: object.y - (object.sceneSprite.height / 2) - lifeBarUi.barConfig.height - lifeBarUi.barConfig.top\r\n        };\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ObjectsHandler = ObjectsHandler;","/**\r\n *\r\n * Reldens - PlayerStatsUi\r\n *\r\n */\r\n\r\nclass PlayerStatsUi\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.events = props.events;\r\n    }\r\n\r\n    createPlayerStatsUi()\r\n    {\r\n        this.events.on('reldens.beforePreloadUiScene', (uiScene) => {\r\n            if(!uiScene.gameManager.config.get('client/ui/playerStats/enabled')){\r\n                return false;\r\n            }\r\n            uiScene.load.html('playerStats', '/assets/html/ui-player-stats.html');\r\n            uiScene.load.html('playerStat', '/assets/html/player-stat.html');\r\n        });\r\n        this.events.on('reldens.beforeCreateUiScene', (uiScene) => {\r\n            // @TODO - BETA - Replace by UserInterface.\r\n            let statsUi = uiScene.getUiConfig('playerStats');\r\n            if(!statsUi.enabled){\r\n                return false;\r\n            }\r\n            let dialogBox = uiScene.add.dom(statsUi.uiX, statsUi.uiY).createFromCache('playerStats');\r\n            // @TODO - BETA - Replace all \"getChildByProperty\" by gameDom.getElement() method.\r\n            let closeButton = dialogBox.getChildByProperty('id', 'player-stats-close');\r\n            let openButton = dialogBox.getChildByProperty('id', 'player-stats-open');\r\n            openButton?.addEventListener('click', () => {\r\n                let dialogContainer = dialogBox.getChildByProperty('id', 'player-stats-ui');\r\n                // @TODO - BETA - Replace styles by classes.\r\n                dialogContainer.style.display = 'block';\r\n                openButton.style.display = 'none';\r\n                dialogBox.setDepth(4);\r\n                this.events.emit('reldens.openUI', {ui: this, openButton, dialogBox, dialogContainer, uiScene});\r\n            });\r\n            closeButton?.addEventListener('click', () => {\r\n                let dialogContainer = dialogBox.getChildByProperty('id', 'player-stats-ui');\r\n                // @TODO - BETA - Replace styles by classes.\r\n                dialogContainer.style.display = 'none';\r\n                if(openButton){\r\n                    openButton.style.display = 'block';\r\n                }\r\n                dialogBox.setDepth(1);\r\n                this.events.emit(\r\n                    'reldens.closeUI',\r\n                    {ui: this, closeButton, openButton, dialogBox, dialogContainer, uiScene}\r\n                );\r\n            });\r\n            uiScene.elementsUi['playerStats'] = dialogBox;\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PlayerStatsUi = PlayerStatsUi;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    users: {\r\n        optionLabel: '%playerName - LvL %currentLevel - %classPathLabel'\r\n    }\r\n}\r\n","/**\r\n *\r\n * Reldens - Audio Client Plugin\r\n *\r\n */\r\n\r\nconst { AudioManager } = require('./manager');\r\nconst { SceneAudioPlayer } = require('./scene-audio-player');\r\nconst { MessagesListener } = require('./messages-listener');\r\nconst { AudioUi } = require('./audio-ui');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst Translations = require('./snippets/en_US');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { AudioConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass AudioPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in AudioPlugin.');\r\n        }\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in AudioPlugin.');\r\n        }\r\n        this.setTranslations();\r\n        this.messagesListener = new MessagesListener();\r\n        this.sceneAudioPlayer = SceneAudioPlayer;\r\n        this.initialAudiosData = {};\r\n        this.listenEvents();\r\n    }\r\n\r\n    setTranslations()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations, AudioConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        // @TODO - BETA - Extract all listeners handlers in external services.\r\n        if(!this.events){\r\n            return false;\r\n        }\r\n        this.events.on('reldens.joinedRoom', (room, gameManager) => {\r\n            this.initializeAudioManager(gameManager);\r\n            this.messagesListener.listenMessages(room, gameManager);\r\n        });\r\n        this.events.on('reldens.preloadUiScene', async (preloadScene) => {\r\n            preloadScene.load.html('audio', '/assets/html/ui-audio.html');\r\n            preloadScene.load.html('audio-category', '/assets/html/ui-audio-category-row.html');\r\n        });\r\n        this.events.on('reldens.createUiScene', (preloadScene) => {\r\n            this.uiManager = new AudioUi(preloadScene);\r\n            this.uiManager.createUi();\r\n        });\r\n        this.events.on('reldens.afterSceneDynamicCreate', async (sceneDynamic) => {\r\n            let audioManager = sceneDynamic.gameManager.audioManager;\r\n            if(!audioManager){\r\n                Logger.warning('Audio manager undefined in AudioPlugin.');\r\n                return false;\r\n            }\r\n            let globalAudios = sc.get(this.initialAudiosData, 'globalAudios', {});\r\n            await audioManager.loadGlobalAudios(globalAudios, sceneDynamic);\r\n            await this.messagesListener.processQueue();\r\n            this.sceneAudioPlayer.associateSceneAnimationsAudios(audioManager, sceneDynamic);\r\n            sceneDynamic.cameras.main.on('camerafadeincomplete', () => {\r\n                this.sceneAudioPlayer.playSceneAudio(audioManager, sceneDynamic);\r\n            });\r\n        });\r\n        this.events.on('reldens.changeSceneDestroyPrevious', (sceneDynamic) => {\r\n            sceneDynamic.gameManager.audioManager.destroySceneAudios();\r\n        });\r\n        this.events.on('reldens.allAudiosLoaded', (audioManager, audios, currentScene) => {\r\n            this.sceneAudioPlayer.playSceneAudio(audioManager, currentScene, true);\r\n        });\r\n    }\r\n\r\n    initializeAudioManager(gameManager)\r\n    {\r\n        if(gameManager.audioManager){\r\n            return;\r\n        }\r\n        if(!gameManager.initialGameData.player){\r\n            Logger.warning('Missing initialGameData.player', gameManager.initialGameData);\r\n        }\r\n        gameManager.audioManager = new AudioManager({\r\n            events: this.events,\r\n            currentPlayerData: gameManager.initialGameData.player\r\n        });\r\n        gameManager.audioManager.updateDefaultConfig(\r\n            gameManager.config.getWithoutLogs('client/general/audio/defaultAudioConfig')\r\n        );\r\n        this.initialAudiosData = sc.get(gameManager.initialGameData, 'audio', {});\r\n    }\r\n}\r\n\r\nmodule.exports.AudioPlugin = AudioPlugin;\r\n","/**\r\n *\r\n * Reldens - Audio Manager\r\n *\r\n */\r\n\r\nconst { AudioConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass AudioManager\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in AudioManager.');\r\n        }\r\n        this.globalAudios = sc.get(props, 'globalAudios', {});\r\n        this.roomsAudios = sc.get(props, 'roomsAudios', {});\r\n        this.categories = sc.get(props, 'categories', {});\r\n        this.playerConfig = sc.get(props, 'playerConfig', {});\r\n        this.currentPlayerData = sc.get(props, 'currentPlayerData', {});\r\n        // @NOTE: it's important to add any been played audios here for the \"changeMuteState\" method.\r\n        this.playing = {};\r\n        this.currentMuteState = false;\r\n        this.changedMutedState = {};\r\n        this.lockedMuteState = false;\r\n        this.defaultAudioConfig = {\r\n            mute: false,\r\n            volume: 1,\r\n            rate: 1,\r\n            detune: 0,\r\n            seek: 0,\r\n            loop: true,\r\n            delay: 0\r\n        };\r\n    }\r\n\r\n    async setAudio(audioKey, enabled)\r\n    {\r\n        if(this.lockedMuteState){\r\n            Logger.info('Locked mute state to set audio.');\r\n            return false;\r\n        }\r\n        await this.events.emit('reldens.setAudio', {\r\n            audioManager: this,\r\n            categoryKey: audioKey,\r\n            enabled\r\n        });\r\n        let category = this.categories[audioKey];\r\n        this.playerConfig[category.id] = enabled ? 1 : 0;\r\n        if(!sc.hasOwn(this.playing, audioKey)){\r\n            return true;\r\n        }\r\n        let playOrStop = enabled ? 'play' : 'stop';\r\n        let playingElement = this.playing[audioKey];\r\n        if(category.single_audio && sc.isObjectFunction(playingElement, playOrStop)){\r\n            // if is single track we will stop or play the last audio:\r\n            return this.setAudioForSingleEntity(playingElement, playOrStop, audioKey, enabled);\r\n        }\r\n        return this.setAudioForElementChildren(playingElement, category, enabled);\r\n    }\r\n\r\n\r\n    setAudioForSingleEntity(playingElement, playOrStop, audioKey, enabled)\r\n    {\r\n        if(!playingElement){\r\n            Logger.error('Missing playingElement.', {audioKey, playingElement});\r\n            return false;\r\n        }\r\n        if(!playingElement.currentConfig){\r\n            // Logger.error('Possible null WebAudioSound as playingElement.', {audioKey, playingElement});\r\n            return false;\r\n        }\r\n        if(!sc.isObjectFunction(playingElement, playOrStop)){\r\n            Logger.error('Missing playOrStop method in playingElement.', {audioKey, playOrStop, playingElement});\r\n            return false;\r\n        }\r\n        try {\r\n            playingElement[playOrStop]();\r\n            playingElement.mute = !enabled;\r\n        } catch (error) {\r\n            Logger.error('PlayingElement error.', {audioKey, playOrStop, playingElement, error});\r\n        }\r\n        return true;\r\n    }\r\n\r\n    setAudioForElementChildren(playingElement, category, enabled)\r\n    {\r\n        // if is multi-track we will only stop all the audios but replay them only when the events require it:\r\n        if(category.single_audio){\r\n            return false;\r\n        }\r\n        let audioKeys = Object.keys(playingElement);\r\n        if(0 === audioKeys.length){\r\n            return false;\r\n        }\r\n        for(let i of audioKeys){\r\n            this.setAudioForSingleEntity(playingElement[i], 'stop', i, enabled);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    generateAudio(onScene, audio)\r\n    {\r\n        let soundConfig = Object.assign({}, this.defaultAudioConfig, (audio.config || {}));\r\n        if(!sc.hasOwn(onScene.cache.audio.entries.entries, audio.audio_key)){\r\n            Logger.error(\r\n                'Audio file does not exists. Audio key: ' + audio.audio_key,\r\n                onScene.cache.audio.entries.entries\r\n            );\r\n            return false;\r\n        }\r\n        let audioInstance = onScene.sound.add(audio.audio_key, soundConfig);\r\n        if(audio.markers && 0 < audio.markers.length){\r\n            for(let marker of audio.markers){\r\n                let markerConfig = Object.assign({}, soundConfig, (marker.config || {}), {\r\n                    name: marker.marker_key,\r\n                    start: marker.start,\r\n                    duration: marker.duration,\r\n                });\r\n                audioInstance.addMarker(markerConfig);\r\n            }\r\n        }\r\n        return {data: audio, audioInstance};\r\n    }\r\n\r\n    findAudio(audioKey, sceneKey)\r\n    {\r\n        let roomAudio = this.findRoomAudio(audioKey, sceneKey);\r\n        return roomAudio ? roomAudio : this.findGlobalAudio(audioKey);\r\n    }\r\n\r\n    findRoomAudio(audioKey, sceneKey)\r\n    {\r\n        if(!sc.hasOwn(this.roomsAudios, sceneKey)){\r\n            this.roomsAudios[sceneKey] = {};\r\n        }\r\n        return this.findAudioInObjectKey(audioKey, this.roomsAudios[sceneKey]);\r\n    }\r\n\r\n    findGlobalAudio(audioKey)\r\n    {\r\n        return this.findAudioInObjectKey(audioKey, this.globalAudios);\r\n    }\r\n\r\n    findAudioInObjectKey(audioKey, audiosObject)\r\n    {\r\n        if(sc.hasOwn(audiosObject, audioKey)){\r\n            return {audio: audiosObject[audioKey], marker: false};\r\n        }\r\n        let objectKeys = Object.keys(audiosObject);\r\n        if(0 === objectKeys.length){\r\n            return false;\r\n        }\r\n        for(let i of objectKeys){\r\n            let audio = audiosObject[i];\r\n            if(sc.hasOwn(audio.audioInstance.markers, audioKey)){\r\n                return {audio, marker: audioKey};\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addCategories(categories)\r\n    {\r\n        for(let category of categories){\r\n            if(!sc.hasOwn(this.categories, category.category_key)){\r\n                this.categories[category.category_key] = category;\r\n            }\r\n            if(!sc.hasOwn(this.playing, category.category_key)){\r\n                this.playing[category.category_key] = {};\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadGlobalAudios(audios, currentScene)\r\n    {\r\n        let audioKeys = Object.keys(audios);\r\n        if(0 === audioKeys.length){\r\n            return false;\r\n        }\r\n        await this.loadByKeys(audioKeys, audios, currentScene, 'globalAudios');\r\n    }\r\n\r\n    async loadAudiosInScene(audios, currentScene)\r\n    {\r\n        let audioKeys = Object.keys(audios);\r\n        if(0 === audioKeys.length){\r\n            return false;\r\n        }\r\n        if(!sc.hasOwn(this.roomsAudios, currentScene.key)){\r\n            this.roomsAudios[currentScene.key] = {};\r\n        }\r\n        await this.loadByKeys(audioKeys, audios, currentScene, 'roomsAudios');\r\n    }\r\n\r\n    async loadByKeys(audioKeys, audios, currentScene, storageKey)\r\n    {\r\n        let newAudiosCounter = 0;\r\n        for(let i of audioKeys){\r\n            let audio = audios[i];\r\n            this.removeSceneAudioByAudioKey(currentScene, audio.audio_key);\r\n            let filesArr = await this.prepareFiles(audio);\r\n            if(0 === filesArr.length){\r\n                continue;\r\n            }\r\n            let audioLoader = currentScene.load.audio(audio.audio_key, filesArr);\r\n            audioLoader.on('filecomplete', async (completedFileKey) => {\r\n                if(completedFileKey !== audio.audio_key){\r\n                    return false;\r\n                }\r\n                let generateAudio = this.generateAudio(currentScene, audio);\r\n                if(false === generateAudio){\r\n                    Logger.error('AudioLoader can not generate the audio.', {\r\n                        'Audio key:': audio.audio_key,\r\n                        'Storage key:': storageKey,\r\n                    });\r\n                    return false;\r\n                }\r\n                storageKey === 'roomsAudios'\r\n                    ? this.roomsAudios[currentScene.key][audio.audio_key] = generateAudio\r\n                    : this.globalAudios[audio.audio_key] = generateAudio;\r\n                newAudiosCounter++;\r\n                await this.fireAudioEvents(audios, currentScene, audio, newAudiosCounter);\r\n            });\r\n            audioLoader.start();\r\n        }\r\n    }\r\n\r\n    async existsFileByXMLHttpRequest(url)\r\n    {\r\n        try {\r\n            let response = await fetch(url, { method: 'HEAD' });\r\n            return response.status !== 404;\r\n        } catch (error) {\r\n            Logger.error('Error fetching:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async prepareFiles(audio)\r\n    {\r\n        let filesName = audio.files_name.split(',');\r\n        let filesArr = [];\r\n        for(let fileName of filesName){\r\n            let audioPath = AudioConst.AUDIO_BUCKET + '/' + fileName;\r\n            let testPath = await this.existsFileByXMLHttpRequest(audioPath);\r\n            if(false === testPath){\r\n                continue;\r\n            }\r\n            filesArr.push(audioPath);\r\n        }\r\n        return filesArr;\r\n    }\r\n\r\n    async fireAudioEvents(audios, currentScene, audio, newAudiosCounter)\r\n    {\r\n        await currentScene.gameManager.events.emit('reldens.audioLoaded', this, audios, currentScene, audio);\r\n        if(newAudiosCounter === audios.length){\r\n            await currentScene.gameManager.events.emit('reldens.allAudiosLoaded', this, audios, currentScene, audio);\r\n        }\r\n    }\r\n\r\n    removeAudiosFromScene(audios, currentScene)\r\n    {\r\n        if(0 === audios.length || !currentScene){\r\n            return false;\r\n        }\r\n        for(let audio of audios){\r\n            this.removeSceneAudioByAudioKey(currentScene, audio.audio_key);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    removeSceneAudioByAudioKey(scene, audioKey)\r\n    {\r\n        scene.sound.removeByKey(audioKey);\r\n        if(sc.hasOwn(scene.cache.audio.entries.entries, audioKey)){\r\n            delete scene.cache.audio.entries.entries[audioKey];\r\n        }\r\n        if(sc.hasOwn(this.roomsAudios[scene.key], audioKey)){\r\n            delete this.roomsAudios[scene.key][audioKey];\r\n        }\r\n        if(sc.hasOwn(this.globalAudios, audioKey)){\r\n            delete this.globalAudios[audioKey];\r\n        }\r\n    }\r\n\r\n    updateDefaultConfig(defaultAudioConfig)\r\n    {\r\n        if(sc.isObject(defaultAudioConfig)){\r\n            Object.assign(this.defaultAudioConfig, defaultAudioConfig);\r\n        }\r\n    }\r\n\r\n    async processUpdateData(message, room, gameManager)\r\n    {\r\n        if(message.playerConfig){\r\n            this.playerConfig = message.playerConfig;\r\n        }\r\n        if(message.categories){\r\n            this.addCategories(message.categories);\r\n            await this.events.emit('reldens.audioManagerUpdateCategoriesLoaded', this, room, gameManager, message);\r\n        }\r\n        let audios = sc.get(message, 'audios', {});\r\n        if(0 < Object.keys(audios).length){\r\n            let currentScene = gameManager.gameEngine.scene.getScene(room.name);\r\n            await this.loadAudiosInScene(audios, currentScene);\r\n            await this.events.emit('reldens.audioManagerUpdateAudiosLoaded', this, room, gameManager, message);\r\n        }\r\n    }\r\n\r\n    async processDeleteData(message, room, gameManager)\r\n    {\r\n        if(0 === message.audios.length){\r\n            return false;\r\n        }\r\n        let currentScene = gameManager.gameEngine.scene.getScene(room.name);\r\n        this.removeAudiosFromScene(message.audios, currentScene);\r\n        await this.events.emit('reldens.audioManagerDeleteAudios', this, room, gameManager, message);\r\n    }\r\n\r\n    destroySceneAudios()\r\n    {\r\n        let playingKeys = Object.keys(this.playing);\r\n        if(0 === playingKeys.length){\r\n            return false;\r\n        }\r\n        for(let i of playingKeys){\r\n            let playingAudioCategory = this.playing[i];\r\n            let categoryData = this.categories[i];\r\n            // @TODO - BETA - Check and refactor if possible to use scene delete by key.\r\n            if(categoryData.single_audio && sc.isObjectFunction(playingAudioCategory, 'stop')){\r\n                playingAudioCategory.stop();\r\n                delete this.playing[i];\r\n                continue;\r\n            }\r\n            let playingCategoryKeys = Object.keys(playingAudioCategory);\r\n            if(!categoryData.single_audio && 0 === playingCategoryKeys.length){\r\n                continue;\r\n            }\r\n            for(let a of playingCategoryKeys){\r\n                let playingAudio = playingAudioCategory[a];\r\n                if(sc.isObjectFunction(playingAudio, 'stop')){\r\n                    playingAudio.stop();\r\n                    delete playingAudio[i];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async changeMuteState(newMuteState, newMuteLockState)\r\n    {\r\n        if(false === newMuteLockState){\r\n            this.lockedMuteState = false;\r\n        }\r\n        this.currentMuteState = newMuteState;\r\n        if(this.lockedMuteState && false !== newMuteLockState){\r\n            Logger.info('Locked mute state from changes.');\r\n            return false;\r\n        }\r\n        return newMuteState ? await this.muteCategories(newMuteLockState) : await this.restoreMute(newMuteLockState);\r\n    }\r\n\r\n    async muteCategories(newMuteLockState)\r\n    {\r\n        let categoriesKeys = Object.keys(this.categories);\r\n        if(0 < categoriesKeys.length){\r\n            Logger.info('Mute categories not found.');\r\n            return false;\r\n        }\r\n        for(let i of categoriesKeys){\r\n            this.changedMutedState[i] = this.currentMuteState;\r\n            await this.setAudio(i, false);\r\n        }\r\n        this.setMuteLock(newMuteLockState);\r\n        return true;\r\n    }\r\n\r\n    async restoreMute(newMuteLockState)\r\n    {\r\n        let changedKeys = Object.keys(this.changedMutedState);\r\n        if(0 === changedKeys.length){\r\n            this.setMuteLock(newMuteLockState);\r\n            return false;\r\n        }\r\n        for(let i of changedKeys){\r\n            await this.setAudio(i, true);\r\n        }\r\n        this.setMuteLock(newMuteLockState);\r\n        this.changedMutedState = {};\r\n        return true;\r\n    }\r\n\r\n    setMuteLock(newMuteLockState)\r\n    {\r\n        if(false === newMuteLockState){\r\n            this.lockedMuteState = false;\r\n        }\r\n        if(true === newMuteLockState){\r\n            this.lockedMuteState = true;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.AudioManager = AudioManager;\r\n","/**\r\n *\r\n * Reldens - AudioConst\r\n *\r\n */\r\n\r\nmodule.exports.AudioConst = {\r\n    AUDIO_UPDATE: 'ap',\r\n    AUDIO_DELETE: 'ad',\r\n    AUDIO_ANIMATION_KEY_START: 'i_',\r\n    AUDIO_ANIMATION_KEY_UPDATE: 'u_',\r\n    AUDIO_ANIMATION_KEY_COMPLETE: 'c_',\r\n    AUDIO_ANIMATION_KEY_REPEAT: 'r_',\r\n    AUDIO_ANIMATION_KEY_STOP: 's_',\r\n    AUDIO_BUCKET: '/assets/audio',\r\n    MESSAGE: {\r\n        DATA: {\r\n            UPDATE_TYPE: 'ck',\r\n            UPDATE_VALUE: 'uv'\r\n        },\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'audio'\r\n        }\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - SceneAudioPlayer.\r\n *\r\n */\r\n\r\nconst { AudioConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass SceneAudioPlayer\r\n{\r\n\r\n    playSceneAudio(audioManager, sceneDynamic, forcePlay)\r\n    {\r\n        let sceneAudio = sceneDynamic['associatedAudio'];\r\n        if(\r\n            forcePlay !== true\r\n            && (sceneAudio === false || (sceneAudio && sceneAudio.audio.audioInstance.isPlaying))\r\n        ){\r\n            return false;\r\n        }\r\n        sceneDynamic['associatedAudio'] = audioManager.findAudio(sceneDynamic.key, sceneDynamic.key);\r\n        if(sceneDynamic['associatedAudio']){\r\n            this.playSpriteAudio(sceneDynamic['associatedAudio'], sceneDynamic, false, audioManager);\r\n            return sceneDynamic['associatedAudio'];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    associateSceneAnimationsAudios(audioManager, sceneDynamic)\r\n    {\r\n        sceneDynamic.cameras.main.on('camerafadeincomplete', () => {\r\n            if(sceneDynamic.children.list.length <= 0){\r\n                return false;\r\n            }\r\n            for(let sprite of sceneDynamic.children.list){\r\n                if(sprite.type !== 'Sprite'){\r\n                    continue;\r\n                }\r\n                sprite.on('animationstart', (event) => {\r\n                    let animationKey = AudioConst.AUDIO_ANIMATION_KEY_START+event.key;\r\n                    let associatedAudio = this.attachAudioToSprite(sprite, animationKey, audioManager, sceneDynamic);\r\n                    if(false !== associatedAudio){\r\n                        this.playSpriteAudio(associatedAudio, sceneDynamic, sprite, audioManager);\r\n                    }\r\n                });\r\n                sprite.on('animationupdate', (event) => {\r\n                    let animationKey = AudioConst.AUDIO_ANIMATION_KEY_UPDATE+event.key;\r\n                    let associatedAudio = this.attachAudioToSprite(sprite, animationKey, audioManager, sceneDynamic);\r\n                    if(false !== associatedAudio){\r\n                        this.playSpriteAudio(associatedAudio, sceneDynamic, sprite, audioManager);\r\n                    }\r\n                });\r\n                sprite.on('animationcomplete', (event) => {\r\n                    let animationKey = AudioConst.AUDIO_ANIMATION_KEY_COMPLETE+event.key;\r\n                    let associatedAudio = this.attachAudioToSprite(sprite, animationKey, audioManager, sceneDynamic);\r\n                    if(false !== associatedAudio){\r\n                        this.playSpriteAudio(associatedAudio, sceneDynamic, sprite, audioManager);\r\n                    }\r\n                });\r\n                sprite.on('animationrepeat', (event) => {\r\n                    let animationKey = AudioConst.AUDIO_ANIMATION_KEY_REPEAT+event.key;\r\n                    let associatedAudio = this.attachAudioToSprite(sprite, animationKey, audioManager, sceneDynamic);\r\n                    if(false !== associatedAudio){\r\n                        this.playSpriteAudio(associatedAudio, sceneDynamic, sprite, audioManager);\r\n                    }\r\n                });\r\n                sprite.on('animationstop', (event) => {\r\n                    let animationKey = AudioConst.AUDIO_ANIMATION_KEY_STOP+event.key;\r\n                    let associatedAudio = this.attachAudioToSprite(sprite, animationKey, audioManager, sceneDynamic);\r\n                    if(false !== associatedAudio){\r\n                        this.playSpriteAudio(associatedAudio, sceneDynamic, sprite, audioManager);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    attachAudioToSprite(sprite, animationAudioKey, audioManager, sceneDynamic)\r\n    {\r\n        if(sc.hasOwn(sprite.associatedAudio, animationAudioKey)){\r\n            return sprite.associatedAudio[animationAudioKey];\r\n        }\r\n        if(!sc.hasOwn(sprite, 'associatedAudio')){\r\n            sprite.associatedAudio = {};\r\n        }\r\n        if(!sc.hasOwn(sprite.associatedAudio, animationAudioKey)){\r\n            sprite.associatedAudio[animationAudioKey] = audioManager.findAudio(animationAudioKey, sceneDynamic.key);\r\n        }\r\n        return sprite.associatedAudio[animationAudioKey];\r\n    }\r\n\r\n    playSpriteAudio(associatedAudio, sceneDynamic, sprite, audioManager)\r\n    {\r\n        let currentPlayerId = Number(audioManager.currentPlayerData.id);\r\n        let spritePlayerId = Number(sc.get(sprite, 'player_id'));\r\n        //Logger.debug('Play sprite audio.', associatedAudio, sceneDynamic.key, sprite, currentPlayerId);\r\n        let isCurrentPlayerSprite = this.isCurrentPlayerSprite(spritePlayerId, currentPlayerId);\r\n        if(associatedAudio.audio.data.config?.onlyCurrentPlayer && !isCurrentPlayerSprite){\r\n            //Logger.debug('Play sprite audio avoided for current player.', associatedAudio, sceneKey);\r\n            return false;\r\n        }\r\n        let currentPlayer = sceneDynamic.player;\r\n        if(isCurrentPlayerSprite && currentPlayer && (currentPlayer.isDisabled() || currentPlayer.isDeath())){\r\n            //Logger.debug('Play sprite audio avoided for current dead player.', associatedAudio, sceneKey);\r\n            return false;\r\n        }\r\n        // @NOTE:\r\n        // - We need the status update from the actual category in the audio manager the category associated to the\r\n        // audio here is just the storage reference.\r\n        // - We need to check the category enable every time the audio could be reproduced because the user can turn\r\n        // the category on/off at any time.\r\n        if(!associatedAudio || !associatedAudio.audio || !associatedAudio.audio.data){\r\n            Logger.error('Missing associated audio data.', associatedAudio);\r\n            return false;\r\n        }\r\n        let audioCategoryKey = associatedAudio.audio.data.category.category_key;\r\n        let audioCategory = sc.get(audioManager.categories, audioCategoryKey, false);\r\n        let audioEnabled = sc.get(audioManager.playerConfig, audioCategory.id, audioCategory.enabled);\r\n        if(!audioCategory || !audioEnabled){\r\n            return false;\r\n        }\r\n        let audioInstance = associatedAudio.audio.audioInstance;\r\n        // first stop previous if is single category audio:\r\n        if(audioCategory.single_audio){\r\n            if(sc.isObjectFunction(audioManager.playing[audioCategory.category_key], 'stop')){\r\n                audioManager.playing[audioCategory.category_key].stop();\r\n            }\r\n        }\r\n        // save the new instance in the proper place and play:\r\n        // - if is single category then just in the playing property with that category key:\r\n        if(audioCategory.single_audio){\r\n            audioManager.playing[audioCategory.category_key] = audioInstance;\r\n            if(this.isMutedState(audioManager, audioCategory.category_key, audioInstance)){\r\n                return false;\r\n            }\r\n            audioInstance.mute = false;\r\n            audioInstance.play();\r\n            return true;\r\n        }\r\n        // - if is not single category:\r\n        if(!audioCategory.single_audio){\r\n            // - if it does not have a marker we save the audio instance under the tree category_key > audio_key:\r\n            if(!associatedAudio.marker){\r\n                audioManager.playing[audioCategory.category_key][associatedAudio.audio.data.audio_key] = audioInstance;\r\n                if(this.isMutedState(audioManager, audioCategory.category_key, audioInstance)){\r\n                    return false;\r\n                }\r\n                // and play the audio:\r\n                audioInstance.mute = false;\r\n                audioInstance.play();\r\n                return true;\r\n            }\r\n            // - if it has a marker we save the audio instance under the tree category_key > marker_key:\r\n            if(associatedAudio.marker){\r\n                audioManager.playing[audioCategory.category_key][associatedAudio.marker] = audioInstance;\r\n                if(this.isMutedState(audioManager, audioCategory.category_key, audioInstance)){\r\n                    return false;\r\n                }\r\n                // and play the audio passing the marker:\r\n                audioInstance.mute = false;\r\n                audioInstance.play(associatedAudio.marker);\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isCurrentPlayerSprite(spritePlayerId, currentPlayerId)\r\n    {\r\n        return spritePlayerId && spritePlayerId === currentPlayerId;\r\n    }\r\n\r\n    isMutedState(audioManager, mutedKey, audioInstance)\r\n    {\r\n        if(false === audioManager.currentMuteState){\r\n            return false;\r\n        }\r\n        Logger.info('AudioManager in muted state to play audio.', {mutedKey, audioInstance});\r\n        audioManager.changedMutedState[mutedKey] = audioManager.currentMuteState;\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.SceneAudioPlayer = new SceneAudioPlayer();\r\n","/**\r\n *\r\n * Reldens - MessagesListener.\r\n *\r\n */\r\n\r\nconst { AudioConst } = require('../constants');\r\n\r\nclass MessagesListener\r\n{\r\n\r\n    constructor()\r\n    {\r\n        this.queueMessages = [];\r\n        this.sceneReady = false;\r\n    }\r\n\r\n    listenMessages(room, gameManager)\r\n    {\r\n        room.onMessage('*', async (message) => {\r\n            await this.processMessage(message, room, gameManager);\r\n        });\r\n    }\r\n\r\n    async processQueue()\r\n    {\r\n        this.sceneReady = true;\r\n        if(0 === this.queueMessages.length){\r\n            return false;\r\n        }\r\n        for(let messageData of this.queueMessages){\r\n            let { message, room, gameManager } = messageData;\r\n            await this.processMessage(message, room, gameManager);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async processMessage(message, room, gameManager)\r\n    {\r\n        if(false === this.sceneReady){\r\n            this.queueMessages.push({message, room, gameManager});\r\n        }\r\n        if(message.act === AudioConst.AUDIO_UPDATE){\r\n            await gameManager.audioManager.processUpdateData(message, room, gameManager);\r\n        }\r\n        if(message.act === AudioConst.AUDIO_DELETE){\r\n            await gameManager.audioManager.processDeleteData(message, room, gameManager);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MessagesListener = MessagesListener;\r\n","/**\r\n *\r\n * Reldens - AudioUi\r\n *\r\n */\r\n\r\nconst { SceneAudioPlayer } = require('./scene-audio-player');\r\nconst { AudioUpdate } = require('./audio-update');\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass AudioUi\r\n{\r\n\r\n    constructor(uiScene)\r\n    {\r\n        this.uiScene = uiScene;\r\n        this.gameManager = this.uiScene.gameManager;\r\n        this.audioManager = this.gameManager.audioManager;\r\n        this.sceneAudioPlayer = SceneAudioPlayer;\r\n    }\r\n\r\n    createUi()\r\n    {\r\n        if(!this.audioManager.categories){\r\n            return;\r\n        }\r\n        let audioSettingsTemplate = this.uiScene.cache.html.get('audio');\r\n        let audioCategoryTemplate = this.uiScene.cache.html.get('audio-category');\r\n        let audioSettingsContent = this.prepareAudioSettingsContent(audioCategoryTemplate, audioSettingsTemplate);\r\n        this.gameManager.gameDom.appendToElement('#settings-dynamic', audioSettingsContent);\r\n        let audioSettingInputs = this.gameManager.gameDom.getElements('.audio-setting');\r\n        if(0 === audioSettingInputs.length){\r\n            return false;\r\n        }\r\n        for(let settingInput of audioSettingInputs){\r\n            settingInput.addEventListener('click', async (event) => {\r\n                await this.audioManager.setAudio(event.target.dataset.categoryKey, settingInput.checked);\r\n                this.gameManager.activeRoomEvents.send(new AudioUpdate(settingInput.value, settingInput.checked));\r\n                this.sceneAudioPlayer.playSceneAudio(this.audioManager, this.gameManager.getActiveScene());\r\n            });\r\n        }\r\n    }\r\n\r\n    prepareAudioSettingsContent(audioCategoryTemplate, audioSettingsTemplate)\r\n    {\r\n        let categoriesRows = this.prepareCategoriesRows(audioCategoryTemplate);\r\n        return this.gameManager.gameEngine.parseTemplate(\r\n            audioSettingsTemplate,\r\n            {\r\n                audioCategories: categoriesRows,\r\n                settingsTitle: this.gameManager.services.translator.t('audio.settingsTitle')\r\n            }\r\n        );\r\n    }\r\n\r\n    prepareCategoriesRows(audioCategoryTemplate)\r\n    {\r\n        let categoriesRows = '';\r\n        let audioCategoriesKeys = Object.keys(this.audioManager.categories);\r\n        for(let i of audioCategoriesKeys){\r\n            let audioCategory = this.audioManager.categories[i];\r\n            let audioEnabled = sc.get(this.audioManager.playerConfig, audioCategory.id, audioCategory.enabled);\r\n            categoriesRows = categoriesRows + this.gameManager.gameEngine.parseTemplate(audioCategoryTemplate, {\r\n                categoryId: audioCategory.id,\r\n                categoryLabel: audioCategory.category_label,\r\n                categoryKey: audioCategory.category_key,\r\n                categoryChecked: audioEnabled ? ' checked=\"checked\"' : ''\r\n            });\r\n        }\r\n        return categoriesRows;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.AudioUi = AudioUi;\r\n","/**\r\n *\r\n * Reldens - AudioUpdate\r\n *\r\n */\r\n\r\nconst { AudioConst } = require('../constants');\r\nconst { GameConst } = require('../../game/constants');\r\n\r\nclass AudioUpdate\r\n{\r\n\r\n    constructor(updateType, updateValue)\r\n    {\r\n        this[GameConst.ACTION_KEY] = AudioConst.AUDIO_UPDATE;\r\n        this[AudioConst.MESSAGE.DATA.UPDATE_TYPE] = updateType;\r\n        this[AudioConst.MESSAGE.DATA.UPDATE_VALUE] = updateValue;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.AudioUpdate = AudioUpdate;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    audio: {\r\n        settingsTitle: 'Audio Settings'\r\n    }\r\n}\r\n","/**\r\n *\r\n * Reldens - RoomsPlugin\r\n *\r\n */\r\n\r\nconst { ActionsConst } = require('../../actions/constants');\r\nconst { RoomsConst } = require('../constants');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass RoomsPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in RoomsPlugin.');\r\n        }\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in RoomsPlugin.');\r\n        }\r\n        this.events.on('reldens.beforeCreateEngine', (initialGameData, gameManager) => {\r\n            let isRoomSelectionDisabled = gameManager.config.get('client/rooms/selection/allowOnLogin', false);\r\n            if(isRoomSelectionDisabled && initialGameData.roomSelection){\r\n                this.populateSceneSelector(initialGameData.roomSelection, gameManager);\r\n            }\r\n        });\r\n        this.events.on('reldens.onPrepareSinglePlayerSelectorFormSubmit', (event) => {\r\n            this.appendSelectedScene(event.gameManager, event.form);\r\n        });\r\n        this.events.on('reldens.onPreparePlayerSelectorFormSubmit', (event) => {\r\n            this.appendSelectedScene(event.gameManager, event.form);\r\n        });\r\n        this.events.on('reldens.onPreparePlayerCreationFormSubmit', (event) => {\r\n            this.appendSelectedScene(event.gameManager, event.form);\r\n        });\r\n    }\r\n\r\n    populateSceneSelector(roomSelection, gameManager)\r\n    {\r\n        let playerCreationAdditional = gameManager.gameDom.getElement(\r\n            ActionsConst.SELECTORS.PLAYER_CREATION_ADDITIONAL_INFO\r\n        );\r\n        let playerSelectionAdditional = gameManager.gameDom.getElement(\r\n            ActionsConst.SELECTORS.PLAYER_SELECTION_ADDITIONAL_INFO\r\n        );\r\n        if(!playerCreationAdditional && !playerSelectionAdditional){\r\n            Logger.warning('Missing element.', {playerCreationAdditional, playerSelectionAdditional});\r\n            return false;\r\n        }\r\n        if(playerCreationAdditional){\r\n            let creationSelection = this.filterCreationRooms(roomSelection);\r\n            let div = this.createSelectorElements(gameManager, creationSelection, 'creation');\r\n            playerCreationAdditional.append(div);\r\n        }\r\n        if(playerSelectionAdditional){\r\n            let div = this.createSelectorElements(gameManager, roomSelection, 'selection');\r\n            playerSelectionAdditional.append(div);\r\n        }\r\n    }\r\n\r\n    filterCreationRooms(roomSelection)\r\n    {\r\n        let creationSelection = [];\r\n        for(let optionData of roomSelection){\r\n            if(optionData.name === RoomsConst.ROOM_LAST_LOCATION_KEY){\r\n                continue;\r\n            }\r\n            creationSelection.push(optionData);\r\n        }\r\n        return creationSelection;\r\n    }\r\n\r\n    appendSelectedScene(gameManager, form)\r\n    {\r\n        let sceneSelect = gameManager.gameDom.getElement('.scene-select', form);\r\n        if(!sceneSelect){\r\n            //Logger.debug('Scene selector not found by \".scene-select\".', form);\r\n            return;\r\n        }\r\n        let selectedScene = sceneSelect.options[sceneSelect.selectedIndex].value;\r\n        if(!selectedScene){\r\n            //Logger.debug('Selected scene not found.', sceneSelect, selectedScene.selectedIndex, form);\r\n            return;\r\n        }\r\n        gameManager.initialGameData.selectedScene = selectedScene;\r\n    }\r\n\r\n    createSelectorElements(gameManager, roomSelection, key)\r\n    {\r\n        let div = gameManager.gameDom.createElement('div');\r\n        div.classList.add('input-box');\r\n        let label = gameManager.gameDom.createElement('label');\r\n        label.htmlFor = key+'SelectedScene';\r\n        label.innerText = this.gameManager.services.translator.t('game.pleaseSelectScene');\r\n        let select = gameManager.gameDom.createElement('select');\r\n        select.name = key+'SelectedScene';\r\n        select.id = key+'SelectedScene';\r\n        select.classList.add('select-element');\r\n        select.classList.add('scene-select');\r\n        for(let roomData of roomSelection){\r\n            let option = new Option(roomData.title, roomData.name);\r\n            select.append(option);\r\n        }\r\n        div.append(label);\r\n        div.append(select);\r\n        return div;\r\n    }\r\n}\r\n\r\nmodule.exports.RoomsPlugin = RoomsPlugin;\r\n","/**\r\n *\r\n * Reldens - Prediction Client Plugin\r\n *\r\n */\r\n\r\nconst { PredictionWorldCreator } = require('./prediction-world-creator');\r\nconst { RoomEventsOverride } = require('./room-events-override');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass PredictionPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        this.events = sc.get(props, 'events', false);\r\n        this.predictionWorldCreator = new PredictionWorldCreator();\r\n        this.roomEventsOverride = new RoomEventsOverride();\r\n        if(this.validateProperties()){\r\n            this.listenEvents();\r\n        }\r\n    }\r\n\r\n    validateProperties()\r\n    {\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in PredictionPlugin.');\r\n            return false;\r\n        }\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in PredictionPlugin.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        this.events.on('reldens.createEngineSceneDone', async (event) => {\r\n            await this.predictionWorldCreator.createSceneWorld(event.currentScene);\r\n        });\r\n        this.events.on('reldens.createdRoomsEventsInstance', (joinedFirstRoom, gameManager) => {\r\n            this.roomEventsOverride.createCurrentPlayerOverride(gameManager.activeRoomEvents);\r\n            this.roomEventsOverride.playerOnChangeOverride(gameManager.activeRoomEvents);\r\n            this.roomEventsOverride.createPlayerEngineInstanceOverride(gameManager.activeRoomEvents);\r\n            this.roomEventsOverride.createSceneInstanceOverride(gameManager.activeRoomEvents);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PredictionPlugin = PredictionPlugin;\r\n","/**\r\n *\r\n * Reldens - Prediction World Creator\r\n *\r\n */\r\n\r\nconst { CollisionsManager } = require('../../world/server/collisions-manager');\r\nconst { P2world } = require('../../world/server/p2world');\r\nconst { WorldPointsValidator } = require('../../world/world-points-validator');\r\nconst { WorldTimer } = require('../../world/world-timer');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass PredictionWorldCreator\r\n{\r\n\r\n    async createSceneWorld(scene)\r\n    {\r\n        if(!scene.experimentalClientPrediction){\r\n            return;\r\n        }\r\n        let validLayers = this.findValidLayers(scene);\r\n        let mapJson = this.cloneMapJson(scene, validLayers);\r\n        let worldData = {\r\n            sceneName: scene.key,\r\n            roomId: scene.params.roomId,\r\n            roomMap: scene.params.roomMap,\r\n            mapJson,\r\n            config: scene.configManager,\r\n            events: scene.eventsManager,\r\n            allowSimultaneous: scene.configManager.get('client/general/controls/allowSimultaneousKeys', true),\r\n            worldConfig: scene.gameManager.activeRoomEvents.roomData?.worldConfig || scene.worldConfig\r\n        };\r\n        scene.worldPrediction = this.createWorldInstance(worldData);\r\n        scene.worldPrediction.createLimits();\r\n        await scene.worldPrediction.createWorldContent({});\r\n        let currentPlayer = scene.gameManager.getCurrentPlayer();\r\n        if(!currentPlayer){\r\n            Logger.error('Current player not present for prediction.');\r\n            return;\r\n        }\r\n        let playerData = {\r\n            id: currentPlayer.playerId,\r\n            width: scene.configManager.get('client/players/physicalBody/width'),\r\n            height: scene.configManager.get('client/players/physicalBody/height'),\r\n            bodyState: currentPlayer.state\r\n            // @TODO - BETA - Check speed is required here.\r\n        };\r\n        let predictionBody = scene.worldPrediction.createPlayerBody(playerData);\r\n        predictionBody.updateBodyState = this.updateBodyStateOverride(predictionBody, currentPlayer);\r\n        currentPlayer.predictionBody = predictionBody;\r\n        scene.worldPredictionTimer = new WorldTimer({\r\n            callbacks: [() => {\r\n                if(!scene.worldPrediction){\r\n                    Logger.error('Scene World not longer exists.', scene.roomWorld);\r\n                    return;\r\n                }\r\n                scene.worldPrediction.removeBodiesFromWorld();\r\n            }]\r\n        });\r\n        scene.worldPredictionTimer.startWorldSteps(scene.worldPrediction);\r\n        scene.collisionsManager = new CollisionsManager({roomWorld: scene.worldPrediction});\r\n        currentPlayer.pointsValidator = new WorldPointsValidator(mapJson.width, mapJson.height);\r\n    }\r\n\r\n    cloneMapJson(scene, validLayers)\r\n    {\r\n        return Object.assign(\r\n            {},\r\n            (scene.cache?.tilemap?.entries?.entries[scene.tileset.name]?.data || {}),\r\n            {layers: validLayers}\r\n        );\r\n    }\r\n\r\n    findValidLayers(scene)\r\n    {\r\n        let validLayers = [];\r\n        for(let layer of scene.cache.tilemap.entries.entries[scene.tileset.name].data.layers){\r\n            if(-1 !== layer.name.indexOf('collision')){\r\n                validLayers.push(layer);\r\n            }\r\n        }\r\n        return validLayers;\r\n    }\r\n\r\n    updateBodyStateOverride(predictionBody, currentPlayer)\r\n    {\r\n        return () => {\r\n            if(!sc.hasOwn(predictionBody.bodyState, 'x') || !sc.hasOwn(predictionBody.bodyState, 'y')){\r\n                return;\r\n            }\r\n            if(!predictionBody.position[0] || !predictionBody.position[1]){\r\n                return;\r\n            }\r\n            // only update the body if it moves:\r\n            if(predictionBody.isNotMoving()){\r\n                predictionBody.bodyState.mov = false;\r\n                return;\r\n            }\r\n            // update position:\r\n            if(predictionBody.bodyState.x !== predictionBody.position[0]){\r\n                predictionBody.bodyState.x = predictionBody.position[0];\r\n            }\r\n            if(predictionBody.bodyState.y !== predictionBody.position[1]){\r\n                predictionBody.bodyState.y = predictionBody.position[1];\r\n            }\r\n            // start or stop animation:\r\n            let newStateMov = 0 !== Number(Number(predictionBody.velocity[0]).toFixed(2))\r\n                || 0 !== Number(predictionBody.velocity[1].toFixed(2));\r\n            if(predictionBody.bodyState.mov !== newStateMov){\r\n                predictionBody.bodyState.mov = newStateMov;\r\n            }\r\n            let state = {\r\n                x: predictionBody.position[0],\r\n                y: predictionBody.position[1],\r\n                dir: predictionBody.bodyState.dir\r\n            };\r\n            currentPlayer.updatePlayer(currentPlayer.playerId, {state});\r\n        };\r\n    }\r\n\r\n    createWorldInstance(worldData)\r\n    {\r\n        return new P2world(worldData);\r\n    }\r\n}\r\n\r\nmodule.exports.PredictionWorldCreator = PredictionWorldCreator;\r\n","/**\r\n *\r\n * Reldens - CollisionsManager\r\n *\r\n */\r\n\r\nconst { PhysicalBody } = require('./physical-body');\r\nconst { ErrorManager, Logger, sc } = require('@reldens/utils');\r\n\r\nclass CollisionsManager\r\n{\r\n\r\n    constructor(room)\r\n    {\r\n        this.activateCollisions(room);\r\n    }\r\n\r\n    activateCollisions(room)\r\n    {\r\n        if(!room){\r\n            return;\r\n        }\r\n        this.room = room;\r\n        if(!sc.hasOwn(this.room, 'roomWorld')){\r\n            ErrorManager.error('Room world not found.');\r\n        }\r\n        this.guestEmailDomain = this.room.config.getWithoutLogs('server/players/guestsUser/emailDomain');\r\n        // @TODO - BETA - Refactor to extract p2js as driver.\r\n        // @NOTE: postBroadphase will be used to check pairs and test overlap instead of collision, for example, a spell\r\n        // will overlap the player but not collide with it, if the spell collides with the player it will push it in\r\n        // the opposite direction because the physics engine.\r\n        this.room.roomWorld.on('postBroadphase', this.onWorldStepStart.bind(this));\r\n        this.room.roomWorld.on('preSolve', this.beforeResolveCollision.bind(this));\r\n        this.room.roomWorld.on('beginContact', this.onCollisionsBegin.bind(this));\r\n        // @NOTE: \"endContact\"  will trigger when the contact ends and not when the collision step ends.\r\n        this.room.roomWorld.on('endContact', this.onCollisionsEnd.bind(this));\r\n    }\r\n\r\n    onWorldStepStart(evt)\r\n    {\r\n        let { pairs } = evt;\r\n        // @NOTE: pairs can be a lot more than 2, these are not related to collisions pairs.\r\n        if(1 >= pairs.length){\r\n            return;\r\n        }\r\n        let bulletA = false;\r\n        let bulletB = false;\r\n        let player = false;\r\n        let roomObject = false;\r\n        for(let body of pairs){\r\n            if(body.playerId && body.pStop){\r\n                body.stopFull();\r\n            }\r\n            if(body.roomObject && body.pStop){\r\n                body.stopFull();\r\n            }\r\n            if(body.playerId){\r\n                player = body;\r\n            }\r\n            if(body.isBullet){\r\n                if(bulletA && !bulletB){\r\n                    bulletB = body;\r\n                }\r\n                if(!bulletA){\r\n                    bulletA = body;\r\n                }\r\n                body.removeInvalidStateBulletBody();\r\n            }\r\n            if(body.isRoomObject && !body.isBullet){\r\n                roomObject = body;\r\n            }\r\n        }\r\n        if(this.room.roomWorld.bulletsStopOnPlayer && player && bulletA){\r\n            player.stopFull();\r\n        }\r\n        if(this.room.roomWorld.bulletsStopOnObject && roomObject && bulletA){\r\n            roomObject.stopFull();\r\n        }\r\n        this.removeIdleBullets();\r\n    }\r\n\r\n    removeIdleBullets()\r\n    {\r\n        if(0 === this.room.roomWorld.removeBulletsStateIds.length){\r\n            return;\r\n        }\r\n        for(let stateId of this.room.roomWorld.removeBulletsStateIds){\r\n            this.room.state.removeBody(stateId);\r\n            this.room.roomWorld.removeBulletsStateIds.splice(\r\n                this.room.roomWorld.removeBulletsStateIds.indexOf(stateId),\r\n                1\r\n            );\r\n        }\r\n    }\r\n\r\n    beforeResolveCollision(evt)\r\n    {\r\n        if(!this.room.roomWorld.allowPassWallsFromBelow){\r\n            return;\r\n        }\r\n        for(let contact of evt.contactEquations){\r\n            let playerBody = this.getPlayerBody(contact);\r\n            let wallBody = this.getWallBody(contact);\r\n            if(!playerBody || !wallBody || wallBody.isWorldWall){\r\n                return;\r\n            }\r\n            if(playerBody.position[1] > wallBody.position[1]){\r\n                contact.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Collision cases:\r\n     * - player hit a player\r\n     * - player hit an object (any type, animations, NPC, etc.)\r\n     * - player hit change point\r\n     * - player hit wall\r\n     * - object hit object (bullets will hit objects)\r\n     * - object hit wall\r\n     * @param evt\r\n     * @returns {{continue: boolean, wall, objectBody}|boolean|void}\r\n     */\r\n    onCollisionsBegin(evt)\r\n    {\r\n        let bodyA = evt.bodyA,\r\n            bodyB = evt.bodyB,\r\n            playerBody = false,\r\n            otherBody = false,\r\n            roomObjectBody = false;\r\n        if(bodyA.playerId && bodyB.playerId){\r\n            return this.playerHitPlayerBegin(bodyA, bodyB);\r\n        }\r\n        if(bodyA.playerId){\r\n            playerBody = bodyA;\r\n            otherBody = bodyB;\r\n        }\r\n        if(bodyB.playerId){\r\n            playerBody = bodyB;\r\n            otherBody = bodyA;\r\n        }\r\n        if(playerBody && otherBody.isRoomObject){\r\n            return this.playerHitObjectBegin(playerBody, otherBody);\r\n        }\r\n        if(playerBody && otherBody.changeScenePoint){\r\n            return this.playerHitChangePointBegin(playerBody, otherBody);\r\n        }\r\n        if(playerBody && otherBody.isWall){\r\n            return this.playerHitWallBegin(playerBody, otherBody);\r\n        }\r\n        if(bodyA.isRoomObject && bodyB.isRoomObject){\r\n            return this.objectHitObjectBegin(bodyA, bodyB);\r\n        }\r\n        if(bodyA.isRoomObject){\r\n            roomObjectBody = bodyA;\r\n            otherBody = bodyB;\r\n        }\r\n        if(bodyB.isRoomObject){\r\n            roomObjectBody = bodyB;\r\n            otherBody = bodyA;\r\n        }\r\n        if(roomObjectBody && otherBody.isWall){\r\n            this.objectHitWallBegin(roomObjectBody, otherBody);\r\n        }\r\n    }\r\n\r\n    onCollisionsEnd(evt)\r\n    {\r\n        let bodyA = evt.bodyA,\r\n            bodyB = evt.bodyB,\r\n            playerBody = false,\r\n            otherBody = false,\r\n            roomObjectBody = false;\r\n        if(evt.bodyA.playerId && evt.bodyB.playerId){\r\n            this.playerHitPlayerEnd(evt.bodyA, evt.bodyB);\r\n        }\r\n        if(bodyA.playerId){\r\n            playerBody = bodyA;\r\n            otherBody = bodyB;\r\n        }\r\n        if(bodyB.playerId){\r\n            playerBody = bodyB;\r\n            otherBody = bodyA;\r\n        }\r\n        if(playerBody && otherBody.isRoomObject){\r\n            return this.playerHitObjectEnd(playerBody, otherBody);\r\n        }\r\n        if(playerBody && otherBody.isWall){\r\n            return this.playerHitWallEnd(playerBody, otherBody);\r\n        }\r\n        if(bodyA.isRoomObject && bodyB.isRoomObject){\r\n            this.objectHitObjectEnd(bodyA, bodyB);\r\n        }\r\n        if(bodyA.isRoomObject){\r\n            roomObjectBody = bodyA;\r\n            otherBody = bodyB;\r\n        }\r\n        if(bodyB.isRoomObject){\r\n            roomObjectBody = bodyB;\r\n            otherBody = bodyA;\r\n        }\r\n        if(roomObjectBody && otherBody.isWall){\r\n            return this.objectHitWallEnd(roomObjectBody, otherBody);\r\n        }\r\n    }\r\n\r\n    playerHitPlayerBegin(bodyA, bodyB)\r\n    {\r\n        // @NOTE: we could run specific events when a player collides with another player.\r\n        // Logger.debug('Player hit player begin.', bodyA.playerId, bodyB.playerId);\r\n        this.room.events.emit('reldens.playerHitPlayer', {bodyA, bodyB});\r\n    }\r\n\r\n    playerHitPlayerEnd(bodyA, bodyB)\r\n    {\r\n        // Logger.debug('Player hit player end.', bodyA.playerId, bodyB.playerId);\r\n        // player stops pushing a player:\r\n        bodyA.stopFull();\r\n        bodyB.stopFull();\r\n        this.room.events.emit('reldens.playerHitPlayerEnd', {bodyA, bodyB});\r\n    }\r\n\r\n    playerHitObjectBegin(playerBody, otherBody)\r\n    {\r\n        // Logger.debug('Player hit object being.', playerBody.playerId, otherBody.bodyState?.key);\r\n        this.room.events.emit('reldens.startPlayerHitObjectBegin', {playerBody, otherBody});\r\n        // if the player collides with something we need to restart the pathfinder if it was active:\r\n        this.findAlternativePath(playerBody);\r\n        // now the collision manager only run the object hit action:\r\n        if(otherBody.roomObject && sc.isFunction(otherBody.roomObject.onHit)){\r\n            otherBody.roomObject.onHit({bodyA: playerBody, bodyB: otherBody, room: this.room});\r\n        }\r\n        this.room.events.emit('reldens.endPlayerHitObjectBegin', {playerBody, otherBody});\r\n    }\r\n\r\n    playerHitObjectEnd(playerBody, otherBody)\r\n    {\r\n        // Logger.debug('Player hit object end.', playerBody.playerId, otherBody.bodyState?.key);\r\n        let result = {stopFull: true, continue: true};\r\n        this.room.events.emit('reldens.playerHitObjectEnd', {playerBody, result});\r\n        if(!result.continue){\r\n            return false;\r\n        }\r\n        playerBody.stopFull(result.stopFull);\r\n    }\r\n\r\n    playerHitWallBegin(playerBody, wallBody)\r\n    {\r\n        // Logger.debug('Player hit wall being.', playerBody.playerId);\r\n        this.room.events.emit('reldens.playerHitWallBegin', {playerBody, wallBody});\r\n    }\r\n\r\n    playerHitWallEnd(playerBody, wallBody)\r\n    {\r\n        // Logger.debug('Player hit wall end.', playerBody.playerId);\r\n        this.room.events.emit('reldens.startPlayerHitWallEnd', {playerBody, wallBody});\r\n        // @NOTE: we can use wall.material to trigger an action over the player, like:\r\n        // wall.material = lava > reduce player.hp in every step\r\n        // if the player collides with something we need to restart the pathfinder if it was active:\r\n        if(playerBody.autoMoving && 1 < playerBody.autoMoving.length){\r\n            let destPoint = playerBody.autoMoving.pop();\r\n            playerBody.moveToPoint({column: destPoint[0], row: destPoint[1]});\r\n            return;\r\n        }\r\n        if(playerBody.world && !playerBody.world.applyGravity){\r\n            playerBody.stopFull(true);\r\n        }\r\n        this.room.events.emit('reldens.endPlayerHitWallEnd', {playerBody, wallBody});\r\n    }\r\n\r\n    playerHitChangePointBegin(playerBody, changePoint)\r\n    {\r\n        // Logger.debug('Player hit change point begin.', playerBody.playerId, changePoint.changeScenePoint);\r\n        this.room.events.emit('reldens.startPlayerHitChangePoint', {collisionsManager: this, playerBody, changePoint});\r\n        playerBody.resetAuto();\r\n        // check if the player is not changing scenes already:\r\n        let isChangingScene = sc.get(playerBody, 'isChangingScene', false);\r\n        if(isChangingScene){\r\n            // @NOTE: if the player is already changing scene do nothing.\r\n            Logger.info('Player is busy for a change point: '+playerBody.playerId);\r\n            return false;\r\n        }\r\n        let playerSchema = this.room.playerBySessionIdFromState(playerBody.playerId);\r\n        let contactClient = this.room.getClientById(playerBody.playerId);\r\n        let isGuest = -1 !== contactClient.auth.email?.indexOf(this.guestEmailDomain);\r\n        if(!this.room.validateRoom(changePoint.changeScenePoint, isGuest, true)){\r\n            Logger.info('Guest Player hit change point but is not allowed to the room: '+playerSchema.state.scene);\r\n            this.room.events.emit('reldens.guestInvalidChangePoint', {\r\n                collisionsManager: this,\r\n                playerBody,\r\n                changePoint,\r\n                playerSchema,\r\n                contactClient,\r\n                isGuest\r\n            });\r\n            return false;\r\n        }\r\n        let playerPosition = {x: playerBody.position[0], y: playerBody.position[1]};\r\n        this.room.state.positionPlayer(playerBody.playerId, playerPosition);\r\n        let changeData = {prev: playerSchema.state.scene, next: changePoint.changeScenePoint};\r\n        // Logger.debug('Player \"'+playerBody.playerId+'\" hit change point.', changeData);\r\n        playerBody.isChangingScene = true;\r\n        // @NOTE: we do not need to change back the isChangingScene property back to false since in the new\r\n        // scene a new body will be created with the value set to false by default.\r\n        this.room.nextSceneInitialPosition(contactClient, changeData, playerBody).catch((error) => {\r\n            Logger.error('There was an error while setting the next scene initial position.', error);\r\n        });\r\n        this.room.events.emit('reldens.endPlayerHitChangePoint', {\r\n            collisionsManager: this,\r\n            playerSchema,\r\n            playerBody,\r\n            changePoint,\r\n            changeData\r\n        });\r\n    }\r\n\r\n    objectHitObjectBegin(bodyA, bodyB)\r\n    {\r\n        // Logger.debug('Object hit object begin.', bodyA.bodyState?.key, bodyB.bodyState?.key);\r\n        this.room.events.emit('reldens.startObjectHitObject', {bodyA, bodyB});\r\n        let aPriority = sc.hasOwn(bodyA, 'hitPriority');\r\n        let bPriority = sc.hasOwn(bodyB, 'hitPriority');\r\n        let onHitData = {bodyA: bodyA, bodyB: bodyB, room: this.room};\r\n        let priorityObject = (!aPriority && !bPriority) || (aPriority && (!bPriority || aPriority > bPriority))\r\n            ? bodyA\r\n            : bodyB;\r\n        if(priorityObject.roomObject && sc.isFunction(priorityObject.roomObject?.onHit)){\r\n            priorityObject.roomObject.onHit(onHitData);\r\n        }\r\n        if(bodyA.isBullet){\r\n            bodyA.roomObject.removeBullet(bodyA);\r\n        }\r\n        if(bodyB.isBullet){\r\n            bodyB.roomObject.removeBullet(bodyB);\r\n        }\r\n        this.findAlternativePath(bodyA);\r\n        this.findAlternativePath(bodyB);\r\n        this.room.events.emit('reldens.endObjectHitObject', {bodyA, bodyB, priorityObject});\r\n    }\r\n\r\n    objectHitObjectEnd(bodyA, bodyB)\r\n    {\r\n        // Logger.debug('Object hit object end.', bodyA.bodyState?.key, bodyB.bodyState?.key);\r\n        this.bodyFullStop(bodyA);\r\n        this.bodyFullStop(bodyB);\r\n        this.room.events.emit('reldens.objectHitObjectEnd', {bodyA, bodyB});\r\n    }\r\n\r\n    objectHitWallBegin(objectBody, wall)\r\n    {\r\n        // Logger.debug('Object hit wall begin.', objectBody.bodyState?.key);\r\n        let event = {objectBody, wall, continue: true};\r\n        this.room.events.emit('reldens.objectHitWallBegin', event);\r\n        if(!event.continue){\r\n            return event;\r\n        }\r\n        if(objectBody.isBullet){\r\n            objectBody.roomObject.removeBullet(objectBody);\r\n        }\r\n        return event;\r\n    }\r\n\r\n    objectHitWallEnd(objectBody)\r\n    {\r\n        // Logger.debug('Object hit wall end.', objectBody.bodyState?.key);\r\n        this.room.events.emit('reldens.startObjectHitWall', {objectBody});\r\n        // @NOTE: we can use wall.material to trigger an action over the player, like:\r\n        // wall.material = lava > reduce player.hp in every step\r\n        // if the player collides with something we need to restart the pathfinder if it was active:\r\n        this.resetObjectAutoMove(objectBody);\r\n        this.room.events.emit('reldens.endObjectHitWall', {objectBody});\r\n    }\r\n\r\n    bodyFullStop(body)\r\n    {\r\n        if(!body){\r\n            return false;\r\n        }\r\n        let isBodyAMoving = body.autoMoving && 0 < body.autoMoving.length;\r\n        if(!isBodyAMoving && !body.isBullet && body.isRoomObject && (body instanceof PhysicalBody)){\r\n            body.stopFull(true);\r\n        }\r\n        if(body.isBullet){\r\n            body.roomObject.removeBullet(body);\r\n        }\r\n    }\r\n\r\n    findAlternativePath(body)\r\n    {\r\n        if(!body.autoMoving || 0 === body.autoMoving.length){\r\n            return false;\r\n        }\r\n        // Logger.debug('Find alternative path for body \"'+body.bodyLogKey()+'\".');\r\n        let currentPoint = body.autoMoving.shift();\r\n        let destPoint = body.autoMoving.pop();\r\n        body.autoMoving = body.getPathFinder().findPath(currentPoint, destPoint);\r\n    }\r\n\r\n    resetObjectAutoMove(body)\r\n    {\r\n        if(!(body instanceof PhysicalBody)){\r\n            return;\r\n        }\r\n        if(!body.world){\r\n            return;\r\n        }\r\n        let lastPoint = false;\r\n        if(sc.isArray(body.autoMoving) && 0 < body.autoMoving.length){\r\n            lastPoint = body.autoMoving.pop();\r\n        }\r\n        if(!lastPoint){\r\n            return;\r\n        }\r\n        body.world.applyGravity ? body.stopFull(true) : body.stopX(true);\r\n        body.autoMovingResetRetries++;\r\n        if(body.autoMovingResetMaxRetries === body.autoMovingResetRetries){\r\n            body.autoMovingResetRetries = 0;\r\n            // Logger.debug('Reset object auto-move, returning to original point.');\r\n            return body.moveToOriginalPoint();\r\n        }\r\n        /*\r\n        Logger.debug(\r\n            'Body \"'+body.bodyLogKey()+'\" auto-move to points: '+lastPoint[0]+' / '+lastPoint[1]+'.'\r\n            +' Retries: '+body.autoMovingResetRetries+' / '+body.autoMovingResetMaxRetries\r\n        );\r\n        */\r\n        body.moveToPoint({column: lastPoint[0], row: lastPoint[1]});\r\n    }\r\n\r\n    getWallBody(evt)\r\n    {\r\n        let {bodyA, bodyB} = evt;\r\n        return bodyA && bodyA.isWall ? bodyA : (bodyB && bodyB.isWall ? bodyB : false);\r\n    }\r\n\r\n    getObjectBody(evt)\r\n    {\r\n        let {bodyA, bodyB} = evt;\r\n        return bodyA && bodyA.isRoomObject ? bodyA : (bodyB && bodyB.isRoomObject ? bodyB : false);\r\n    }\r\n\r\n    getPlayerBody(evt)\r\n    {\r\n        let {bodyA, bodyB} = evt;\r\n        return bodyA && bodyA.playerId ? bodyA : (bodyB && bodyB.playerId ? bodyB : false);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.CollisionsManager = CollisionsManager;\r\n","/**\r\n *\r\n * Reldens - PlayerBody\r\n *\r\n */\r\n\r\nconst { Body, vec2 } = require('p2');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass PhysicalBody extends Body\r\n{\r\n\r\n    constructor(options)\r\n    {\r\n        super(options);\r\n        /** @type ?BodyState **/\r\n        this.bodyState = null;\r\n        this.animationBasedOnPress = options.animationBasedOnPress;\r\n        this.diagonalHorizontal = options.diagonalHorizontal;\r\n        this.autoMoving = false;\r\n        this.pathFinder = false;\r\n        this.isChangingScene = false;\r\n        this.currentCol = false;\r\n        this.currentRow = false;\r\n        this.originalCol = false;\r\n        this.originalRow = false;\r\n        this.jumpSpeed = sc.get(options, 'jumpSpeed', 540);\r\n        this.jumpTimeMs = sc.get(options, 'jumpTimeMs', 180);\r\n        this.movementSpeed = sc.get(options, 'movementSpeed', 180);\r\n        this.speedThreshold = sc.get(options, 'speedThreshold', 0.1);\r\n        this.applySpeedThresholdOnBullets = sc.get(options, 'applySpeedThresholdOnBullets', true);\r\n        this.worldPositionPrecision = sc.get(options, 'worldPositionPrecision', 0);\r\n        this.worldSpeedPrecision = sc.get(options, 'worldSpeedPrecision', 0);\r\n        this.autoMovingResetMaxRetries = sc.get(options, 'autoMovingResetMaxRetries', 5);\r\n        this.autoMovingResetRetries = 0;\r\n        this.moveToOriginalPointWithDelay = sc.get(options, 'moveToOriginalPointWithDelay', 100);\r\n        this.moveToOriginalPointTimer = false;\r\n        this.originalSpeed = {x: 0, y: 0};\r\n        this.speedToNextMaxRetries = sc.get(options, 'speedToNextMaxRetries', 3);\r\n        this.speedToNextRetryCounter = {col: 0, row: 0, retries: 0};\r\n        this.lastSetCollisionGroup = false;\r\n        this.blockBodyStates = sc.get(options, 'blockBodyStates', [GameConst.STATUS.DISABLED, GameConst.STATUS.DEATH]);\r\n    }\r\n\r\n    integrate(dt)\r\n    {\r\n        if(-1 !== this.blockBodyStates.indexOf(this.bodyState?.inState)){\r\n            // Logger.debug('Body blocked by state.', {key: this.bodyState?.key, state: this.bodyState?.inState});\r\n            return;\r\n        }\r\n        let minv = this.invMass,\r\n            f = this.force,\r\n            pos = this.position,\r\n            velocity = this.velocity;\r\n        // save old position\r\n        vec2.copy(this.previousPosition, this.position);\r\n        this.previousAngle = this.angle;\r\n        // velocity update\r\n        if(!this.fixedRotation){\r\n            this.angularVelocity += this.angularForce * this.invInertia * dt;\r\n        }\r\n        let integrateFhMinv = vec2.create();\r\n        vec2.scale(integrateFhMinv, f, dt * minv);\r\n        vec2.multiply(integrateFhMinv, this.massMultiplier, integrateFhMinv);\r\n        vec2.add(velocity, integrateFhMinv, velocity);\r\n        // CCD\r\n        if(!this.integrateToTimeOfImpact(dt)){\r\n            let integrateVelodt = vec2.create();\r\n            // regular position update\r\n            vec2.scale(integrateVelodt, velocity, dt);\r\n            vec2.add(pos, pos, integrateVelodt);\r\n            if(!this.fixedRotation){\r\n                this.angle += this.angularVelocity * dt;\r\n            }\r\n        }\r\n        this.speedToNext();\r\n        this.aabbNeedsUpdate = true;\r\n        this.velocity[0] = Math.abs(this.velocity[0]) < 0.0001 ? 0 : sc.roundToPrecision(this.velocity[0], 4);\r\n        this.velocity[1] = Math.abs(this.velocity[1]) < 0.0001 ? 0 : sc.roundToPrecision(this.velocity[1], 4);\r\n        if(Math.abs(this.velocity[0]) < 1e-3){\r\n            this.stopX();\r\n        }\r\n        if(Math.abs(this.velocity[1]) < 1e-3){\r\n            this.stopY();\r\n        }\r\n        this.updateBodyState();\r\n    }\r\n\r\n    speedToNext()\r\n    {\r\n        if(!this.autoMoving || 0 === this.autoMoving.length){\r\n            // Logger.debug('Body \"'+this.bodyLogKey()+'\" is not autoMoving.');\r\n            this.setShapesCollisionGroup(this.originalCollisionGroup);\r\n            return;\r\n        }\r\n        if(!this.autoMoving[0]){\r\n            Logger.error('Missing autoMoving first index.');\r\n            this.setShapesCollisionGroup(this.originalCollisionGroup);\r\n            return;\r\n        }\r\n        let autoMovingCurrentCol = this.autoMoving[0][0];\r\n        let autoMovingCurrentRow = this.autoMoving[0][1];\r\n        if(\r\n            0 !== this.speedToNextRetryCounter.col && this.speedToNextRetryCounter.col === autoMovingCurrentCol\r\n            && 0!== this.speedToNextRetryCounter.row && this.speedToNextRetryCounter.row === autoMovingCurrentRow\r\n            && 0 !== this.velocity[0]\r\n            && 0 !== this.velocity[1]\r\n        ){\r\n            this.speedToNextRetryCounter.retries++;\r\n        }\r\n        if(this.speedToNextMaxRetries === this.speedToNextRetryCounter.retries){\r\n            /*\r\n            Logger.debug(\r\n                'Body \"'+this.bodyLogKey()+'\" speed to next max retries reached: '\r\n                +this.speedToNextRetryCounter.retries+' / '+this.speedToNextMaxRetries\r\n            );\r\n            */\r\n            this.speedToNextRetryCounter.col = 0;\r\n            this.speedToNextRetryCounter.row = 0;\r\n            let fromPoint = this.autoMoving.shift();\r\n            let toPoint = this.autoMoving.pop();\r\n            this.stopFull(true);\r\n            this.alignToTile();\r\n            this.autoMoving = this.getPathFinder().findPath(fromPoint, toPoint);\r\n            this.speedToNextRetryCounter.retries = 0;\r\n            return;\r\n        }\r\n        this.speedToNextRetryCounter.col = autoMovingCurrentCol;\r\n        this.speedToNextRetryCounter.row = autoMovingCurrentRow;\r\n        /*\r\n        Logger.debug(\r\n            'Body \"'+this.bodyLogKey()+'\" speed to next point from > to: '\r\n            +this.currentCol+' / '+this.currentRow+' > '+autoMovingCurrentCol+' / '+ autoMovingCurrentRow\r\n            +' - Counters col / row: '+this.speedToNextRetryCounter.col+' / '+this.speedToNextRetryCounter.row\r\n            +' - Retry: '+this.speedToNextRetryCounter.retries+' / '+this.speedToNextMaxRetries\r\n        );\r\n        */\r\n        if(this.currentCol === autoMovingCurrentCol && this.currentRow === autoMovingCurrentRow){\r\n            // if the point was reach then remove it to process the next one:\r\n            this.autoMoving.shift();\r\n            if(0 === this.autoMoving.length){\r\n                // if there are no more points to process then stop the body and reset the path:\r\n                this.stopAutoMoving();\r\n            }\r\n            return;\r\n        }\r\n        if(this.currentCol === autoMovingCurrentCol && 0 !== this.velocity[0]){\r\n            this.stopX();\r\n            // Logger.debug('Body \"'+this.bodyLogKey()+'\" speed to next stop X.');\r\n            this.alignToTile();\r\n        }\r\n        if(this.currentCol > autoMovingCurrentCol){\r\n            this.initMove(GameConst.LEFT, true);\r\n        }\r\n        if(this.currentCol < autoMovingCurrentCol){\r\n            this.initMove(GameConst.RIGHT, true);\r\n        }\r\n        if(this.currentRow === autoMovingCurrentRow && 0 !== this.velocity[1]){\r\n            this.stopY();\r\n            // Logger.debug('Body \"'+this.bodyLogKey()+'\" speed to next stop Y.');\r\n            this.alignToTile();\r\n        }\r\n        if(this.currentRow > autoMovingCurrentRow){\r\n            this.initMove(GameConst.UP, true);\r\n        }\r\n        if(this.currentRow < autoMovingCurrentRow){\r\n            this.initMove(GameConst.DOWN, true);\r\n        }\r\n        this.updateCurrentPoints();\r\n    }\r\n\r\n    stopAutoMoving()\r\n    {\r\n        this.stopFull();\r\n        this.resetAuto();\r\n        this.alignToTile();\r\n        this.setShapesCollisionGroup(this.originalCollisionGroup);\r\n        // Logger.debug('Body \"' + this.bodyLogKey() + '\" speed to next ended.');\r\n    }\r\n\r\n    alignToTile()\r\n    {\r\n        if(!this.currentCol || !this.currentRow){\r\n            this.updateCurrentPoints();\r\n        }\r\n        let targetX = this.currentCol * this.worldTileWidth;\r\n        let targetY = this.currentRow * this.worldTileHeight;\r\n        let tolerance = 0.01;\r\n        let distX = targetX - this.position[0];\r\n        let distY = targetY - this.position[1];\r\n        if(Math.abs(distX) <= tolerance && Math.abs(distY) <= tolerance){\r\n            // Logger.debug('Aligning to tile col / row: '+this.currentCol+' / '+this.currentRow, {targetX, targetY});\r\n            this.position[0] = targetX;\r\n            this.position[1] = targetY;\r\n        }\r\n    }\r\n\r\n    updateBodyState()\r\n    {\r\n        if(!sc.hasOwn(this.bodyState, 'x') || !sc.hasOwn(this.bodyState, 'y')){\r\n            return;\r\n        }\r\n        // only update the body if it moves:\r\n        if(this.isNotMoving()){\r\n            // @NOTE: careful this will overload the logs.\r\n            // Logger.debug('Body \"'+this.bodyLogKey()+'\" is not moving.');\r\n            this.bodyState.mov = false;\r\n            return;\r\n        }\r\n        let positionX = sc.roundToPrecision(this.position[0], 0);\r\n        let positionY = sc.roundToPrecision(this.position[1], 0);\r\n        if(!positionX || !positionY){\r\n            return;\r\n        }\r\n        // update position:\r\n        if(this.bodyState.x !== positionX){\r\n            // Logger.debug('Update body \"'+this.bodyLogKey()+'\" state X: '+this.bodyState.x +' / '+ positionX);\r\n            this.bodyState.x = sc.roundToPrecision(positionX, this.worldPositionPrecision);\r\n        }\r\n        if(this.bodyState.y !== positionY){\r\n            // Logger.debug('Update body \"'+this.bodyLogKey()+'\" state Y: '+this.bodyState.y +' / '+ positionY);\r\n            this.bodyState.y = sc.roundToPrecision(positionY, this.worldPositionPrecision);\r\n        }\r\n        // start or stop animation:\r\n        let speedX = sc.roundToPrecision(this.velocity[0], this.worldSpeedPrecision);\r\n        let speedY = sc.roundToPrecision(this.velocity[1], this.worldSpeedPrecision);\r\n        // Logger.debug('Body \"'+this.bodyLogKey()+'\" speed X / Y: '+speedX+' / '+speedY);\r\n        this.bodyState.mov = 0 !== speedX || 0 !== speedY;\r\n        // @NOTE: with the key word \"bullet\" we will refer to bodies that will be created, moved, and  destroyed on\r\n        // hit or that reach the world boundaries.\r\n        this.removeInvalidStateBulletBody();\r\n    }\r\n\r\n    bodyLogKey()\r\n    {\r\n        if(this.playerId){\r\n            return 'PJ-'+this.playerId;\r\n        }\r\n        return this.bodyState?.key;\r\n    }\r\n\r\n    removeInvalidStateBulletBody()\r\n    {\r\n        if(!this.isBullet){\r\n            return;\r\n        }\r\n        if(this.isOutOfWorldBounds() || this.hasInvalidSpeed()){\r\n            this.world.removeBodies.push(this);\r\n            if(this.bodyStateId){\r\n                this.world.removeBulletsStateIds.push(this.bodyStateId);\r\n            }\r\n        }\r\n    }\r\n\r\n    hasInvalidSpeed()\r\n    {\r\n        if(!this.applySpeedThresholdOnBullets && this.isBullet){\r\n            return false;\r\n        }\r\n        let bodySpeedX = this.isBullet ? this.originalSpeed.x : this.movementSpeed;\r\n        let bodySpeedY = this.isBullet ? this.originalSpeed.x : this.movementSpeed;\r\n        let minimumSpeedX = bodySpeedX * this.speedThreshold;\r\n        let minimumSpeedY = bodySpeedY * this.speedThreshold;\r\n        let speedX = Math.abs(this.velocity[0]);\r\n        if(0 < speedX && speedX < minimumSpeedX){\r\n            Logger.debug('Invalid speed, stopping X:', {speedX, minimumSpeedX});\r\n            this.stopX(true);\r\n        }\r\n        let speedY = Math.abs(this.velocity[1]);\r\n        if(0 < speedY && speedY < minimumSpeedY){\r\n            Logger.debug('Invalid speed, stopping Y.', {speedY, minimumSpeedY});\r\n            this.stopY(true);\r\n        }\r\n        return 0 === this.velocity[0] && 0 === this.velocity[1];\r\n    }\r\n\r\n    isOutOfWorldBounds()\r\n    {\r\n        return 0 > this.position[0]\r\n            || this.position[0] > (this.worldWidth * this.worldTileWidth)\r\n            || 0 > this.position[1]\r\n            || this.position[1] > (this.worldHeight * this.worldTileHeight);\r\n    }\r\n\r\n    isNotMoving()\r\n    {\r\n        // @TODO - BETA - Refactor to replace the threshold and accurately consider the normalized speed.\r\n        let minimumSpeed = this.movementSpeed * this.speedThreshold;\r\n        let velocityX = sc.roundToPrecision(this.velocity[0]);\r\n        let velocityY = sc.roundToPrecision(this.velocity[1]);\r\n        if(this.velocity[0] !== 0 && Math.abs(velocityX) < minimumSpeed){\r\n            this.position[0] = sc.roundToPrecision(this.position[0] + (0 < velocityX ? 1 : -1));\r\n            this.stopX(true);\r\n        }\r\n        if(this.velocity[1] !== 0 && Math.abs(velocityY) < minimumSpeed && !this.world.applyGravity){\r\n            this.position[1] = this.position[1] + (0 < velocityY ? 1 : -1);\r\n            this.stopY(true);\r\n        }\r\n        let positionX = sc.roundToPrecision(this.position[0], 0);\r\n        let positionY = sc.roundToPrecision(this.position[1], 0);\r\n        return this.bodyState.x === positionX && this.bodyState.y === positionY && velocityX === 0 && velocityY === 0;\r\n    }\r\n\r\n    resetAuto()\r\n    {\r\n        this.autoMoving = false;\r\n    }\r\n\r\n    initMove(direction, isAuto = false)\r\n    {\r\n        if(!isAuto){\r\n            // if user moves the player then reset the auto move.\r\n            this.resetAuto();\r\n        }\r\n        if(!this.world){\r\n            return;\r\n        }\r\n        if(this.world.allowSimultaneous){\r\n            this.simultaneousKeyPressMovement(direction);\r\n            return;\r\n        }\r\n        return this.singleKeyPressMovement(direction);\r\n    }\r\n\r\n    singleKeyPressMovement(direction)\r\n    {\r\n        // if body is moving then avoid multiple key press at the same time:\r\n        if(direction === GameConst.RIGHT && 0 === this.velocity[1]){\r\n            this.velocity[0] = this.movementSpeed;\r\n        }\r\n        if(direction === GameConst.LEFT && 0 === this.velocity[1]){\r\n            this.velocity[0] = -this.movementSpeed;\r\n        }\r\n        if(direction === GameConst.UP && 0 === this.velocity[0]){\r\n            this.moveUp(this.movementSpeed);\r\n        }\r\n        if(direction === GameConst.DOWN && 0 === this.velocity[0] && !this.world.applyGravity){\r\n            this.velocity[1] = this.movementSpeed;\r\n        }\r\n    }\r\n\r\n    simultaneousKeyPressMovement(direction)\r\n    {\r\n        if(!this.world.applyGravity){\r\n            this.simultaneousMovementDiagonalSpeedFix(direction, this.movementSpeed);\r\n            return;\r\n        }\r\n        if(direction === GameConst.RIGHT){\r\n            this.validateAndSetDirection(direction, this.diagonalHorizontal, this.velocity[1]);\r\n            this.velocity[0] = this.movementSpeed;\r\n        }\r\n        if(direction === GameConst.LEFT){\r\n            this.validateAndSetDirection(direction, this.diagonalHorizontal, this.velocity[1]);\r\n            this.velocity[0] = -this.movementSpeed;\r\n        }\r\n        if(direction === GameConst.UP){\r\n            this.validateAndSetDirection(direction, !this.diagonalHorizontal, this.velocity[0]);\r\n            this.moveUp(this.movementSpeed);\r\n        }\r\n    }\r\n\r\n    simultaneousMovementDiagonalSpeedFix(direction, speed)\r\n    {\r\n        // @TODO - BETA - calculate normalized speed once and save it in the object to avoid recalculation.\r\n        let dx = 0 === this.velocity[0] ? 0 : 0 > this.velocity[0] ? -1 : 1;\r\n        let dy = 0 === this.velocity[1] ? 0 : 0 > this.velocity[1] ? -1 : 1;\r\n        if(direction === GameConst.RIGHT){\r\n            dx = 1;\r\n        }\r\n        if(direction === GameConst.LEFT){\r\n            dx = -1;\r\n        }\r\n        if(direction === GameConst.UP){\r\n            dy = -1;\r\n        }\r\n        if(direction === GameConst.DOWN){\r\n            dy = 1;\r\n        }\r\n        let normalization = this.normalizeSpeed(dx, dy);\r\n        this.velocity[0] = speed * dx * normalization;\r\n        this.velocity[1] = speed * dy * normalization;\r\n        if(direction === GameConst.RIGHT || direction === GameConst.LEFT){\r\n            this.validateAndSetDirection(direction, this.diagonalHorizontal, this.velocity[1]);\r\n        }\r\n        if(direction === GameConst.UP || direction === GameConst.DOWN){\r\n            this.validateAndSetDirection(direction, !this.diagonalHorizontal, this.velocity[0]);\r\n        }\r\n    }\r\n\r\n    moveUp(speed)\r\n    {\r\n        if(!this.world.applyGravity){\r\n            this.velocity[1] = -speed;\r\n            return;\r\n        }\r\n        if(!this.canJump()){\r\n            return;\r\n        }\r\n        this.velocity[1] = -this.jumpSpeed;\r\n        setTimeout(() => {\r\n            this.stopY();\r\n        }, this.jumpTimeMs);\r\n    }\r\n\r\n    calculateMagnitude(x, y)\r\n    {\r\n        return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\r\n    }\r\n\r\n    checkNonZeroComponents(x, y)\r\n    {\r\n        return Math.abs(x) > 0 || Math.abs(y) > 0;\r\n    }\r\n\r\n    normalizeSpeed(x, y)\r\n    {\r\n        return this.checkNonZeroComponents(x, y) ? 1 / this.calculateMagnitude(x, y) : 0;\r\n    }\r\n\r\n    validateAndSetDirection(direction, diagonal, velocity)\r\n    {\r\n        if((this.animationBasedOnPress || this.bodyState.autoDirection) && (diagonal || 0 === velocity)){\r\n            this.bodyState.dir = direction;\r\n        }\r\n    }\r\n\r\n    stopMove()\r\n    {\r\n        this.world && this.world.applyGravity ? this.stopX() : this.stopFull();\r\n    }\r\n\r\n    stopFull(pStop = false)\r\n    {\r\n        this.velocity[0] = 0;\r\n        if(!this.world?.applyGravity){\r\n            this.velocity[1] = 0;\r\n        }\r\n        this.angularVelocity = 0;\r\n        this.angularForce = 0;\r\n        this.pStop = pStop;\r\n    }\r\n\r\n    stopX(pStop = false)\r\n    {\r\n        this.velocity[0] = 0;\r\n        this.angularVelocity = 0;\r\n        this.angularForce = 0;\r\n        this.pStop = pStop;\r\n    }\r\n\r\n    stopY(pStop = false)\r\n    {\r\n        this.velocity[1] = 0;\r\n        this.angularVelocity = 0;\r\n        this.angularForce = 0;\r\n        this.pStop = pStop;\r\n    }\r\n\r\n    moveToPoint(toPoint)\r\n    {\r\n        this.resetAuto();\r\n        this.updateCurrentPoints();\r\n        let fromPoints = [this.currentCol, this.currentRow];\r\n        let toPoints = [toPoint.column, toPoint.row];\r\n        let pathFinder = this.getPathFinder();\r\n        if(!pathFinder){\r\n            // Logger.debug('Pathfinder not set in body.', {id: this.id, key: this.bodyState?.key});\r\n            this.setShapesCollisionGroup(this.originalCollisionGroup);\r\n            return false;\r\n        }\r\n        this.autoMoving = pathFinder.findPath(fromPoints, toPoints);\r\n        if(!this.autoMoving){\r\n            this.setShapesCollisionGroup(this.originalCollisionGroup);\r\n            this.stopMove();\r\n        }\r\n        return this.autoMoving;\r\n    }\r\n\r\n    updateCurrentPoints()\r\n    {\r\n        // if the player disconnects, and it's the only one on the room the world would be destroyed at this point:\r\n        if(!this.world){\r\n            // Logger.debug('Missing world on physical body.', {id: this.id, key: this.bodyState?.key});\r\n            return;\r\n        }\r\n        let {currentCol, currentRow} = this.positionToTiles(this.position[0], this.position[1]);\r\n        if(!this.originalCol){\r\n            // Logger.debug('Setting body ID \"'+this.id+'\" (key: \"'+this.bodyState.key+'\") original col: '+currentCol);\r\n            this.originalCol = currentCol;\r\n        }\r\n        if(!this.originalRow){\r\n            // Logger.debug('Setting body ID \"'+this.id+'\" (key: \"'+this.bodyState.key+'\") original row: '+currentRow);\r\n            this.originalRow = currentRow;\r\n        }\r\n        this.currentCol = currentCol;\r\n        this.currentRow = currentRow;\r\n        return this;\r\n    }\r\n\r\n    moveToOriginalPoint()\r\n    {\r\n        if(!this.originalCol || !this.originalRow){\r\n            this.updateCurrentPoints();\r\n        }\r\n        /*\r\n        Logger.debug(\r\n            'Moving body ID \"'+this.id+'\" (key? \"'+this.bodyState.key+'\") to: '+this.currentCol+' / '+this.currentRow\r\n        );\r\n        */\r\n        if(this.disableObjectsCollisionsOnReturn){\r\n            this.setShapesCollisionGroup(0);\r\n        }\r\n        // stop any current movement before starting a new one:\r\n        this.stopFull();\r\n        if(0 === this.moveToOriginalPointWithDelay){\r\n            this.moveToPoint({column: this.originalCol, row: this.originalRow});\r\n            return;\r\n        }\r\n        // introduce a small delay to ensure collision has resolved:\r\n        this.moveToOriginalPointTimer = setTimeout(() => {\r\n            this.moveToPoint({column: this.originalCol, row: this.originalRow});\r\n        }, this.moveToOriginalPointWithDelay);\r\n    }\r\n\r\n    setShapesCollisionGroup(collisionGroup)\r\n    {\r\n        if(this.lastSetCollisionGroup === collisionGroup){\r\n            return;\r\n        }\r\n        this.lastSetCollisionGroup = collisionGroup;\r\n        for(let shape of this.shapes){\r\n            // Logger.debug('Set collision group on \"'+this.bodyLogKey()+'\": '+collisionGroup);\r\n            shape.collisionGroup = collisionGroup;\r\n        }\r\n    }\r\n\r\n    canJump()\r\n    {\r\n        for(let c of this.world.narrowphase.contactEquations){\r\n            let player = c.bodyA === this ? c.bodyA : c.bodyB;\r\n            let wall = c.bodyA.isWall ? c.bodyA : c.bodyB;\r\n            if(\r\n                player.playerId && 0 <= Number(Number(player.velocity[1]).toFixed(2))\r\n                && wall.isWall && !wall.isWorldWall\r\n                && player.position[1] < wall.position[1]\r\n            ){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    positionToTiles(x, y)\r\n    {\r\n        let currentCol = Math.round((x - (this.worldTileWidth/2)) / this.worldTileWidth);\r\n        currentCol = (currentCol >= 0) ? ((currentCol > this.worldWidth) ? (this.worldWidth) : currentCol) : 0;\r\n        let currentRow = Math.round((y - (this.worldTileHeight/2)) / this.worldTileHeight);\r\n        currentRow = (currentRow >= 0) ? ((currentRow > this.worldHeight) ? (this.worldHeight) : currentRow) : 0;\r\n        return {currentCol, currentRow};\r\n    }\r\n\r\n    getPathFinder()\r\n    {\r\n        // @NOTE: body pathfinder is for when the body has its own respawn area and grid, the world pathfinder is for\r\n        // any object in the room that could be anywhere in the room.\r\n        return (this.pathFinder ? this.pathFinder : this.world?.pathFinder);\r\n    }\r\n\r\n    get worldTileWidth()\r\n    {\r\n        return this.world?.mapJson?.tilewidth;\r\n    }\r\n\r\n    get worldTileHeight()\r\n    {\r\n        return this.world?.mapJson?.tileheight;\r\n    }\r\n\r\n    get worldWidth()\r\n    {\r\n        return this.world?.mapJson?.width;\r\n    }\r\n\r\n    get worldHeight()\r\n    {\r\n        return this.world?.mapJson?.height;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PhysicalBody = PhysicalBody;\r\n","/**\r\n *\r\n * Reldens - P2world\r\n *\r\n */\r\n\r\nconst { World, Body, Box } = require('p2');\r\nconst { PhysicalBody } = require('./physical-body');\r\nconst { ObjectBodyState } = require('./object-body-state');\r\nconst { PathFinder } = require('./path-finder');\r\nconst { TypeDeterminer } = require('../../game/type-determiner');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { RoomsConst } = require('../../rooms/constants');\r\nconst { WorldConst } = require('../constants');\r\nconst { ErrorManager, Logger, sc } = require('@reldens/utils');\r\n\r\nclass P2world extends World\r\n{\r\n\r\n    constructor(options)\r\n    {\r\n        // @TODO - BETA - Remove this class, create a driver for the physics engine.\r\n        super(options);\r\n        this.events = sc.get(options, 'events', false);\r\n        this.roomId = sc.get(options, 'roomId', false);\r\n        this.sceneName = sc.get(options, 'sceneName', false);\r\n        this.sceneTiledMapFile = sc.get(options, 'roomMap', false);\r\n        this.config = sc.get(options, 'config', false);\r\n        this.validateRequiredProperties(options);\r\n        this.saveMapData(options);\r\n        this.objectsManager = sc.get(options, 'objectsManager', false);\r\n        this.applyGravity = sc.get(options.worldConfig, 'applyGravity', false);\r\n        this.gravity = sc.get(options.worldConfig, 'gravity', [0, 0]);\r\n        this.globalStiffness = sc.get(options.worldConfig, 'globalStiffness', 100000000);\r\n        this.globalRelaxation = sc.get(options.worldConfig, 'globalRelaxation', 10);\r\n        this.useFixedWorldStep = sc.get(options.worldConfig, 'useFixedWorldStep', true);\r\n        this.timeStep = sc.get(options.worldConfig, 'timeStep', 0.04);\r\n        this.maxSubSteps = sc.get(options.worldConfig, 'maxSubSteps', 1);\r\n        this.movementSpeed = sc.get(options.worldConfig, 'movementSpeed', 180);\r\n        this.allowPassWallsFromBelow = sc.get(options.worldConfig, 'allowPassWallsFromBelow', false);\r\n        this.jumpSpeed = sc.get(options.worldConfig, 'jumpSpeed', 0);\r\n        this.jumpTimeMs = sc.get(options.worldConfig, 'jumpTimeMs', 0);\r\n        this.tryClosestPath = sc.get(options.worldConfig, 'tryClosestPath', false);\r\n        this.onlyWalkable = sc.get(options.worldConfig, 'onlyWalkable', false);\r\n        this.wallsMassValue = sc.get(options.worldConfig, 'wallsMassValue', 1);\r\n        this.playerMassValue = sc.get(options.worldConfig, 'playerMassValue', 1);\r\n        this.bulletsStopOnPlayer = sc.get(options.worldConfig, 'bulletsStopOnPlayer', true);\r\n        this.bulletsStopOnObject = sc.get(options.worldConfig, 'bulletsStopOnObject', true);\r\n        this.disableObjectsCollisionsOnChase = sc.get(options.worldConfig, 'disableObjectsCollisionsOnChase', false);\r\n        this.disableObjectsCollisionsOnReturn = sc.get(options.worldConfig, 'disableObjectsCollisionsOnReturn', true);\r\n        this.collisionsGroupsByType = sc.get(options.worldConfig, 'collisionsGroupsByType', true);\r\n        this.groupWallsVertically = sc.get(options.worldConfig, 'groupWallsVertically', false);\r\n        this.groupWallsHorizontally = sc.get(options.worldConfig, 'groupWallsHorizontally', false);\r\n        this.allowSimultaneous = sc.get(options, 'allowSimultaneous', false);\r\n        this.allowChangePoints = sc.get(options, 'allowChangePoints', true);\r\n        this.allowRoomObjectsCreation = sc.get(options, 'allowRoomObjectsCreation', true);\r\n        this.allowBodiesWithState = sc.get(options, 'allowBodiesWithState', true);\r\n        this.usePathFinder = sc.get(options, 'usePathFinder', true);\r\n        this.respawnAreas = false;\r\n        this.removeBodies = [];\r\n        this.removeBulletsStateIds = [];\r\n        this.type = sc.get(options, 'type', WorldConst.WORLD_TYPES.NO_GRAVITY_2D);\r\n        this.totalBodiesCount = 0;\r\n        this.totalBodiesCreated = 0;\r\n        this.queueBodies = [];\r\n        this.enablePathFinder();\r\n        this.enableWorldDateTime();\r\n        this.worldKey = sc.randomChars(16);\r\n        this.limitsBodyType = sc.get(options.worldConfig, 'limitsBodyType', Body.STATIC);\r\n        this.wallBodyType = sc.get(options.worldConfig, 'wallBodyType', Body.STATIC);\r\n        this.changePointsBodyType = sc.get(options.worldConfig, 'changePointsBodyType', Body.STATIC);\r\n        this.worldObjectBodyType = sc.get(options.worldConfig, 'worldObjectBodyType', Body.DYNAMIC);\r\n        this.playersBodyType = sc.get(options.worldConfig, 'playersBodyType', Body.DYNAMIC);\r\n        this.bulletsBodyType = sc.get(options.worldConfig, 'playersBodyType', Body.DYNAMIC);\r\n        this.bodyTypes = {\r\n            KINEMATIC: Body.KINEMATIC,\r\n            STATIC: Body.STATIC,\r\n            DYNAMIC: Body.DYNAMIC\r\n        };\r\n        this.typeDeterminer = new TypeDeterminer();\r\n        this.playerAnimationBasedOnPress = this.config.get('client/players/animations/basedOnPress', false);\r\n        this.playerAnimationDiagonalHorizontal = this.config.get('client/players/animations/diagonalHorizontal', false);\r\n        this.usePlayerSpeedConfig = this.config.get('server/players/physicsBody/usePlayerSpeedConfig', false);\r\n    }\r\n\r\n    saveMapData(options)\r\n    {\r\n        this.mapJson = sc.get(options, 'mapJson');\r\n        if(!this.mapJson && sc.hasOwn(this.config, 'server') && sc.hasOwn(this.config.server, 'maps')){\r\n            this.mapJson = sc.get(this.config.server.maps, this.sceneTiledMapFile, false);\r\n        }\r\n        if(!this.mapJson){\r\n            Logger.critical(\r\n                'Map \"'+this.sceneTiledMapFile+'\" not found in server maps.',\r\n                Object.keys(this.config.server.maps)\r\n            );\r\n            ErrorManager.error('Map \"'+this.sceneTiledMapFile+'\" not found in server maps.');\r\n        }\r\n    }\r\n\r\n    enableWorldDateTime()\r\n    {\r\n        this.worldDateTime = new Date();\r\n        this.worldDateTimeInterval = setInterval(() => {\r\n            this.worldDateTime = new Date();\r\n            // Logger.debug('World '+this.worldKey+': '+this.worldDateTime.toISOString().slice(0, 19).replace('T', ' '));\r\n        }, 1000);\r\n    }\r\n\r\n    enablePathFinder()\r\n    {\r\n        if(!this.usePathFinder){\r\n            return;\r\n        }\r\n        this.pathFinder = new PathFinder();\r\n        this.pathFinder.world = this;\r\n        this.pathFinder.createGridFromMap();\r\n    }\r\n\r\n    validateRequiredProperties(options)\r\n    {\r\n        if(!this.events){\r\n            ErrorManager.error('EventsManager undefined in P2world.');\r\n        }\r\n        if(!this.roomId || !this.sceneName || !this.sceneTiledMapFile){\r\n            Logger.critical('World creation missing data in options.', {\r\n                roomId: this.roomId,\r\n                sceneName: this.sceneName,\r\n                sceneTiledMapFile: this.sceneTiledMapFile\r\n            });\r\n            ErrorManager.error('World creation missing data in options.');\r\n        }\r\n        if(!this.config){\r\n            ErrorManager.error('Missing Config Manager.');\r\n        }\r\n    }\r\n\r\n    async createWorldContent(mapData)\r\n    {\r\n        // @TODO - BETA - Analyze and implement blocks groups, for example, all simple collision blocks could be\r\n        //   grouped and use a single big block to avoid the overload number of small blocks which now impacts in the\r\n        //   consumed resources.\r\n        if(!this.validateMapData(this.mapJson)){\r\n            Logger.error('Missing map data.', this.mapJson);\r\n            return;\r\n        }\r\n        if(!this.shouldGroupBodies()){\r\n            Logger.warning('Group bodies fully disabled, this can impact performance.');\r\n        }\r\n        this.changePoints = this.getSceneChangePoints(mapData);\r\n        let mapLayers = this.mapJson.layers;\r\n        let createObjectsData = [];\r\n        for(let layer of mapLayers){\r\n            let eventData = {layer, world: this};\r\n            await this.events.emit('reldens.parsingMapLayerBefore', eventData);\r\n            createObjectsData.push(...await this.createLayerContents(eventData.layer));\r\n            await this.events.emit('reldens.parsingMapLayerAfter', eventData);\r\n        }\r\n        for(let objectData of createObjectsData){\r\n            let {layer, tileIndex, tileW, tileH, posX, posY} = objectData;\r\n            await this.createRoomObjectBody(layer, tileIndex, tileW, tileH, posX, posY);\r\n        }\r\n        this.processBodiesQueue();\r\n        for(let layer of mapLayers) {\r\n            let eventData = {layer, world: this};\r\n            await this.events.emit('reldens.parsingMapLayersAfterBodiesQueue', eventData);\r\n        }\r\n        Logger.info(\r\n            'Total wall bodies found: '+this.totalBodiesCount,\r\n            'Total wall bodies created: '+this.totalBodiesCreated\r\n        );\r\n    }\r\n\r\n    processBodiesQueue()\r\n    {\r\n        this.queueBodies.sort((a, b) => {\r\n            const lowestIndexA = a.tileIndexes[0];\r\n            const lowestIndexB = b.tileIndexes[0];\r\n            return lowestIndexA - lowestIndexB;\r\n        });\r\n        for(let bodyWall of this.queueBodies){\r\n            this.addBody(bodyWall);\r\n        }\r\n        this.queueBodies = [];\r\n    }\r\n\r\n    async createLayerContents(layer)\r\n    {\r\n        let tileW = this.mapJson.tilewidth,\r\n            tileH = this.mapJson.tileheight,\r\n            halfTileW = tileW / 2,\r\n            halfTileH = tileH / 2;\r\n        let isChangePointsLayer = -1 !== layer.name.indexOf('change-points');\r\n        let isCollisionsLayer = -1 !== layer.name.indexOf('collisions');\r\n        let createObjectsData = [];\r\n        // loop columns:\r\n        for(let c = 0; c < this.mapJson.width; c++){\r\n            let posX = c * tileW + halfTileW;\r\n            // loop rows:\r\n            for(let r = 0; r < this.mapJson.height; r++){\r\n                // position in units:\r\n                let posY = r * tileH + halfTileH;\r\n                let tileIndex = this.tileIndexByRowAndColumn(r, c);\r\n                let tile = layer.data[tileIndex];\r\n                let isZeroTile = 0 === Number(tile);\r\n                let isChangePoint = false;\r\n                let isCollisionBody = false;\r\n                // the 0 value is for empty tiles without collisions or change points:\r\n                if(!isZeroTile){\r\n                    // look for change points on the layers with the proper name convention:\r\n                    if(this.allowChangePoints && isChangePointsLayer){\r\n                        isChangePoint = this.createChangePoint(tileIndex, tileW, tileH, posX, posY);\r\n                    }\r\n                    // create collisions for layers with the proper name convention:\r\n                    if(isCollisionsLayer){\r\n                        isCollisionBody = this.createWallCollisionBody(\r\n                            tileIndex,\r\n                            this.determinePreviousTileIndexFromGroupingType(tileIndex, layer, r, c),\r\n                            tileW,\r\n                            tileH,\r\n                            posX,\r\n                            posY\r\n                        );\r\n                    }\r\n                }\r\n                if(this.usePathFinder){\r\n                    this.markPathFinderTile(layer, isZeroTile, isChangePoint, isCollisionBody, c, r);\r\n                }\r\n                // @TODO - BETA - Emit event and move the rooms objects creation into the objects plugin.\r\n                createObjectsData.push({layer, tileIndex, tileW, tileH, posX, posY});\r\n            }\r\n        }\r\n        return createObjectsData;\r\n    }\r\n\r\n    determinePreviousTileIndexFromGroupingType(tileIndex, layer, r, c)\r\n    {\r\n        if(!this.shouldGroupBodies()){\r\n            return false;\r\n        }\r\n        if(this.groupWallsVertically){\r\n            return this.fetchPreviousWallTile(layer, r, c);\r\n        }\r\n        return 0 === tileIndex ? false : tileIndex - 1;\r\n    }\r\n\r\n    fetchPreviousWallTile(layer, r, c)\r\n    {\r\n        if(0 === r){\r\n            return false;\r\n        }\r\n        let tileIndex = this.tileIndexByRowAndColumn(r - 1, c);\r\n        let tile = layer.data[tileIndex];\r\n        let isZeroTile = 0 === Number(tile);\r\n        return isZeroTile ? false : tileIndex;\r\n    }\r\n\r\n    tileIndexByRowAndColumn(r, c)\r\n    {\r\n        return r * this.mapJson.width + c;\r\n    }\r\n\r\n    validateMapData(mapJson)\r\n    {\r\n        return 0 < Number(mapJson.width || 0)\r\n            && 0 < Number(mapJson.height || 0)\r\n            && 0 < Number(mapJson.tilewidth || 0)\r\n            && 0 < Number(mapJson.tileheight || 0);\r\n    }\r\n\r\n    async createRoomObjectBody(layer, tileIndex, tileW, tileH, posX, posY)\r\n    {\r\n        if(!this.allowRoomObjectsCreation || !this.objectsManager){\r\n            return;\r\n        }\r\n        // objects will be found by layer name + tile index:\r\n        let objectIndex = layer.name + tileIndex;\r\n        // this will validate if the object class exists and return an instance of it:\r\n        let roomObject = this.objectsManager.getObjectData(objectIndex);\r\n        // if the data and the instance was created:\r\n        if(!roomObject){\r\n            return;\r\n        }\r\n        if(roomObject.multiple){\r\n            return;\r\n        }\r\n        return await this.createWorldObject(roomObject, objectIndex, tileW, tileH, posX, posY);\r\n    }\r\n\r\n    markPathFinderTile(layer, isZeroTile, isChangePoint, isCollisionBody, c, r)\r\n    {\r\n        if(!this.pathFinder){\r\n            return;\r\n        }\r\n        let isPathFinderLayer = -1 !== layer.name.indexOf('pathfinder');\r\n        let hasBody = !isZeroTile && (isChangePoint || isCollisionBody);\r\n        let isNotPathFinderTile = isZeroTile && isPathFinderLayer;\r\n        if(!hasBody && !isNotPathFinderTile){\r\n            return;\r\n        }\r\n        this.pathFinder.grid.setWalkableAt(c, r, false);\r\n    }\r\n\r\n    createWallCollisionBody(tileIndex, previousWallTileIndex, tileW, tileH, posX, posY)\r\n    {\r\n        this.totalBodiesCount++;\r\n        let existentTileBodyWall = false !== previousWallTileIndex\r\n            ? this.fetchBodyByTileIndexId(previousWallTileIndex)\r\n            : false;\r\n        if(existentTileBodyWall){\r\n            let currentIndexes = existentTileBodyWall.tileIndexes;\r\n            if(-1 !== currentIndexes.indexOf(tileIndex)){\r\n                return existentTileBodyWall;\r\n            }\r\n            currentIndexes.push(tileIndex);\r\n            let bodyWall = this.createWall(\r\n                this.determineShapeWidth(currentIndexes, tileW),\r\n                this.determineShapeHeight(currentIndexes, tileH),\r\n                this.determineBodyPositionX(existentTileBodyWall, tileW, posX),\r\n                this.determineBodyPositionY(existentTileBodyWall, tileH, posY),\r\n                this.wallBodyType\r\n            );\r\n            bodyWall.tileIndexes = currentIndexes;\r\n            bodyWall.firstTileIndex = existentTileBodyWall.firstTileIndex;\r\n            this.queueBodies.splice(this.queueBodies.indexOf(existentTileBodyWall), 1);\r\n            this.queueBodies.push(bodyWall);\r\n            return bodyWall;\r\n        }\r\n        let bodyWall = this.createWall(tileW, tileH, posX, posY, this.wallBodyType);\r\n        bodyWall.tileIndexes = [tileIndex];\r\n        bodyWall.firstTileIndex = tileIndex;\r\n        !this.shouldGroupBodies() ? this.addBody(bodyWall) : this.queueBodies.push(bodyWall);\r\n        this.totalBodiesCreated++;\r\n        return bodyWall;\r\n    }\r\n\r\n    shouldGroupBodies()\r\n    {\r\n        return this.groupWallsVertically || this.groupWallsHorizontally;\r\n    }\r\n\r\n    determineBodyPositionY(existentTileBodyWall, tileH, posY)\r\n    {\r\n        if(!this.groupWallsVertically){\r\n            return posY;\r\n        }\r\n        return existentTileBodyWall.position[1] + (tileH / 2);\r\n    }\r\n\r\n    determineBodyPositionX(existentTileBodyWall, tileW, posX)\r\n    {\r\n        if(!this.groupWallsHorizontally){\r\n            return posX;\r\n        }\r\n        return existentTileBodyWall.position[0] + (tileW / 2);\r\n    }\r\n\r\n    determineShapeHeight(currentIndexes, tileH)\r\n    {\r\n        if(!this.groupWallsVertically){\r\n            return tileH;\r\n        }\r\n        return currentIndexes.length * tileH;\r\n    }\r\n\r\n    determineShapeWidth(currentIndexes, tileW)\r\n    {\r\n        if(!this.groupWallsHorizontally){\r\n            return tileW;\r\n        }\r\n        return currentIndexes.length * tileW;\r\n    }\r\n\r\n    fetchBodyByTileIndexId(tileIndex)\r\n    {\r\n        for(let body of this.queueBodies){\r\n            if(!body.isWall || !body.tileIndexes){\r\n                continue;\r\n            }\r\n            if(-1 !== body.tileIndexes.indexOf(tileIndex)){\r\n                return body;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    createChangePoint(tileIndex, tileW, tileH, posX, posY)\r\n    {\r\n        let changeScenePoint = sc.get(this.changePoints, tileIndex, null);\r\n        if(null === changeScenePoint){\r\n            Logger.error(['Change point data not found in this.changePoints for tileIndex:', tileIndex]);\r\n            return false;\r\n        }\r\n        // @NOTE: we make the change point smaller so the user needs to walk into to hit it.\r\n        let bodyChangePoint = this.createCollisionBody((tileW/2), (tileH/2), posX, posY, this.changePointsBodyType);\r\n        bodyChangePoint.changeScenePoint = changeScenePoint;\r\n        this.addBody(bodyChangePoint);\r\n        Logger.info('Created change point on tileIndex: ' + tileIndex);\r\n        return bodyChangePoint;\r\n    }\r\n\r\n    async createWorldObject(roomObject, objectIndex, tileW, tileH, posX, posY, pathFinder = false)\r\n    {\r\n        // handle body fixed position:\r\n        posX += sc.get(roomObject, 'xFix', 0);\r\n        posY += sc.get(roomObject, 'yFix', 0);\r\n        roomObject.x = posX;\r\n        roomObject.y = posY;\r\n        // save position in room object:\r\n        if(this.objectsManager && sc.hasOwn(this.objectsManager.objectsAnimationsData, objectIndex)){\r\n            this.objectsManager.objectsAnimationsData[objectIndex].x = posX;\r\n            this.objectsManager.objectsAnimationsData[objectIndex].y = posY;\r\n        }\r\n        // check and calculate interaction area:\r\n        if(roomObject.interactionArea){\r\n            roomObject.setupInteractionArea();\r\n        }\r\n        // by default objects won't have mass:\r\n        let bodyMass = sc.get(roomObject, 'bodyMass', 1);\r\n        let collision = sc.get(roomObject, 'collisionResponse', true);\r\n        let hasState = this.allowBodiesWithState ? sc.get(roomObject, 'hasState', false) : false;\r\n        let collisionType = sc.get(roomObject, 'collisionType', this.worldObjectBodyType);\r\n        let collisionGroup = sc.get(roomObject, 'collisionGroup', WorldConst.COLLISIONS.OBJECT);\r\n        let bodyObject = this.createCollisionBody(\r\n            tileW,\r\n            tileH,\r\n            posX,\r\n            posY,\r\n            collisionType,\r\n            collisionGroup,\r\n            bodyMass,\r\n            collision,\r\n            hasState,\r\n            objectIndex\r\n        );\r\n        bodyObject.disableObjectsCollisionsOnChase = this.disableObjectsCollisionsOnChase;\r\n        bodyObject.disableObjectsCollisionsOnReturn = this.disableObjectsCollisionsOnReturn;\r\n        bodyObject.isRoomObject = true;\r\n        // assign the room object to the body:\r\n        bodyObject.roomObject = roomObject;\r\n        if(this.usePathFinder && pathFinder){\r\n            bodyObject.pathFinder = pathFinder;\r\n        }\r\n        // try to get object instance from project root:\r\n        this.addBody(bodyObject);\r\n        // set data on room object:\r\n        roomObject.state = bodyObject.bodyState;\r\n        roomObject.objectBody = bodyObject;\r\n        Logger.info('Created object for objectIndex: '+objectIndex+' - At x/y: '+posX+' / '+posY+'.');\r\n        await this.events.emit('reldens.createdWorldObject', {\r\n            p2world: this,\r\n            roomObject,\r\n            bodyObject,\r\n            bodyMass,\r\n            collision,\r\n            hasState,\r\n            objectIndex,\r\n            tileW,\r\n            tileH,\r\n            posX,\r\n            posY,\r\n            pathFinder\r\n        });\r\n        return roomObject;\r\n    }\r\n\r\n    createLimits()\r\n    {\r\n        // map data:\r\n        let blockW = this.mapJson.tilewidth,\r\n            blockH = this.mapJson.tileheight,\r\n            mapW = this.mapJson.width * blockW,\r\n            mapH = this.mapJson.height * blockH,\r\n            worldLimit = 1,\r\n            fullW = mapW + blockW,\r\n            fullH = mapH + blockH;\r\n        // create world boundary, up wall:\r\n        let upWall = this.createWall(fullW, worldLimit, (mapW/2), 1, this.limitsBodyType);\r\n        upWall.isWorldWall = true;\r\n        this.addBody(upWall);\r\n        // create world boundary, down wall:\r\n        let downWall = this.createWall(fullW, worldLimit, (mapW/2), (mapH-worldLimit), this.limitsBodyType);\r\n        downWall.isWorldWall = true;\r\n        this.addBody(downWall);\r\n        // create world boundary, left wall:\r\n        let leftWall = this.createWall(worldLimit, fullH, 1, (mapH/2), this.limitsBodyType);\r\n        leftWall.isWorldWall = true;\r\n        this.addBody(leftWall);\r\n        // create world boundary, right wall:\r\n        let rightWall = this.createWall(worldLimit, fullH, (mapW-worldLimit), (mapH/2), this.limitsBodyType);\r\n        rightWall.isWorldWall = true;\r\n        this.addBody(rightWall);\r\n    }\r\n\r\n    createWall(width, height, x, y, bodyType)\r\n    {\r\n        let wallBody = this.createCollisionBody(\r\n            width,\r\n            height,\r\n            x,\r\n            y,\r\n            bodyType,\r\n            WorldConst.COLLISIONS.WALL,\r\n            this.wallsMassValue\r\n        );\r\n        wallBody.isWall = true;\r\n        return wallBody;\r\n    }\r\n\r\n    createCollisionBody(\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n        type,\r\n        collisionGroup = WorldConst.COLLISIONS.WALL,\r\n        mass = 1,\r\n        collisionResponse = true,\r\n        bodyState = false,\r\n        bodyKey = false,\r\n        dir = false\r\n    ){\r\n        let boxShape = this.createCollisionShape(width, height, collisionGroup, collisionResponse);\r\n        let bodyConfig = {\r\n            mass: mass,\r\n            position: [x, y],\r\n            type,\r\n            fixedRotation: true,\r\n            movementSpeed: this.movementSpeed,\r\n            jumpSpeed: this.jumpSpeed,\r\n            jumpTimeMs: this.jumpTimeMs\r\n        };\r\n        let bodyClass = bodyState ? PhysicalBody : Body;\r\n        let boxBody = new bodyClass(bodyConfig);\r\n        if(bodyState){\r\n            boxBody.bodyState = this.createBodyState(bodyState, x, y, dir, boxBody, bodyKey);\r\n        }\r\n        boxBody.originalCollisionGroup = collisionGroup;\r\n        boxBody.addShape(boxShape);\r\n        return boxBody;\r\n    }\r\n\r\n    createBodyState(bodyState, x, y, dir, boxBody, bodyKey)\r\n    {\r\n        if(bodyState instanceof PhysicalBody){\r\n            return bodyState;\r\n        }\r\n        return new ObjectBodyState({\r\n            x: x,\r\n            y: y,\r\n            dir: dir || GameConst.DOWN,\r\n            scene: this.sceneName,\r\n            id: boxBody.id,\r\n            key: bodyKey || '',\r\n            room_id: this.roomId\r\n        });\r\n    }\r\n\r\n    createCollisionShape(width, height, collisionGroup, collisionResponse = true, x = 0, y = 0)\r\n    {\r\n        // @TODO - BETA - Make collision groups configurable to be able to include more values.\r\n        let boxShape = new Box({width, height, position: [x, y]});\r\n        boxShape.collisionGroup = collisionGroup;\r\n        boxShape.collisionMask = this.collisionsGroupsByType[collisionGroup];\r\n        // Logger.debug('Setting collision mask \"'+boxShape.collisionMask+'\" for group \"'+boxShape.collisionGroup+'\".');\r\n        boxShape.collisionResponse = collisionResponse;\r\n        return boxShape;\r\n    }\r\n\r\n    getSceneChangePoints(mapData)\r\n    {\r\n        if(!mapData.changePoints){\r\n            return {};\r\n        }\r\n        let changePointsKeys = Object.keys(mapData.changePoints);\r\n        if(0 === changePointsKeys.length){\r\n            return {};\r\n        }\r\n        let changePoints = {};\r\n        for(let i of changePointsKeys){\r\n            let changePoint = mapData.changePoints[i];\r\n            changePoints[changePoint[RoomsConst.TILE_INDEX]] = changePoint[RoomsConst.NEXT_SCENE];\r\n        }\r\n        return changePoints;\r\n    }\r\n\r\n    createPlayerBody(playerData)\r\n    {\r\n        // @TODO - BETA - Players collision will be configurable, for now when collisions are active players can\r\n        //   push players.\r\n        let boxShape = this.createCollisionShape(playerData.width, playerData.height, WorldConst.COLLISIONS.PLAYER);\r\n        this.playerMovementSpeed = this.fetchPlayerSpeed(playerData.speed);\r\n        let boxBody = new PhysicalBody({\r\n            mass: this.playerMassValue,\r\n            position: [playerData.bodyState.x, playerData.bodyState.y],\r\n            type: this.playersBodyType,\r\n            fixedRotation: true,\r\n            animationBasedOnPress: this.playerAnimationBasedOnPress,\r\n            diagonalHorizontal: this.playerAnimationDiagonalHorizontal,\r\n            movementSpeed: this.playerMovementSpeed\r\n        });\r\n        boxBody.playerId = playerData.id;\r\n        boxBody.collideWorldBounds = true;\r\n        boxBody.isChangingScene = false;\r\n        boxBody.isBlocked = false;\r\n        boxBody.originalCollisionGroup = WorldConst.COLLISIONS.PLAYER;\r\n        boxBody.addShape(boxShape);\r\n        if(this.allowBodiesWithState){\r\n            boxBody.bodyState = playerData.bodyState;\r\n        }\r\n        this.addBody(boxBody);\r\n        return boxBody;\r\n    }\r\n\r\n    fetchPlayerSpeed(playerSpeed)\r\n    {\r\n        let movementSpeed = this.movementSpeed;\r\n        if(this.usePlayerSpeedConfig){\r\n            let configSpeed = this.config.get('server/players/physicsBody/speed', playerSpeed);\r\n            if(0 < configSpeed){\r\n                movementSpeed = configSpeed;\r\n            }\r\n        }\r\n        Logger.debug('Use movement speed: '+movementSpeed);\r\n        return movementSpeed;\r\n    }\r\n\r\n    shootBullet(fromPosition, toPosition, bulletObject)\r\n    {\r\n        let { objectWidth, objectHeight } = bulletObject;\r\n        let wTH = (this.mapJson.tileheight / 2) + (objectHeight / 2);\r\n        let wTW = (this.mapJson.tilewidth / 2) + (objectWidth / 2);\r\n        let bulletY = fromPosition.y + ((toPosition.y > fromPosition.y) ? wTH : -wTH);\r\n        let bulletX = fromPosition.x + ((toPosition.x > fromPosition.x) ? wTW : -wTW);\r\n        let y = toPosition.y - bulletY;\r\n        let x = toPosition.x - bulletX;\r\n        let angleByVelocity = Math.atan2(y, x);\r\n        let bulletAngle = angleByVelocity * 180 / Math.PI;\r\n        let bulletKey = bulletObject.key ? bulletObject.key : '';\r\n        let speedX = bulletObject.magnitude * Math.cos(angleByVelocity);\r\n        let speedY = bulletObject.magnitude * Math.sin(angleByVelocity);\r\n        let direction = this.calculateDirection(bulletObject, fromPosition, toPosition);\r\n        Logger.debug(\r\n            'Shooting bullet \"'+bulletKey+'\":',\r\n            {objectWidth, objectHeight, bulletY, bulletX, fromPosition, toPosition, bulletAngle, speedX, speedY},\r\n        );\r\n        let collisionKey = 'BULLET_'+this.determineFromType(bulletObject);\r\n        let bulletBody = this.createCollisionBody(\r\n            objectWidth,\r\n            objectHeight,\r\n            bulletX,\r\n            bulletY,\r\n            this.bulletsBodyType,\r\n            WorldConst.COLLISIONS[collisionKey],\r\n            1,\r\n            true,\r\n            true,\r\n            bulletKey,\r\n            direction\r\n        );\r\n        bulletBody.updateMassProperties();\r\n        bulletBody.roomObject = bulletObject;\r\n        bulletBody.hitPriority = bulletObject.hitPriority ? bulletObject.hitPriority : 2;\r\n        bulletBody.isRoomObject = true;\r\n        bulletBody.isBullet = true;\r\n        bulletBody.key = '' === bulletKey ? 'bullet-'+bulletBody.id : bulletKey;\r\n        // append body to world:\r\n        this.addBody(bulletBody);\r\n        // @NOTE: this index here will be the animation key since the bullet state doesn't have a key property.\r\n        let bodyStateId = bulletKey+'_bullet_'+bulletBody.id;\r\n        bulletBody.bodyStateId = bodyStateId;\r\n        // and state on room map schema:\r\n        bulletObject.room.state.addBodyToState(bulletBody.bodyState, bodyStateId);\r\n        bulletBody.angle = bulletAngle;\r\n        bulletBody.originalSpeed = {x: speedX, y: speedY};\r\n        bulletBody.velocity[0] = speedX;\r\n        bulletBody.velocity[1] = speedY;\r\n        // since the enemy won't be hit until the bullet reach the target we need to return false to avoid the onHit\r\n        // automatic actions (for example pve init).\r\n        return bulletBody;\r\n    }\r\n\r\n    determineFromType(bulletObject)\r\n    {\r\n        if(this.typeDeterminer.isPlayer(bulletObject.owner)){\r\n            return WorldConst.FROM_TYPES.PLAYER;\r\n        }\r\n        if(this.typeDeterminer.isObject(bulletObject.owner)){\r\n            return WorldConst.FROM_TYPES.OBJECT;\r\n        }\r\n        return WorldConst.FROM_TYPES.OTHER;\r\n    }\r\n\r\n    calculateDirection(bulletObject, fromPosition, toPosition)\r\n    {\r\n        let animDir = sc.get(bulletObject, 'animDir', false);\r\n        if(3 === animDir){\r\n            return fromPosition.x < toPosition.x ? GameConst.RIGHT : GameConst.LEFT;\r\n        }\r\n        return fromPosition.y < toPosition.y ? GameConst.DOWN : GameConst.UP;\r\n    }\r\n\r\n    removeBodiesFromWorld()\r\n    {\r\n        if(0 === this.removeBodies.length){\r\n            return;\r\n        }\r\n        for(let removeBody of this.removeBodies){\r\n            this.removeBody(removeBody);\r\n        }\r\n        // reset the array after remove all bodies:\r\n        this.removeBodies = [];\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.P2world = P2world;\r\n","/**\r\n *\r\n * Reldens - ObjectBodyState\r\n *\r\n * ObjectBodyState schema, this class get a body state (position, direction, scene, etc.) data and keep the state\r\n * in sync with the client.\r\n *\r\n */\r\n\r\nconst { type } = require('@colyseus/schema');\r\nconst { BodyState } = require('./body-state');\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass ObjectBodyState extends BodyState\r\n{\r\n\r\n    constructor(data)\r\n    {\r\n        super(data);\r\n        this.id = data.id;\r\n        this.autoDirection = sc.get(data, 'autoDirection', true);\r\n    }\r\n\r\n}\r\n\r\ntype('number')(ObjectBodyState.prototype, 'id');\r\n\r\nmodule.exports.ObjectBodyState = ObjectBodyState;\r\n","/**\r\n *\r\n * Reldens - BodyState\r\n *\r\n */\r\n\r\nconst { Schema, type } = require('@colyseus/schema');\r\nconst { GameConst } = require('../../game/constants');\r\n\r\nclass BodyState extends Schema\r\n{\r\n\r\n    constructor(data)\r\n    {\r\n        super();\r\n        this.room_id = data.room_id;\r\n        this.scene = data.scene;\r\n        this.key = data.key || '';\r\n        this.x = parseFloat(data.x);\r\n        this.y = parseFloat(data.y);\r\n        this.dir = data.dir;\r\n        this.mov = false;\r\n        this.inState = data.inState || GameConst.STATUS.ACTIVE;\r\n    }\r\n\r\n    sync(bodyState)\r\n    {\r\n        this.room_id = bodyState.room_id;\r\n        this.scene = bodyState.scene;\r\n        this.key = bodyState.key;\r\n        this.x = parseFloat(bodyState.x);\r\n        this.y = parseFloat(bodyState.y);\r\n        this.dir = bodyState.dir;\r\n        this.mov = bodyState.mov;\r\n        this.inState = bodyState.inState;\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\ntype('number')(BodyState.prototype, 'room_id');\r\ntype('string')(BodyState.prototype, 'scene');\r\ntype('string')(BodyState.prototype, 'key');\r\ntype('number')(BodyState.prototype, 'x');\r\ntype('number')(BodyState.prototype, 'y');\r\ntype('string')(BodyState.prototype, 'dir');\r\ntype('boolean')(BodyState.prototype, 'mov');\r\ntype('number')(BodyState.prototype, 'inState');\r\n\r\nmodule.exports.BodyState = BodyState;\r\n","const { sc } = require('@reldens/utils');\r\nconst { Grid, AStarFinder } = require('pathfinding');\r\n\r\nclass PathFinder\r\n{\r\n\r\n    constructor()\r\n    {\r\n        this.finder = new AStarFinder();\r\n        this.world = false;\r\n        this.grid = false;\r\n        this.bodies = {};\r\n    }\r\n\r\n    createGridFromMap()\r\n    {\r\n        // @NOTE: here we create an empty grid with the size of the current scene +1 (because the index starts at zero).\r\n        // We mark the collisions on this grid when the layers and world contents are created.\r\n        // See \"P2world\", line 83, method \"setWalkableAt\".\r\n        this.grid = new Grid(this.world.mapJson.width+1, this.world.mapJson.height+1);\r\n    }\r\n\r\n    addBodyToProcess(body)\r\n    {\r\n        this.bodies[body.id] = body;\r\n    }\r\n\r\n    findPath(from, to)\r\n    {\r\n        if(this.world.onlyWalkable){\r\n            let nodeTo = false;\r\n            try {\r\n                nodeTo = sc.hasOwn(this.grid, 'nodes') ? this.grid.getNodeAt(to[0], to[1]) : false;\r\n            } catch (error) {\r\n                // Logger.error('Node not found.');\r\n            }\r\n            if(!nodeTo || !nodeTo.walkable){\r\n                return false;\r\n            }\r\n        }\r\n        // we need a new grid clone for every path find.\r\n        let grid = this.grid.clone();\r\n        let path = this.finder.findPath(from[0], from[1], to[0], to[1], grid);\r\n        if(!path.length && this.world.tryClosestPath){\r\n            let newTo = [1, 1];\r\n            if(from[0] < to[0]){\r\n                newTo[0] = -1;\r\n            }\r\n            if(from[1] < to[1]){\r\n                newTo[1] = -1;\r\n            }\r\n            // @TODO - BETA - Improve how to check the closest nodes.\r\n            // check all closest nodes:\r\n            let worldW = this.world.mapJson.width;\r\n            let worldH = this.world.mapJson.height;\r\n            let testPointA = (to[0]+newTo[0] > worldW ? to[0]+newTo[0] : worldW);\r\n            let testPointB = (to[1]+newTo[1] > worldH ? to[1]+newTo[1] : worldH);\r\n            let testPointC = (to[0]-newTo[0] < 0 ? to[0]-newTo[0] : 0);\r\n            let testPointD = (to[1]-newTo[1] < 0 ? to[1]-newTo[1] : 0);\r\n            let nodeTo = this.grid.getNodeAt(testPointA, to[1]);\r\n            if(nodeTo && !nodeTo.walkable){\r\n                nodeTo = this.grid.getNodeAt(to[0], testPointB);\r\n                if(nodeTo && !nodeTo.walkable){\r\n                    nodeTo = this.grid.getNodeAt(testPointA, testPointB);\r\n                    if(nodeTo && !nodeTo.walkable){\r\n                        nodeTo = this.grid.getNodeAt(testPointC, to[1]);\r\n                        if(nodeTo && !nodeTo.walkable){\r\n                            nodeTo = this.grid.getNodeAt(to[0], testPointD);\r\n                            if(nodeTo && !nodeTo.walkable){\r\n                                nodeTo = this.grid.getNodeAt(testPointC, testPointD);\r\n                                if(nodeTo && !nodeTo.walkable){\r\n                                    nodeTo = this.grid.getNodeAt(testPointC, testPointB);\r\n                                    if(nodeTo && !nodeTo.walkable){\r\n                                        nodeTo = this.grid.getNodeAt(testPointA, testPointD);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(nodeTo && nodeTo.walkable){\r\n                grid = this.grid.clone();\r\n                path = this.finder.findPath(from[0], from[1], nodeTo.x, nodeTo.y, grid);\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PathFinder = PathFinder;\r\n","/**\r\n *\r\n * Reldens - TypeDeterminer\r\n *\r\n */\r\n\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass TypeDeterminer\r\n{\r\n\r\n    isPlayer(skillOwner)\r\n    {\r\n        // @TODO - BETA - Improve.\r\n        return sc.hasOwn(skillOwner, 'sessionId');\r\n    }\r\n\r\n    isObject(skillOwner)\r\n    {\r\n        // @TODO - BETA - Improve.\r\n        return sc.hasOwn(skillOwner, 'key');\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TypeDeterminer = TypeDeterminer;\r\n","/**\r\n *\r\n * Reldens - world/constants\r\n *\r\n */\r\n\r\nmodule.exports.WorldConst = {\r\n    WORLD_TYPES: {\r\n        NO_GRAVITY_2D: 'NO_GRAVITY_2D',\r\n        TOP_DOWN_WITH_GRAVITY: 'TOP_DOWN_WITH_GRAVITY'\r\n    },\r\n    COLLISIONS: {\r\n        PLAYER: Math.pow(2, 0),\r\n        OBJECT: Math.pow(2, 1),\r\n        WALL: Math.pow(2, 2),\r\n        BULLET_PLAYER: Math.pow(2, 3),\r\n        BULLET_OBJECT: Math.pow(2, 4),\r\n        BULLET_OTHER: Math.pow(2, 5),\r\n        DROP: Math.pow(2, 6),\r\n    },\r\n    FROM_TYPES: {\r\n        PLAYER: 'PLAYER',\r\n        OBJECT: 'OBJECT',\r\n        OTHER: 'OTHER'\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - WorldPointsValidator\r\n *\r\n */\r\n\r\nclass WorldPointsValidator\r\n{\r\n\r\n    constructor(worldWidth, worldHeight)\r\n    {\r\n        this.worldWidth = worldWidth;\r\n        this.worldHeight = worldHeight;\r\n    }\r\n\r\n    makeValidPoints(points)\r\n    {\r\n        points.column = points.column < 0 ? 0 : points.column;\r\n        points.column = points.column > this.worldWidth ? this.worldWidth : points.column;\r\n        points.row = points.row < 0 ? 0 : points.row;\r\n        points.row = points.row > this.worldHeight ? this.worldHeight : points.row;\r\n        return points;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.WorldPointsValidator = WorldPointsValidator;\r\n","/**\r\n *\r\n * Reldens - WorldTimer\r\n *\r\n */\r\n\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass WorldTimer\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.clockInstance = sc.get(props, 'clockInstance', false);\r\n        this.callbacks = sc.get(props, 'callbacks', []);\r\n        this.worldTimer = {};\r\n        this.paused = false;\r\n        this.lastCallTime = 0;\r\n        this.stepTime = 0;\r\n        this.startedTime = (new Date()).getTime();\r\n        this.currentTime = this.startedTime;\r\n    }\r\n\r\n    startWorldSteps(world)\r\n    {\r\n        if(!world){\r\n            Logger.error('World instance invalid.', {world});\r\n            return;\r\n        }\r\n        this.stepTime = 1000 * world.timeStep;\r\n        if(this.clockInstance){\r\n            //Logger.debug('WorldTimes using clock instance.');\r\n            this.worldTimer = this.clockInstance.setInterval(() => {\r\n                this.setIntervalCallback(world);\r\n            }, this.stepTime);\r\n            return;\r\n        }\r\n        //Logger.debug('WorldTimes using setInterval.');\r\n        this.worldTimer = setInterval(() => {\r\n            this.setIntervalCallback(world);\r\n        }, this.stepTime);\r\n    }\r\n\r\n    setIntervalCallback(world)\r\n    {\r\n        if(this.paused){\r\n            return;\r\n        }\r\n        this.currentTime += this.stepTime;\r\n        this.stepWorld(world);\r\n        this.executeCallbacks();\r\n    }\r\n\r\n    stepWorld(world)\r\n    {\r\n        if(world.useFixedWorldStep){\r\n            world.step(world.timeStep);\r\n            return;\r\n        }\r\n        this.stepWorldWithSubSteps(world);\r\n    }\r\n\r\n    executeCallbacks()\r\n    {\r\n        if(0 === this.callbacks.length){\r\n            return;\r\n        }\r\n        for(let callback of this.callbacks){\r\n            callback();\r\n        }\r\n    }\r\n\r\n    stepWorldWithSubSteps(world)\r\n    {\r\n        let now = Date.now() / 1000;\r\n        let timeSinceLastCall = now - this.lastCallTime;\r\n        world.step(world.timeStep, timeSinceLastCall, world.maxSubSteps);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.WorldTimer = WorldTimer;\r\n","/**\r\n *\r\n * Reldens - Room Events Override\r\n *\r\n */\r\n\r\nconst { PlayerEnginePrediction} = require('./player-engine-prediction');\r\nconst { SceneDynamic } = require('../../game/client/scene-dynamic');\r\n\r\nclass RoomEventsOverride\r\n{\r\n\r\n    createCurrentPlayerOverride(roomEvents)\r\n    {\r\n        roomEvents.createCurrentPlayer = async (player, previousScene, key) => {\r\n            roomEvents.engineStarted = true;\r\n            await roomEvents.startEngineScene(player, roomEvents.room, previousScene);\r\n            let currentScene = roomEvents.getActiveScene();\r\n            if(!roomEvents.isValidScene(currentScene, player)){\r\n                return false;\r\n            }\r\n            // process players queue after player was created:\r\n            await roomEvents.events.emit('reldens.playersQueueBefore', player, key, previousScene, roomEvents);\r\n            for(let i of Object.keys(roomEvents.playersQueue)){\r\n                currentScene.player.addPlayer(i, roomEvents.playersQueue[i]);\r\n            }\r\n            if(currentScene.experimentalClientPrediction){\r\n                currentScene.player.positionFromServer = player;\r\n            }\r\n            let eventData = {player, key, previousScene, roomEvents: roomEvents};\r\n            await roomEvents.events.emit('reldens.createCurrentPlayer', eventData);\r\n            return eventData;\r\n        };\r\n    }\r\n\r\n    playerOnChangeOverride(roomEvents)\r\n    {\r\n        roomEvents.playersOnChange = (player, key, from) => {\r\n            // do not move the player if it is changing the scene:\r\n            if(player.state.scene !== roomEvents.roomName){\r\n                return;\r\n            }\r\n            let currentScene = roomEvents.getActiveScene();\r\n            if(!roomEvents.playerExists(currentScene, key)){\r\n                return;\r\n            }\r\n            if(currentScene.experimentalClientPrediction && roomEvents.isCurrentPlayer(key)){\r\n                currentScene.player.positionFromServer = player;\r\n                return;\r\n            }\r\n            currentScene.player.updatePlayer(key, player);\r\n        };\r\n    }\r\n\r\n    createSceneInstanceOverride(roomEvents)\r\n    {\r\n        roomEvents.createSceneInstance = (sceneName, sceneData, gameManager) => {\r\n            let newSceneDynamic = new SceneDynamic(sceneName, sceneData, gameManager);\r\n            newSceneDynamic.experimentalClientPrediction = gameManager.config.get(\r\n                'client/general/engine/experimentalClientPrediction'\r\n            );\r\n            newSceneDynamic.worldPrediction = false;\r\n            return newSceneDynamic;\r\n        }\r\n    }\r\n\r\n    createPlayerEngineInstanceOverride(roomEvents)\r\n    {\r\n        roomEvents.createPlayerEngineInstance = (currentScene, player, gameManager, room) => {\r\n            return new PlayerEnginePrediction({scene: currentScene, playerData: player, gameManager, room});\r\n        };\r\n    }\r\n}\r\n\r\nmodule.exports.RoomEventsOverride = RoomEventsOverride;\r\n","/**\r\n *\r\n * Reldens - PlayerEngine\r\n *\r\n * PlayerEngine is the class that handle the player actions in the client side.\r\n *\r\n */\r\n\r\nconst { PlayerEngine } = require('../../users/client/player-engine');\r\nconst { GameConst } = require('../../game/constants');\r\n\r\nclass PlayerEnginePrediction extends PlayerEngine\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.predictionBody = false;\r\n        this.positionFromServer = false;\r\n        let reconciliationTimeOutMs = this.gameManager.config.get('client/players/reconciliation/timeOutMs');\r\n        this.reconciliationTimeOutMs = (false === reconciliationTimeOutMs) ? 1000 : Number(reconciliationTimeOutMs);\r\n    }\r\n\r\n    left()\r\n    {\r\n        if('pressed' === this.lastKeyState[GameConst.LEFT]){\r\n            return;\r\n        }\r\n        let sendData = {dir: GameConst.LEFT};\r\n        this.lastKeyState[GameConst.LEFT] = 'pressed';\r\n        if(this.predictionBody){\r\n            sendData.time = this.scene.worldPredictionTimer.currentTime;\r\n            this.predictionBody.initMove(GameConst.LEFT, true);\r\n        }\r\n        this.roomEvents.send(sendData);\r\n    }\r\n\r\n    right()\r\n    {\r\n        if('pressed' === this.lastKeyState[GameConst.RIGHT]){\r\n            return;\r\n        }\r\n        this.lastKeyState[GameConst.RIGHT] = 'pressed';\r\n        let sendData = {dir: GameConst.RIGHT};\r\n        if(this.predictionBody){\r\n            sendData.time = this.scene.worldPredictionTimer.currentTime;\r\n            this.predictionBody.initMove(GameConst.RIGHT, true);\r\n        }\r\n        this.roomEvents.send(sendData);\r\n    }\r\n\r\n    up()\r\n    {\r\n        if('pressed' === this.lastKeyState[GameConst.UP]){\r\n            return;\r\n        }\r\n        this.lastKeyState[GameConst.UP] = 'pressed';\r\n        let sendData = {dir: GameConst.UP};\r\n        if(this.predictionBody){\r\n            sendData.time = this.scene.worldPredictionTimer.currentTime;\r\n            this.predictionBody.initMove(GameConst.UP, true);\r\n        }\r\n        this.roomEvents.send(sendData);\r\n    }\r\n\r\n    down()\r\n    {\r\n        if('pressed' === this.lastKeyState[GameConst.DOWN]){\r\n            return;\r\n        }\r\n        this.lastKeyState[GameConst.DOWN] = 'pressed';\r\n        let sendData = {dir: GameConst.DOWN};\r\n        if(this.predictionBody){\r\n            sendData.time = this.scene.worldPredictionTimer.currentTime;\r\n            this.predictionBody.initMove(GameConst.DOWN, true);\r\n        }\r\n        this.roomEvents.send(sendData);\r\n    }\r\n\r\n    stop()\r\n    {\r\n        this.lastKeyState[GameConst.LEFT] = '';\r\n        this.lastKeyState[GameConst.RIGHT] = '';\r\n        this.lastKeyState[GameConst.UP] = '';\r\n        this.lastKeyState[GameConst.DOWN] = '';\r\n        let sendData = {act: GameConst.STOP};\r\n        if(this.predictionBody){\r\n            sendData.time = this.scene.worldPredictionTimer.currentTime;\r\n            this.reconcilePosition();\r\n        }\r\n        this.roomEvents.send(sendData);\r\n    }\r\n\r\n    reconcilePosition()\r\n    {\r\n        if(!this.predictionBody || !this.positionFromServer){\r\n            return;\r\n        }\r\n        this.predictionBody.stopFull();\r\n        setTimeout(() => {\r\n            this.predictionBody.position[0] = this.positionFromServer.state.x;\r\n            this.predictionBody.position[1] = this.positionFromServer.state.y;\r\n            this.predictionBody.dir = this.positionFromServer.state.dir;\r\n            this.updatePlayer(this.playerId, this.positionFromServer);\r\n        }, this.reconciliationByTimeOutMs());\r\n    }\r\n\r\n    reconciliationTimeOutCallBack()\r\n    {\r\n        return false;\r\n    }\r\n\r\n    reconciliationByTimeOutMs()\r\n    {\r\n        let callbackResult = this.reconciliationTimeOutCallBack();\r\n        return Number(false !== callbackResult ? callbackResult : this.reconciliationTimeOutMs);\r\n    }\r\n\r\n    moveToPointer(pointer)\r\n    {\r\n        this.lastKeyState[GameConst.LEFT] = '';\r\n        this.lastKeyState[GameConst.RIGHT] = '';\r\n        this.lastKeyState[GameConst.UP] = '';\r\n        this.lastKeyState[GameConst.DOWN] = '';\r\n        let data = {\r\n            act: GameConst.POINTER,\r\n            column: pointer.worldColumn,\r\n            row: pointer.worldRow,\r\n            x: pointer.worldX - this.leftOff,\r\n            y: pointer.worldY - this.topOff\r\n        };\r\n        if(this.predictionBody && this.pointsValidator){\r\n            this.reconcilePosition();\r\n            let predictionData = Object.assign({}, data);\r\n            predictionData = this.pointsValidator.makeValidPoints(predictionData);\r\n            this.predictionBody.moveToPoint(predictionData);\r\n        }\r\n        this.roomEvents.send(data);\r\n    }\r\n}\r\n\r\nmodule.exports.PlayerEnginePrediction = PlayerEnginePrediction;\r\n","/**\r\n *\r\n * Reldens - Teams Client Plugin\r\n *\r\n */\r\n\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { TargetBoxEnricher } = require('./target-box-enricher');\r\nconst { TeamMessageListener } = require('./team-message-listener');\r\nconst { ClanMessageListener } = require('./clan-message-listener');\r\nconst { MessageProcessor } = require('./messages-processor');\r\nconst { TemplatesHandler } = require('./templates-handler');\r\nconst { TeamsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass TeamsPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in TeamsPlugin.');\r\n        }\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in TeamsPlugin.');\r\n        }\r\n        this.teamMessageListener = new TeamMessageListener();\r\n        this.clanMessageListener = new ClanMessageListener();\r\n        this.listenEvents();\r\n        // @TODO - BETA - Standardize, listeners on config or added by events like:\r\n        // this.events.on('reldens.activateRoom', (room) => {\r\n        //     room.onMessage('*', (message) => {\r\n        //         this.messagesHandler.processOrQueueMessage(message);\r\n        //     });\r\n        // });\r\n        this.listenMessages();\r\n    }\r\n\r\n    listenMessages()\r\n    {\r\n        if(!this.gameManager || !this.events){\r\n            return;\r\n        }\r\n        this.gameManager.config.client.message.listeners[TeamsConst.KEY] = this.teamMessageListener;\r\n        this.gameManager.config.client.message.listeners[TeamsConst.CLAN_KEY] = this.clanMessageListener;\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events){\r\n            return;\r\n        }\r\n        this.events.on('reldens.createEngineSceneDone', (event) => {\r\n            let roomEvents = event.roomEvents;\r\n            if(!roomEvents){\r\n                Logger.critical('RoomEvents undefined for process Team messages queue on TeamsPlugin.', event);\r\n                return false;\r\n            }\r\n            MessageProcessor.processClanMessagesQueue(roomEvents, this.clanMessageListener);\r\n            MessageProcessor.processTeamMessagesQueue(roomEvents, this.teamMessageListener);\r\n        });\r\n        this.events.on('reldens.preloadUiScene', (preloadScene) => {\r\n            TemplatesHandler.preloadTemplates(preloadScene);\r\n        });\r\n        this.events.on('reldens.gameEngineShowTarget', (gameEngine, target, previousTarget, targetName) => {\r\n            TargetBoxEnricher.appendClanInviteButton(this.gameManager, target, previousTarget, targetName);\r\n            TargetBoxEnricher.appendTeamInviteButton(this.gameManager, target, previousTarget, targetName);\r\n        });\r\n    }\r\n\r\n    fetchTeamPlayerBySessionId(sessionId)\r\n    {\r\n        let currentTeam = this.gameManager.gameEngine.uiScene.currentTeam;\r\n        if(!currentTeam){\r\n            return false;\r\n        }\r\n        for(let i of Object.keys(currentTeam)){\r\n            let teamPlayer = currentTeam[i];\r\n            if(teamPlayer.sessionId === sessionId){\r\n                return teamPlayer;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TeamsPlugin = TeamsPlugin;\r\n","/**\r\n *\r\n * Reldens - TargetBoxEnricher\r\n *\r\n */\r\n\r\nconst { TeamsConst } = require('../constants');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass TargetBoxEnricher\r\n{\r\n\r\n    static appendClanInviteButton(gameManager, target, previousTarget, targetName)\r\n    {\r\n        let currentClan = gameManager?.gameEngine?.uiScene?.currentClan;\r\n        if(!currentClan){\r\n            // current player has none clan:\r\n            return false;\r\n        }\r\n        if(!currentClan.ownerId){\r\n            Logger.error('Current clan missing owner.', currentClan);\r\n            return false;\r\n        }\r\n        if(this.playerBySessionId(currentClan, target.id)){\r\n            // target player is already on the clan:\r\n            return false;\r\n        }\r\n        let currentPlayer = gameManager.getCurrentPlayer();\r\n        if(!this.targetIsValidPlayer(target, currentPlayer)){\r\n            // target is not the current player\r\n            return false;\r\n        }\r\n        let isOpenInvites = gameManager.config.getWithoutLogs('client/clan/general/openInvites', false);\r\n        if(gameManager.playerData.id.toString() !== currentClan.ownerId.toString() && !isOpenInvites){\r\n            // only clan owner can invite:\r\n            return false;\r\n        }\r\n        return this.appendInviteButton('clan', target, gameManager, targetName);\r\n    }\r\n\r\n    static appendTeamInviteButton(gameManager, target, previousTarget, targetName)\r\n    {\r\n        if(!this.targetIsValidPlayer(target, gameManager.getCurrentPlayer())){\r\n            return false;\r\n        }\r\n        if(gameManager.getFeature('teams').fetchTeamPlayerBySessionId(target.id)){\r\n            return false;\r\n        }\r\n        return this.appendInviteButton('team', target, gameManager, targetName);\r\n    }\r\n\r\n    static appendInviteButton(type, target, gameManager, targetName)\r\n    {\r\n        let uiScene = gameManager.gameEngine.uiScene;\r\n        let uiTarget = sc.get(uiScene, 'uiTarget', false);\r\n        if(false === uiTarget){\r\n            Logger.critical('Missing \"uiTarget\" on uiScene.');\r\n            return false;\r\n        }\r\n        let teamPlayerActionsTemplate = uiScene.cache.html.get(type+'PlayerInvite');\r\n        if(!teamPlayerActionsTemplate){\r\n            Logger.critical('Template \"'+type+'PlayerInvite\" not found.');\r\n            return false;\r\n        }\r\n        gameManager.gameDom.appendToElement(\r\n            '#target-container',\r\n            gameManager.gameEngine.parseTemplate(\r\n                teamPlayerActionsTemplate,\r\n                {\r\n                    // @TODO - BETA - Create translations table with a loader and processor.\r\n                    playerName: targetName,\r\n                    playerId: target.player_id,\r\n                    inviteLabel: gameManager.config.getWithoutLogs(\r\n                        type+'/labels/inviteLabel',\r\n                        TeamsConst.LABELS[type.toUpperCase()].INVITE_BUTTON_LABEL\r\n                    )\r\n                }\r\n            )\r\n        );\r\n        let inviteButton = gameManager.gameDom.getElement('.'+type+'-invite-' + target.player_id + ' button');\r\n        inviteButton?.addEventListener('click', () => {\r\n            let sendInvite = {act: TeamsConst.ACTIONS[type.toUpperCase()+'_INVITE'], id: target.player_id};\r\n            gameManager.activeRoomEvents.send(sendInvite);\r\n            inviteButton.style.display = 'none';\r\n            gameManager.gameEngine.clearTarget();\r\n        });\r\n    }\r\n\r\n    static targetIsValidPlayer(target, currentPlayer)\r\n    {\r\n        return GameConst.TYPE_PLAYER === target.type && currentPlayer.playerId !== target.id;\r\n    }\r\n\r\n    static playerBySessionId(currentClan, targetId)\r\n    {\r\n        let playersKeys = Object.keys(currentClan.players);\r\n        if(0 === playersKeys.length){\r\n            return false;\r\n        }\r\n        for(let i of playersKeys){\r\n            if(currentClan.players[i].sessionId === targetId){\r\n                return currentClan.players[i];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TargetBoxEnricher = TargetBoxEnricher;\r\n","/**\r\n *\r\n * Reldens - teams/constants\r\n *\r\n */\r\n\r\nlet pref = 'tm.'\r\nlet clanPref = 'cln.';\r\n\r\nmodule.exports.TeamsConst = {\r\n    KEY: 'teams',\r\n    CLAN_KEY: 'clan',\r\n    TEAM_PREF: pref,\r\n    CLAN_PREF: clanPref,\r\n    NAME_LIMIT: 50,\r\n    CLAN_STARTING_POINTS: 1,\r\n    VALIDATION: {\r\n        SUCCESS: 1,\r\n        NAME_EXISTS: 2,\r\n        LEVEL_ISSUE: 3,\r\n        CREATE_ERROR: 4,\r\n        CREATE_OWNER_ERROR: 5\r\n    },\r\n    ACTIONS: {\r\n        // @TODO - BETA - Standardize generic actions and use dots to split, like UPDATE = '.up', REMOVE = '.rm', etc.\r\n        TEAM_INVITE: pref+'inv',\r\n        TEAM_ACCEPTED: pref+'acp',\r\n        TEAM_LEAVE: pref+'lev',\r\n        TEAM_UPDATE: pref+'upd',\r\n        TEAM_LEFT: pref+'lef',\r\n        TEAM_REMOVE: pref+'rem',\r\n        CLAN_INITIALIZE: clanPref+'ini',\r\n        CLAN_CREATE: clanPref+'new',\r\n        CLAN_INVITE: clanPref+'inv',\r\n        CLAN_ACCEPTED: clanPref+'acp',\r\n        CLAN_LEAVE: clanPref+'lev',\r\n        CLAN_UPDATE: clanPref+'upd',\r\n        CLAN_LEFT: clanPref+'lef',\r\n        CLAN_REMOVE: clanPref+'rem',\r\n        CLAN_REMOVED: clanPref+'remd',\r\n        CLAN_NAME: clanPref+'nam'\r\n    },\r\n    LABELS: {\r\n        TEAM: {\r\n            INVITE_BUTTON_LABEL: 'Team - Invite',\r\n            REQUEST_FROM: 'Accept team request from:',\r\n            LEADER_NAME_TITLE: 'Team leader: %leaderName',\r\n            DISBAND: 'Disband Team',\r\n            LEAVE: 'Leave Team',\r\n            PROPERTY_MAX_VALUE: '/ %propertyMaxValue'\r\n        },\r\n        CLAN: {\r\n            CREATE_CLAN_TITLE: 'Clan - Creation',\r\n            INVITE_BUTTON_LABEL: 'Clan - Invite',\r\n            REQUEST_FROM: 'Accept clan request from:',\r\n            CLAN_TITLE: 'Clan: %clanName - Leader: %leaderName',\r\n            NAME_PLACEHOLDER: 'Choose a clan name...',\r\n            CREATE: 'Create',\r\n            DISBAND: 'Disband Clan',\r\n            LEAVE: 'Leave Clan',\r\n            PROPERTY_MAX_VALUE: '/ %propertyMaxValue',\r\n            PLAYERS_TITLE: 'Connected Players:',\r\n            MEMBERS_TITLE: 'Clan Members:',\r\n            NONE_CONNECTED: 'None'\r\n        }\r\n    },\r\n    CHAT: {\r\n        MESSAGE: {\r\n            INVITE_ACCEPTED: '%playerName has accepted your invitation.',\r\n            INVITE_REJECTED: '%playerName has rejected your invitation.',\r\n            DISBANDED: '%playerName has disbanded the %groupName.',\r\n            LEFT: 'You left the %groupName.',\r\n            LEAVE: '%playerName has left the %groupName.',\r\n            REMOVED: '%playerName has been removed from the %groupName.',\r\n            ENTER: '%playerName has enter the %groupName.',\r\n            NOT_ENOUGH_PLAYERS: 'The team was disbanded due to a lack of players.'\r\n        }\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - TeamMessageListener\r\n *\r\n */\r\n\r\nconst { TeamMessageHandler } = require('./team-message-handler');\r\nconst { TeamsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass TeamMessageListener\r\n{\r\n\r\n    async executeClientMessageActions(props)\r\n    {\r\n        let message = sc.get(props, 'message', false);\r\n        if(!message){\r\n            Logger.error('Missing message data on TeamMessageListener.', props);\r\n            return false;\r\n        }\r\n        let roomEvents = sc.get(props, 'roomEvents', false);\r\n        if(!roomEvents){\r\n            Logger.error('Missing RoomEvents on TeamMessageListener.', props);\r\n            return false;\r\n        }\r\n        let teamMessageHandler = new TeamMessageHandler({roomEvents, message});\r\n        if(!teamMessageHandler.validate()){\r\n            if(this.isTeamMessage(message)){\r\n                if(!roomEvents.teamMessagesQueue){\r\n                    roomEvents.teamMessagesQueue = [];\r\n                }\r\n                roomEvents.teamMessagesQueue.push(message);\r\n            }\r\n            Logger.error('Invalid TeamMessageHandler', teamMessageHandler);\r\n            return false;\r\n        }\r\n        if(!this.isTeamMessage(message)){\r\n            return false;\r\n        }\r\n        return this.handleTeamMessage(message, teamMessageHandler);\r\n    }\r\n\r\n    handleTeamMessage(message, teamMessageHandler)\r\n    {\r\n        if(TeamsConst.ACTIONS.TEAM_INVITE === message.act){\r\n            return teamMessageHandler.showTeamRequest();\r\n        }\r\n        if(TeamsConst.ACTIONS.TEAM_UPDATE === message.act){\r\n            return teamMessageHandler.showTeamBox();\r\n        }\r\n        if(TeamsConst.ACTIONS.TEAM_LEFT === message.act){\r\n            return teamMessageHandler.removeTeamUi();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isTeamMessage(message)\r\n    {\r\n        return 0 === message.act?.indexOf(TeamsConst.TEAM_PREF);\r\n    }\r\n}\r\n\r\nmodule.exports.TeamMessageListener = TeamMessageListener;\r\n","/**\r\n *\r\n * Reldens - TeamMessageHandler\r\n *\r\n */\r\n\r\nconst { UserInterface } = require('../../game/client/user-interface');\r\nconst { TeamsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass TeamMessageHandler\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.roomEvents = sc.get(props, 'roomEvents', false);\r\n        this.message = sc.get(props, 'message', false);\r\n        this.gameManager = this.roomEvents?.gameManager;\r\n        this.gameDom = this.gameManager?.gameDom;\r\n        this.uiScene = this.gameManager?.gameEngine?.uiScene;\r\n    }\r\n\r\n    validate()\r\n    {\r\n        if(!this.roomEvents){\r\n            Logger.info('Missing RoomEvents on TeamMessageHandler.');\r\n            return false;\r\n        }\r\n        if(!this.message){\r\n            Logger.info('Missing message on TeamMessageHandler.');\r\n            return false;\r\n        }\r\n        if(!this.gameManager){\r\n            Logger.info('Missing GameManager on TeamMessageHandler.');\r\n            return false;\r\n        }\r\n        // @NOTE: the message could arrive before the uiScene gets ready.\r\n        // if(!this.uiScene){\r\n        //     Logger.info('Missing UI Scene on TeamMessageHandler.');\r\n        // }\r\n        return this.uiScene;\r\n\r\n    }\r\n\r\n    showTeamRequest()\r\n    {\r\n        this.createTeamUi(this.teamUiKey());\r\n        this.roomEvents.initUi({\r\n            id: this.teamUiKey(),\r\n            title: this.gameManager.config.getWithoutLogs(\r\n                'client/team/labels/requestFromTitle',\r\n                TeamsConst.LABELS.TEAM.REQUEST_FROM\r\n            ),\r\n            content: this.message.from,\r\n            options: this.gameManager.config.get('client/ui/options/acceptOrDecline'),\r\n            overrideSendOptions: {act: TeamsConst.ACTIONS.TEAM_ACCEPTED, id: this.message.id}\r\n        });\r\n        this.gameDom.getElement('#opt-1-'+this.teamUiKey())?.addEventListener('click', () => {\r\n            this.gameDom.removeElement('.team-invite');\r\n        });\r\n        this.gameDom.getElement('#opt-2-'+this.teamUiKey())?.addEventListener('click', () => {\r\n            this.removeTeamUi();\r\n        });\r\n    }\r\n\r\n    removeTeamUi()\r\n    {\r\n        let uiElement = this.gameManager.getUiElement(this.teamUiKey());\r\n        if(!uiElement){\r\n            Logger.error('UI Element not found by team UI key \"'+this.teamUiKey()+'\".');\r\n            return false;\r\n        }\r\n        uiElement.removeElement();\r\n        delete this.uiScene.userInterfaces[this.teamUiKey()];\r\n        delete this.uiScene.elementsUi[this.teamUiKey()];\r\n        this.uiScene.currentTeam = false;\r\n    }\r\n\r\n    teamUiKey()\r\n    {\r\n        return TeamsConst.KEY + this.message.id;\r\n    }\r\n\r\n    showTeamBox()\r\n    {\r\n        let teamUiKey = this.teamUiKey();\r\n        this.createTeamUi(teamUiKey);\r\n        let title = this.gameManager.config.getWithoutLogs(\r\n            'client/team/labels/leaderNameTitle',\r\n            TeamsConst.LABELS.TEAM.LEADER_NAME_TITLE\r\n            ).replace('%leaderName', this.message.leaderName);\r\n        let container = this.gameManager.gameDom.getElement('#box-'+teamUiKey+' .box-content');\r\n        if(!container){\r\n            Logger.error('Missing container: \"#box-'+teamUiKey+' .box-content\".');\r\n            return false;\r\n        }\r\n        let uiBox = this.uiScene.elementsUi[teamUiKey];\r\n        this.roomEvents.uiSetTitle(uiBox, {title});\r\n        this.roomEvents.uiSetContent(uiBox, {content: ''}, this.uiScene);\r\n        let players = sc.get(this.message, 'players', false);\r\n        this.uiScene.currentTeam = players;\r\n        this.updateTeamBox(players, container);\r\n    }\r\n\r\n    createTeamUi(teamUiKey)\r\n    {\r\n        let teamsUi = sc.get(this.uiScene.userInterfaces, teamUiKey);\r\n        if(teamsUi){\r\n            return teamsUi;\r\n        }\r\n        if(!this.uiScene.userInterfaces){\r\n            this.uiScene.userInterfaces = {};\r\n        }\r\n        this.uiScene.userInterfaces[teamUiKey] = new UserInterface(\r\n            this.gameManager,\r\n            {id: teamUiKey, type: TeamsConst.KEY, defaultOpen: true, defaultClose: true},\r\n            '/assets/features/teams/templates/ui-teams.html',\r\n            TeamsConst.KEY\r\n        );\r\n        this.uiScene.userInterfaces[teamUiKey].createUiElement(this.uiScene, TeamsConst.KEY);\r\n        return this.uiScene.userInterfaces[teamUiKey];\r\n    }\r\n\r\n    updateTeamBox(players, container)\r\n    {\r\n        if(!players){\r\n            Logger.error('Players not defined.', players);\r\n            return;\r\n        }\r\n        let teamMembers = '';\r\n        for(let i of Object.keys(players)){\r\n            teamMembers += this.createTeamMemberBox(players[i]);\r\n        }\r\n        container.innerHTML = this.createTeamContainer(teamMembers);\r\n        this.activateTeamPlayerActions(players);\r\n        this.activateTeamLeaveButtonAction();\r\n    }\r\n\r\n    createTeamContainer(teamMembers)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let templateContent = this.uiScene.cache.html.get('teamContainer');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"teamContainer\".');\r\n            return '';\r\n        }\r\n        let playerId = this.gameManager.playerData.id.toString();\r\n        let isPlayerOwner = playerId === this.message.id.toString();\r\n        let configPath = 'client/team/labels/';\r\n        let leaveActionLabel = isPlayerOwner\r\n            ? this.gameManager.config.getWithoutLogs(configPath+'disbandLabel', TeamsConst.LABELS.TEAM.DISBAND)\r\n            : this.gameManager.config.getWithoutLogs(configPath+'leaveLabel', TeamsConst.LABELS.TEAM.LEAVE);\r\n        let templateParams = {\r\n            teamId: this.message.id,\r\n            playerId,\r\n            leaveActionLabel,\r\n            teamMembers\r\n        };\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, templateParams);\r\n    }\r\n\r\n    activateTeamLeaveButtonAction()\r\n    {\r\n        let leaveButton = this.gameManager.gameDom.getElement('.leave-'+this.gameManager.playerData.id.toString());\r\n        leaveButton?.addEventListener('click', () => {\r\n            this.roomEvents.send({\r\n                act: TeamsConst.ACTIONS.TEAM_LEAVE,\r\n                id: this.message.id\r\n            });\r\n        });\r\n    }\r\n\r\n    createTeamMemberBox(playerData)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let templateContent = this.uiScene.cache.html.get('teamPlayerData');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"teamPlayerData\".');\r\n            return '';\r\n        }\r\n        let isPlayerOwner = this.gameManager.playerData.id.toString() === this.message.id.toString();\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, {\r\n            playerId: playerData.player_id,\r\n            playerName: playerData.name,\r\n            playerProperties: this.createSharedPropertiesContent(playerData.sharedProperties),\r\n            playerRemove: isPlayerOwner ? this.createDismissPlayerButton(playerData) : ''\r\n        });\r\n    }\r\n\r\n    createDismissPlayerButton(playerData)\r\n    {\r\n        let templateContent = this.uiScene.cache.html.get('teamRemove');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"teamRemove\".');\r\n            return '';\r\n        }\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, {playerId: playerData.player_id});\r\n    }\r\n\r\n    createSharedPropertiesContent(playerSharedProperties)\r\n    {\r\n        let templateContent = this.uiScene.cache.html.get('teamsSharedProperty');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"teamsSharedProperty\".');\r\n            return '';\r\n        }\r\n        let sharedPropertiesContent = '';\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        for(let i of Object.keys(playerSharedProperties)){\r\n            templateContent = this.uiScene.cache.html.get('teamsSharedProperty');\r\n            let propertyData = playerSharedProperties[i];\r\n            let propertyMaxValue = sc.get(propertyData, 'max', '');\r\n            if('' !== propertyMaxValue){\r\n                propertyMaxValue = this.gameManager.config.getWithoutLogs(\r\n                    'client/team/labels/propertyMaxValue',\r\n                    TeamsConst.LABELS.TEAM.PROPERTY_MAX_VALUE\r\n                    ).replace('%propertyMaxValue', propertyMaxValue);\r\n            }\r\n            sharedPropertiesContent += this.gameManager.gameEngine.parseTemplate(templateContent, {\r\n                key: i,\r\n                label: propertyData.label,\r\n                value: propertyData.value,\r\n                max: propertyMaxValue\r\n            });\r\n        }\r\n        return sharedPropertiesContent;\r\n    }\r\n\r\n    activateTeamPlayerActions(playersData)\r\n    {\r\n        for(let i of Object.keys(playersData)){\r\n            let playerData = playersData[i];\r\n            let selectorPlayerName = '.team-player-'+playerData.player_id+' .player-name';\r\n            this.gameDom.getElement(selectorPlayerName)?.addEventListener('click', () => {\r\n                this.gameManager.getCurrentPlayer().setTargetPlayerById(playerData.sessionId);\r\n            });\r\n            let selectorPlayerProperties = '.team-player-'+playerData.player_id+' .properties-list-container';\r\n            this.gameDom.getElement(selectorPlayerProperties)?.addEventListener('click', () => {\r\n                this.gameManager.getCurrentPlayer().setTargetPlayerById(playerData.sessionId);\r\n            });\r\n            let selectorPlayerRemove = '.team-player-'+playerData.player_id+' .team-remove-button';\r\n            this.gameDom.getElement(selectorPlayerRemove)?.addEventListener('click', () => {\r\n                this.roomEvents.send({\r\n                    act: TeamsConst.ACTIONS.TEAM_REMOVE,\r\n                    id: this.message.id,\r\n                    remove: playerData.player_id\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.TeamMessageHandler = TeamMessageHandler;\r\n","/**\r\n *\r\n * Reldens - ClanMessageListener\r\n *\r\n */\r\n\r\nconst { ClanMessageHandler } = require('./clan-message-handler');\r\nconst { TeamsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ClanMessageListener\r\n{\r\n\r\n    async executeClientMessageActions(props)\r\n    {\r\n        let message = sc.get(props, 'message', false);\r\n        if(!message){\r\n            Logger.error('Missing message data on ClanMessageListener.', props);\r\n            return false;\r\n        }\r\n        let roomEvents = sc.get(props, 'roomEvents', false);\r\n        if(!roomEvents){\r\n            Logger.error('Missing RoomEvents on ClanMessageListener.', props);\r\n            return false;\r\n        }\r\n        let clanMessageHandler = new ClanMessageHandler({roomEvents, message});\r\n        if(!clanMessageHandler.validate()){\r\n            if(this.isClanMessage(message)){\r\n                if(!roomEvents.clanMessagesQueue){\r\n                    roomEvents.clanMessagesQueue = [];\r\n                }\r\n                roomEvents.clanMessagesQueue.push(message);\r\n            }\r\n            return false;\r\n        }\r\n        if(!this.isClanMessage(message)){\r\n            return false;\r\n        }\r\n        return this.handleClanMessage(message, clanMessageHandler);\r\n    }\r\n\r\n    handleClanMessage(message, clanMessageHandler)\r\n    {\r\n        if(TeamsConst.ACTIONS.CLAN_INITIALIZE === message.act){\r\n            return clanMessageHandler.initializeClanUi();\r\n        }\r\n        if(TeamsConst.ACTIONS.CLAN_CREATE === message.act){\r\n            if(TeamsConst.VALIDATION.SUCCESS === message.result){\r\n                return clanMessageHandler.showNewClan();\r\n            }\r\n            return clanMessageHandler.initializeClanUi();\r\n        }\r\n        if(TeamsConst.ACTIONS.CLAN_INVITE === message.act){\r\n            return clanMessageHandler.showClanRequest();\r\n        }\r\n        if(TeamsConst.ACTIONS.CLAN_UPDATE === message.act){\r\n            return clanMessageHandler.showClanBox();\r\n        }\r\n        if(TeamsConst.ACTIONS.CLAN_LEFT === message.act){\r\n            return clanMessageHandler.removeClanUi();\r\n        }\r\n        if(TeamsConst.ACTIONS.CLAN_REMOVED){\r\n            clanMessageHandler.removeClanUi();\r\n            return clanMessageHandler.initializeClanUi();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isClanMessage(message)\r\n    {\r\n        return 0 === message.act?.indexOf(TeamsConst.CLAN_PREF);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ClanMessageListener = ClanMessageListener;\r\n","/**\r\n *\r\n * Reldens - ClanMessageHandler\r\n *\r\n */\r\n\r\nconst { UserInterface } = require('../../game/client/user-interface');\r\nconst { TeamsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ClanMessageHandler\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.roomEvents = sc.get(props, 'roomEvents', false);\r\n        this.message = sc.get(props, 'message', false);\r\n        this.gameManager = this.roomEvents?.gameManager;\r\n        this.gameDom = this.gameManager?.gameDom;\r\n        this.uiScene = this.gameManager?.gameEngine?.uiScene;\r\n    }\r\n\r\n    validate()\r\n    {\r\n        if(!this.roomEvents){\r\n            Logger.info('Missing RoomEvents on ClanMessageHandler.');\r\n            return false;\r\n        }\r\n        if(!this.message){\r\n            Logger.info('Missing message on ClanMessageHandler.');\r\n            return false;\r\n        }\r\n        if(!this.gameManager){\r\n            Logger.info('Missing GameManager on ClanMessageHandler.');\r\n            return false;\r\n        }\r\n        if(!this.uiScene){\r\n            // @NOTE: the message could arrive before the uiScene gets ready.\r\n            // Logger.info('Missing UI Scene on ClanMessageHandler.');\r\n            return false;\r\n        }\r\n        return this.gameManager.playerData?.id;\r\n\r\n    }\r\n\r\n    initializeClanUi()\r\n    {\r\n        this.uiScene.currentClan = false;\r\n        let clanUi = this.createClanUi();\r\n        let title = this.gameManager.config.getWithoutLogs(\r\n            'client/clan/labels/createClanTitle',\r\n            TeamsConst.LABELS.CLAN.CREATE_CLAN_TITLE\r\n        );\r\n        let container = this.gameManager.gameDom.getElement('.clan-dialog-box .box-content');\r\n        if(!container){\r\n            Logger.error('Missing container: \"#box-clan .box-content\".');\r\n            return false;\r\n        }\r\n        let uiBox = this.uiScene.elementsUi[TeamsConst.CLAN_KEY];\r\n        if(!uiBox){\r\n            Logger.error('Clan UI box not found.', {clanUi, container, uiBox});\r\n            return false;\r\n        }\r\n        this.roomEvents.uiSetTitle(uiBox, {title});\r\n        this.roomEvents.uiSetContent(uiBox, {content: this.createClanContent()}, this.uiScene);\r\n        this.activateCreateButton();\r\n        this.addAndRemoveCaptureKeys();\r\n    }\r\n\r\n    showNewClan()\r\n    {\r\n        let clanUi = this.createClanUi();\r\n        let title = this.gameManager.config.getWithoutLogs(\r\n            'client/clan/labels/clanTitle',\r\n            TeamsConst.LABELS.CLAN.CLAN_TITLE\r\n        ).replace('%clanName', this.message.clanName)\r\n        .replace('%leaderName', this.gameManager.currentPlayerName());\r\n        let container = this.gameManager.gameDom.getElement('.clan-dialog-box .box-content');\r\n        if(!container){\r\n            Logger.error('Missing container: \".clan-dialog-box .box-content\".');\r\n            return false;\r\n        }\r\n        let uiBox = this.uiScene.elementsUi[TeamsConst.CLAN_KEY];\r\n        if(!uiBox){\r\n            Logger.error('Clan UI box not found.', {clanUi, container, uiBox});\r\n            return false;\r\n        }\r\n        this.roomEvents.uiSetTitle(uiBox, {title});\r\n        this.roomEvents.uiSetContent(uiBox, {content: ''}, this.uiScene);\r\n        this.updateClanBox(container);\r\n        this.setClanFromMessage();\r\n    }\r\n\r\n    showClanRequest()\r\n    {\r\n        this.createClanUi();\r\n        this.roomEvents.initUi({\r\n            id: TeamsConst.CLAN_KEY,\r\n            title: this.gameManager.config.getWithoutLogs(\r\n                'client/clan/labels/requestFromTitle',\r\n                TeamsConst.LABELS.CLAN.REQUEST_FROM\r\n            ),\r\n            content: this.message.from,\r\n            options: this.gameManager.config.get('client/ui/options/acceptOrDecline'),\r\n            overrideSendOptions: {act: TeamsConst.ACTIONS.CLAN_ACCEPTED, id: this.message.id}\r\n        });\r\n        this.gameDom.getElement('#opt-2-clan')?.addEventListener('click', () => {\r\n            this.initializeClanUi();\r\n        });\r\n    }\r\n\r\n    showClanBox()\r\n    {\r\n        this.createClanUi();\r\n        let title = this.gameManager.config.getWithoutLogs(\r\n            'client/clan/labels/clanTitle',\r\n            TeamsConst.LABELS.CLAN.CLAN_TITLE\r\n        )\r\n            .replace('%clanName', this.message.clanName)\r\n            .replace('%leaderName', this.message.leaderName);\r\n        let container = this.gameManager.gameDom.getElement('#box-clan .box-content');\r\n        if(!container){\r\n            Logger.error('Missing container: \"#box-clan .box-content\".');\r\n            return false;\r\n        }\r\n        let uiBox = this.uiScene.elementsUi[TeamsConst.CLAN_KEY];\r\n        this.roomEvents.uiSetTitle(uiBox, {title});\r\n        this.roomEvents.uiSetContent(uiBox, {content: ''}, this.uiScene);\r\n        this.setClanFromMessage();\r\n        this.updateClanBox(container);\r\n    }\r\n\r\n    setClanFromMessage()\r\n    {\r\n        let players = sc.get(this.message, 'players', false);\r\n        let members = sc.get(this.message, 'members', false);\r\n        this.uiScene.currentClan = {\r\n            id: this.message.id,\r\n            name: this.message.clanName,\r\n            leader: this.message.leaderName,\r\n            ownerId: this.message.ownerId,\r\n            players,\r\n            members\r\n        };\r\n    }\r\n\r\n    removeClanUi()\r\n    {\r\n        let uiElement = this.gameManager.getUiElement(TeamsConst.CLAN_KEY);\r\n        if(!uiElement){\r\n            Logger.error('Clan UI Element not found for remove.');\r\n            return false;\r\n        }\r\n        uiElement.removeElement();\r\n        delete this.uiScene.userInterfaces[TeamsConst.CLAN_KEY];\r\n        delete this.uiScene.elementsUi[TeamsConst.CLAN_KEY];\r\n    }\r\n\r\n    createClanUi()\r\n    {\r\n        let clanUi = sc.get(this.uiScene.userInterfaces, TeamsConst.CLAN_KEY);\r\n        if(clanUi){\r\n            return clanUi;\r\n        }\r\n        if(!this.uiScene.userInterfaces){\r\n            this.uiScene.userInterfaces = {};\r\n        }\r\n        this.uiScene.userInterfaces[TeamsConst.CLAN_KEY] = new UserInterface(\r\n            this.gameManager,\r\n            {id: TeamsConst.CLAN_KEY, type: TeamsConst.CLAN_KEY, defaultOpen: true, defaultClose: true},\r\n            '/assets/features/teams/templates/ui-clan.html',\r\n            TeamsConst.CLAN_KEY\r\n        );\r\n        this.uiScene.userInterfaces[TeamsConst.CLAN_KEY].createUiElement(this.uiScene, TeamsConst.CLAN_KEY);\r\n        return this.uiScene.userInterfaces[TeamsConst.CLAN_KEY];\r\n    }\r\n\r\n    createClanContent()\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let templateContent = this.uiScene.cache.html.get('clanCreate');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"clanCreate\".');\r\n            return '';\r\n        }\r\n        let templateParams = {\r\n            playerId: this.gameManager.playerData.id.toString(),\r\n            createLabel: this.gameManager.config.getWithoutLogs(\r\n                'client/clan/labels/createLabel',\r\n                TeamsConst.LABELS.CLAN.CREATE\r\n            ),\r\n            clanNamePlaceholder: this.gameManager.config.getWithoutLogs(\r\n                'client/clan/labels/namePlaceholder',\r\n                TeamsConst.LABELS.CLAN.NAME_PLACEHOLDER\r\n            )\r\n        };\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, templateParams);\r\n    }\r\n\r\n    activateCreateButton()\r\n    {\r\n        let createButton = this.gameManager.gameDom.getElement('.clan-dialog-box .submit-clan-create');\r\n        if(!createButton){\r\n            Logger.warning('Clan create button not found by \".clan-dialog-box .clan-create\".');\r\n            return false;\r\n        }\r\n        let nameInput = this.gameManager.gameDom.getElement('.clan-dialog-box .clan-name-input');\r\n        if(!nameInput){\r\n            Logger.warning('Clan create button not found by \".clan-dialog-box .clan-name-input\".');\r\n            return false;\r\n        }\r\n        createButton.addEventListener('click', () => {\r\n            if(0 === nameInput.value.length){\r\n                return false;\r\n            }\r\n            this.gameManager.gameDom.updateContent(\r\n                '.clan-dialog-box .box-content',\r\n                this.uiScene.cache.html.get('uiLoading')\r\n            );\r\n            this.gameManager.activeRoomEvents.send({\r\n                act: TeamsConst.ACTIONS.CLAN_CREATE,\r\n                [TeamsConst.ACTIONS.CLAN_NAME]: nameInput.value\r\n            });\r\n        });\r\n    }\r\n\r\n    updateClanBox(container)\r\n    {\r\n        let players = sc.get(this.message, 'players', []);\r\n        let connectedPlayersKeys = Object.keys(players);\r\n        let clanPlayers = 0 === connectedPlayersKeys.length ? this.gameManager.config.getWithoutLogs(\r\n            'client/clan/labels/noneConnected',\r\n            TeamsConst.LABELS.CLAN.NONE_CONNECTED\r\n        ) : '';\r\n        for(let i of connectedPlayersKeys){\r\n            clanPlayers += this.createClanPlayerBox(players[i]);\r\n        }\r\n        let isPlayerOwner = this.gameManager.playerData.id.toString() === this.message.ownerId.toString();\r\n        let members = sc.get(this.message, 'members', []);\r\n        let clanMembers = '';\r\n        for(let i of Object.keys(members)){\r\n            clanMembers += this.createClanMemberBox(members[i], isPlayerOwner);\r\n        }\r\n        container.innerHTML = this.createClanContainer(clanPlayers, clanMembers);\r\n        this.activateClanPlayersActions(players);\r\n        this.activateClanMembersActions(members);\r\n        this.activateClanLeaveButtonAction();\r\n    }\r\n\r\n    addAndRemoveCaptureKeys()\r\n    {\r\n        let dynamicScene = this.gameManager.getActiveScene();\r\n        let keys = dynamicScene.availableControllersKeyCodes();\r\n        let inputElement = this.gameManager.gameDom.getElement('.clan-name-input');\r\n        dynamicScene.addAndRemoveCapture(keys, inputElement);\r\n    }\r\n\r\n    createClanContainer(clanPlayers, clanMembers)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let templateContent = this.uiScene.cache.html.get('clanContainer');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"clanContainer\".');\r\n            return '';\r\n        }\r\n        let isPlayerOwner = this.gameManager.playerData.id.toString() === this.message.ownerId.toString();\r\n        let leaveActionLabel = isPlayerOwner\r\n            ? this.gameManager.config.getWithoutLogs('client/clan/labels/disbandLabel', TeamsConst.LABELS.CLAN.DISBAND)\r\n            : this.gameManager.config.getWithoutLogs('client/clan/labels/leaveLabel', TeamsConst.LABELS.CLAN.LEAVE);\r\n        let templateParams = {\r\n            clanId: this.message.id,\r\n            playerId: this.gameManager.playerData.id.toString(),\r\n            leaveActionLabel: leaveActionLabel,\r\n            clanPlayersTitle: this.gameManager.config.getWithoutLogs(\r\n                'client/clan/labels/clanPlayersTitle',\r\n                TeamsConst.LABELS.CLAN.PLAYERS_TITLE\r\n            ),\r\n            clanPlayers,\r\n            clanMembersTitle: this.gameManager.config.getWithoutLogs(\r\n                'client/clan/labels/clanMembersTitle',\r\n                TeamsConst.LABELS.CLAN.MEMBERS_TITLE\r\n            ),\r\n            clanMembers\r\n        };\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, templateParams);\r\n    }\r\n\r\n    activateClanLeaveButtonAction()\r\n    {\r\n        let leaveButton = this.gameManager.gameDom.getElement('.leave-'+this.message.id);\r\n        leaveButton?.addEventListener('click', () => {\r\n            let sendData = {\r\n                act: TeamsConst.ACTIONS.CLAN_LEAVE,\r\n                id: this.message.id\r\n            };\r\n            this.gameManager.activeRoomEvents.send(sendData);\r\n        });\r\n    }\r\n\r\n    createClanPlayerBox(playerData)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let templateContent = this.uiScene.cache.html.get('clanPlayerData');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"clanPlayerData\".');\r\n            return '';\r\n        }\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, {\r\n            playerId: playerData.player_id,\r\n            playerName: playerData.name,\r\n            playerProperties: this.createSharedPropertiesContent(playerData.sharedProperties),\r\n        });\r\n    }\r\n\r\n    createClanMemberBox(playerData, isPlayerOwner)\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let templateContent = this.uiScene.cache.html.get('clanMemberData');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"clanMemberData\".');\r\n            return '';\r\n        }\r\n        let showPlayerRemove = playerData.id.toString() !== this.message.ownerId.toString();\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, {\r\n            playerId: playerData.id.toString(),\r\n            playerName: playerData.name,\r\n            clanRemove: isPlayerOwner && showPlayerRemove ? this.createDismissPlayerButton(playerData) : ''\r\n        });\r\n    }\r\n\r\n    createDismissPlayerButton(playerData)\r\n    {\r\n        let templateContent = this.uiScene.cache.html.get('clanRemove');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"clanRemove\".');\r\n            return '';\r\n        }\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, {playerId: playerData.id.toString()});\r\n    }\r\n\r\n    createSharedPropertiesContent(playerSharedProperties)\r\n    {\r\n        let templateContent = this.uiScene.cache.html.get('teamsSharedProperty');\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"teamsSharedProperty\".');\r\n            return '';\r\n        }\r\n        let sharedPropertiesContent = '';\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        for(let i of Object.keys(playerSharedProperties)){\r\n            templateContent = this.uiScene.cache.html.get('teamsSharedProperty');\r\n            let propertyData = playerSharedProperties[i];\r\n            let propertyMaxValue = sc.get(propertyData, 'max', '');\r\n            if('' !== propertyMaxValue){\r\n                propertyMaxValue = this.gameManager.config.getWithoutLogs(\r\n                    'client/clan/labels/propertyMaxValue',\r\n                    TeamsConst.LABELS.CLAN.PROPERTY_MAX_VALUE\r\n                ).replace('%propertyMaxValue', propertyMaxValue);\r\n            }\r\n            sharedPropertiesContent += this.gameManager.gameEngine.parseTemplate(templateContent, {\r\n                key: i,\r\n                label: propertyData.label,\r\n                value: propertyData.value,\r\n                max: propertyMaxValue\r\n            });\r\n        }\r\n        return sharedPropertiesContent;\r\n    }\r\n\r\n    activateClanPlayersActions(playersData)\r\n    {\r\n        for(let i of Object.keys(playersData)){\r\n            let playerData = playersData[i];\r\n            let selectorPlayerName = '.clan-player-'+i+' .player-name';\r\n            let selectorPlayerProperties = '.clan-player-'+i+' .properties-list-container';\r\n            let playerNameElement = this.gameDom.getElement(selectorPlayerName);\r\n            if(!playerNameElement){\r\n                Logger.notice('Player name element not found.', selectorPlayerName);\r\n            }\r\n            playerNameElement?.addEventListener('click', () => {\r\n                this.gameManager.getCurrentPlayer().setTargetPlayerById(playerData.sessionId);\r\n            });\r\n            let playerPropertiesElement = this.gameDom.getElement(selectorPlayerProperties);\r\n            if(!playerNameElement){\r\n                Logger.notice('Player properties element not found.', selectorPlayerProperties);\r\n            }\r\n            playerPropertiesElement?.addEventListener('click', () => {\r\n                this.gameManager.getCurrentPlayer().setTargetPlayerById(playerData.sessionId);\r\n            });\r\n        }\r\n    }\r\n\r\n    activateClanMembersActions(membersData)\r\n    {\r\n        for(let i of Object.keys(membersData)){\r\n            let memberData = membersData[i];\r\n            let selectorPlayerRemove = '.clan-member-' + memberData.id + ' .clan-remove-button';\r\n            this.gameDom.getElement(selectorPlayerRemove)?.addEventListener('click', () => {\r\n                this.gameManager.activeRoomEvents.send({\r\n                    act: TeamsConst.ACTIONS.CLAN_REMOVE,\r\n                    id: this.message.id,\r\n                    remove: memberData.id\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ClanMessageHandler = ClanMessageHandler;\r\n","/**\r\n *\r\n * Reldens - MessagesProcessor\r\n *\r\n */\r\n\r\nconst { ClanMessageHandler } = require('./clan-message-handler');\r\nconst { TeamMessageHandler } = require('./team-message-handler');\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass MessagesProcessor\r\n{\r\n\r\n    static processClanMessagesQueue(roomEvents, clanMessageListener)\r\n    {\r\n        if(!sc.isArray(roomEvents.clanMessagesQueue)){\r\n            return;\r\n        }\r\n        if(0 === roomEvents.clanMessagesQueue.length){\r\n            return;\r\n        }\r\n        for(let message of roomEvents.clanMessagesQueue){\r\n            clanMessageListener.handleClanMessage(message, new ClanMessageHandler({roomEvents, message}));\r\n        }\r\n        roomEvents.clanMessagesQueue = [];\r\n    }\r\n\r\n    static processTeamMessagesQueue(roomEvents, teamMessageListener)\r\n    {\r\n        if(!sc.isArray(roomEvents.teamMessagesQueue)){\r\n            return;\r\n        }\r\n        if(0 === roomEvents.teamMessagesQueue.length){\r\n            return;\r\n        }\r\n        for(let message of roomEvents.teamMessagesQueue){\r\n            teamMessageListener.handleTeamMessage(message, new TeamMessageHandler({roomEvents, message}));\r\n        }\r\n        roomEvents.teamMessagesQueue = [];\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MessageProcessor = MessagesProcessor;\r\n","/**\r\n *\r\n * Reldens - TemplatesHandler\r\n *\r\n */\r\n\r\nconst { TeamsConst } = require('../constants');\r\n\r\nclass TemplatesHandler\r\n{\r\n\r\n    static preloadTemplates(preloadScene)\r\n    {\r\n        let teamsTemplatePath = '/assets/features/teams/templates/';\r\n        preloadScene.load.html(TeamsConst.KEY, teamsTemplatePath+'ui-teams.html');\r\n        preloadScene.load.html(TeamsConst.CLAN_KEY, teamsTemplatePath+'ui-clan.html');\r\n        preloadScene.load.html('teamPlayerInvite', teamsTemplatePath+'team-invite.html');\r\n        preloadScene.load.html('teamPlayerAccept', teamsTemplatePath+'team-accept.html');\r\n        preloadScene.load.html('teamRemove', teamsTemplatePath+'team-remove.html');\r\n        preloadScene.load.html('teamContainer', teamsTemplatePath+'team-container.html');\r\n        preloadScene.load.html('teamPlayerData', teamsTemplatePath+'team-player-data.html');\r\n        preloadScene.load.html('clanCreate', teamsTemplatePath+'clan-create.html');\r\n        preloadScene.load.html('clanPlayerInvite', teamsTemplatePath+'clan-invite.html');\r\n        preloadScene.load.html('clanPlayerAccept', teamsTemplatePath+'clan-accept.html');\r\n        preloadScene.load.html('clanRemove', teamsTemplatePath+'clan-remove.html');\r\n        preloadScene.load.html('clanContainer', teamsTemplatePath+'clan-container.html');\r\n        preloadScene.load.html('clanPlayerData', teamsTemplatePath+'clan-player-data.html');\r\n        preloadScene.load.html('clanMemberData', teamsTemplatePath+'clan-member-data.html');\r\n        preloadScene.load.html('teamsSharedProperty', teamsTemplatePath+'shared-property.html');\r\n    }\r\n\r\n}\r\nmodule.exports.TemplatesHandler = TemplatesHandler;\r\n","/**\r\n *\r\n * Reldens - Snippets Client Plugin\r\n *\r\n */\r\n\r\nconst { Translator } = require('../translator');\r\nconst { SnippetsUi } = require('./snippets-ui');\r\nconst { TemplatesHandler } = require('./templates-handler');\r\nconst { TranslationsMapper } = require('./translations-mapper');\r\nconst Translations = require('./snippets/en_US');\r\nconst { SnippetsConst } = require('../constants');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass SnippetsPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in InventoryPlugin.');\r\n            return false;\r\n        }\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in InventoryPlugin.');\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations);\r\n        this.activeLocale = this.gameManager.initialGameData?.userLocale?.locale.locale || SnippetsConst.DEFAULT_LOCALE;\r\n        this.gameManager.services.translator = new Translator({\r\n            snippets: Object.assign({}, this.gameManager.config.client.snippets),\r\n            dataValues: Object.assign({}, this.gameManager.config.client.snippetsDataValues),\r\n            locale: SnippetsConst.DEFAULT_LOCALE,\r\n            activeLocale: this.activeLocale\r\n        });\r\n        this.listenEvents();\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events){\r\n            return false;\r\n        }\r\n        this.events.on('reldens.startEngineScene', async (roomEvents, player, room, previousScene) => {\r\n            // @TODO - BETA - Test for possible differences.\r\n            // re-assign the snippets after all the plugins added their own sets (search TranslationsMapper.forConfig)\r\n            this.gameManager.services.translator.snippets = Object.assign(\r\n                this.gameManager.services.translator.snippets,\r\n                this.gameManager.config.client.snippets\r\n            );\r\n        });\r\n        this.events.on('reldens.preloadUiScene', (preloadScene) => {\r\n            TemplatesHandler.preloadTemplates(preloadScene);\r\n        });\r\n        this.events.on('reldens.createUiScene', (preloadScene) => {\r\n            this.uiManager = new SnippetsUi(preloadScene);\r\n            this.uiManager.createUi();\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.SnippetsPlugin = SnippetsPlugin;\r\n","/**\r\n *\r\n * Reldens - Translator\r\n *\r\n */\r\n\r\nconst { SnippetsConst } = require('./constants');\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass Translator\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.snippets = sc.get(props, 'snippets', {});\r\n        this.dataValues = sc.get(props, 'dataValues', {});\r\n        this.locale = sc.get(props, 'locale', SnippetsConst.DEFAULT_LOCALE);\r\n        this.activeLocale = sc.get(props, 'activeLocale', SnippetsConst.DEFAULT_LOCALE);\r\n    }\r\n\r\n    translate(snippetKey, params = {}, activeLocale = false)\r\n    {\r\n        if(!activeLocale){\r\n            activeLocale = this.activeLocale;\r\n        }\r\n        let currentSnippet = sc.get(this.snippets[activeLocale], snippetKey, snippetKey);\r\n        if(snippetKey === currentSnippet){\r\n            return snippetKey;\r\n        }\r\n        if(!sc.isObject(params)){\r\n            return currentSnippet;\r\n        }\r\n        let paramsKeys = Object.keys(params);\r\n        if(0 === paramsKeys.length){\r\n            return currentSnippet;\r\n        }\r\n        let nameSpace = this.snippetNameSpace(snippetKey);\r\n        for(let i of paramsKeys){\r\n            let param = params[i];\r\n            let replaceKey = '%'+((this.dataValues[nameSpace] || {})[i] || i);\r\n            while(-1 !== currentSnippet.indexOf(replaceKey)){\r\n                currentSnippet = currentSnippet.replace(replaceKey, param);\r\n            }\r\n        }\r\n        return currentSnippet;\r\n    }\r\n\r\n    snippetNameSpace(snippetKey)\r\n    {\r\n        let keys = snippetKey.split('.');\r\n        if(1 === keys.length){\r\n            return SnippetsConst.DATA_VALUES_DEFAULT_NAMESPACE;\r\n        }\r\n        return keys[0];\r\n    }\r\n\r\n    t(snippetKey, params = {}, activeLocale = false)\r\n    {\r\n        return this.translate(snippetKey, params, activeLocale);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.Translator = Translator;\r\n","/**\r\n *\r\n * Reldens - SnippetsUi\r\n *\r\n */\r\n\r\nconst { SnippetsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass SnippetsUi\r\n{\r\n\r\n    constructor(uiScene)\r\n    {\r\n        this.uiScene = uiScene;\r\n        this.gameManager = this.uiScene.gameManager;\r\n        this.translator = this.gameManager.services.translator;\r\n        this.locales = {};\r\n    }\r\n\r\n    createUi()\r\n    {\r\n        this.locales = sc.get(this.gameManager.config.client, 'locales',  {});\r\n        let localesKeys = Object.keys(this.locales);\r\n        // if there's only one locale then don't show the locale selector:\r\n        if(1 >= localesKeys.length){\r\n            return false;\r\n        }\r\n        let snippetsSettings = this.gameManager.gameEngine.parseTemplate(\r\n            this.uiScene.cache.html.get(SnippetsConst.KEY),\r\n            {\r\n                snippetsTitle: this.translator.t('translator.title'),\r\n                snippetsLabel: this.translator.t('translator.label'),\r\n                snippetsNotification: this.translator.t('translator.notification')\r\n            }\r\n        );\r\n        let appendResult = this.gameManager.gameDom.appendToElement('#settings-dynamic', snippetsSettings);\r\n        if(!appendResult){\r\n            Logger.warning('Could not append snippets settings.');\r\n            return false;\r\n        }\r\n        let localeSelector = this.gameManager.gameDom.getElement('.snippets-setting');\r\n        if(!localeSelector){\r\n            Logger.warning('Snippets settings container not available.');\r\n            return false;\r\n        }\r\n        for(let i of localesKeys){\r\n            let locale = this.locales[i];\r\n            let localeOption = this.gameManager.gameDom.createElement('option');\r\n            localeOption.value = locale.id;\r\n            localeOption.innerHTML = locale.country_code;\r\n            localeSelector.appendChild(localeOption);\r\n        }\r\n        localeSelector.addEventListener('change', async () => {\r\n            this.gameManager.activeRoomEvents.send({\r\n                act: SnippetsConst.ACTIONS.UPDATE,\r\n                up: localeSelector.value\r\n            })\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.SnippetsUi = SnippetsUi;\r\n","/**\r\n *\r\n * Reldens - TemplatesHandler\r\n *\r\n */\r\n\r\nconst { SnippetsConst } = require('../constants');\r\n\r\nclass TemplatesHandler\r\n{\r\n\r\n    static preloadTemplates(preloadScene)\r\n    {\r\n        let teamsTemplatePath = '/assets/features/snippets/templates/';\r\n        preloadScene.load.html(SnippetsConst.KEY, teamsTemplatePath+'ui-snippets.html');\r\n    }\r\n\r\n}\r\nmodule.exports.TemplatesHandler = TemplatesHandler;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    translator: {\r\n        title: 'Languages Settings',\r\n        label: 'Choose your language:',\r\n        notification: 'Changes will take place after next login.'\r\n    }\r\n}\r\n","/**\r\n *\r\n * Reldens - AdsPlugin\r\n *\r\n*/\r\n\r\nconst { MessagesListener } = require('./messages-listener');\r\nconst { SdkHandler } = require('./sdk-handler');\r\nconst { ProvidersList } = require('./providers-list');\r\nconst Translations = require('./snippets/en_US');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst { AdsConst } = require('../constants');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass AdsPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in AdsPlugin.');\r\n        }\r\n        this.events = sc.get(props, 'events', false);\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in AdsPlugin.');\r\n        }\r\n        this.config = {};\r\n        this.activeProviders = {};\r\n        this.playedAds = null;\r\n        this.setConfig();\r\n        this.setSkdHandler();\r\n        this.fetchActiveProviders();\r\n        this.setTranslations();\r\n        this.listenEvents();\r\n    }\r\n\r\n    setConfig()\r\n    {\r\n        this.config = this.gameManager ? this.gameManager.config.get('client/ads/general', {}) : false;\r\n    }\r\n\r\n    setSkdHandler()\r\n    {\r\n        let gameDom = this.gameManager?.gameDom;\r\n        this.sdkHandler = gameDom ? new SdkHandler({gameDom, config: this.config}) : false;\r\n    }\r\n\r\n    fetchActiveProviders()\r\n    {\r\n        let providers = sc.get(this.config, 'providers', {});\r\n        let providersKeys = Object.keys(providers);\r\n        if(0 === providersKeys.length){\r\n            //Logger.debug('None ads providers configured.', this.config);\r\n            return false;\r\n        }\r\n        for(let i of providersKeys){\r\n            let provider = providers[i];\r\n            if(!provider.enabled){\r\n                //Logger.debug({'Provider disabled': providers});\r\n                continue;\r\n            }\r\n            provider.classDefinition = sc.get(ProvidersList, i, false);\r\n            this.activeProviders[i] = provider;\r\n        }\r\n    }\r\n\r\n    setTranslations()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations, AdsConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events || !this.gameManager || !this.sdkHandler){\r\n            Logger.error('Missing properties for AdsPlugin.');\r\n            return false;\r\n        }\r\n        this.events.on('reldens.beforeCreateEngine', async (initialGameData, gameManager) => {\r\n            if(!this.sdkHandler){\r\n                Logger.info('Undefined SDK Handler.');\r\n                return;\r\n            }\r\n            await this.sdkHandler.setupProvidersSdk(this.activeProviders, gameManager);\r\n        });\r\n        this.events.on('reldens.joinedRoom', async (room) => {\r\n            await MessagesListener.listenMessages(room, this);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.AdsPlugin = AdsPlugin;\r\n","/**\r\n *\r\n * Reldens - MessagesListener\r\n *\r\n */\r\n\r\nconst { AdsConst } = require('../constants');\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass MessagesListener\r\n{\r\n\r\n    static async listenMessages(room, adsPlugin)\r\n    {\r\n        room.onMessage('*', (message) => {\r\n            if(AdsConst.ACTIONS.ADS_PLAYED !== message.act){\r\n                return false;\r\n            }\r\n            adsPlugin.playedAds = {};\r\n            if(!message.playedAdsModels){\r\n                Logger.info('None played ads.', message);\r\n                return false;\r\n            }\r\n            for(let playedAd of message.playedAdsModels){\r\n                adsPlugin.playedAds[playedAd.ads_id] = playedAd;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MessagesListener = MessagesListener;\r\n","/**\r\n *\r\n * Reldens - AdsConst\r\n *\r\n */\r\n\r\nmodule.exports.AdsConst = {\r\n    ENVIRONMENTS: {\r\n        DISABLED: 'disabled'\r\n    },\r\n    ADS_TYPES: {\r\n        EVENT_VIDEO: 'eventVideo',\r\n        BANNER: 'banner'\r\n    },\r\n    ACTIONS: {\r\n        ADS_PLAYED: 'adsP',\r\n        AD_STARTED: 'adS',\r\n        AD_ENDED: 'adE',\r\n    },\r\n    MESSAGE: {\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'ads'\r\n        }\r\n    },\r\n    AWAIT_ADS_TIME: 1000,\r\n    VIDEOS_MINIMUM_DURATION: 3000\r\n};\r\n","/**\r\n *\r\n * Reldens - SdkHandler\r\n *\r\n */\r\n\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass SdkHandler\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.gameDom = sc.get(props, 'gameDom', false);\r\n    }\r\n\r\n    async setupProvidersSdk(providers, gameManager)\r\n    {\r\n        if(!this.gameDom){\r\n            Logger.error('Undefined GameDOM on SdkHandler.');\r\n            return false;\r\n        }\r\n        if(!sc.isObject(providers)){\r\n            //Logger.debug('Providers not available.');\r\n            return false;\r\n        }\r\n        let keys = Object.keys(providers);\r\n        if(0 === keys.length){\r\n            //Logger.debug('Providers not found.');\r\n            return false;\r\n        }\r\n        for(let i of keys){\r\n            let provider = providers[i];\r\n            await this.appendSdk(provider);\r\n            await this.activateSdkInstance(provider, gameManager);\r\n            Logger.info('Activated Ads SDK: '+provider.key, provider);\r\n        }\r\n    }\r\n\r\n    async appendSdk(provider)\r\n    {\r\n        let sdkUrl = sc.get(provider, 'sdkUrl', '');\r\n        if('' === sdkUrl){\r\n            //Logger.debug('Provider does not have an SDK URL.', provider);\r\n            return false;\r\n        }\r\n        let body = this.gameDom.getElement('body');\r\n        let sdkSource = this.gameDom.createElement('script');\r\n        sdkSource.src = sdkUrl;\r\n        body.append(sdkSource);\r\n        return true;\r\n    }\r\n\r\n    async activateSdkInstance(provider, gameManager)\r\n    {\r\n        if(provider.classDefinition){\r\n            provider.service = new provider.classDefinition(provider, gameManager, provider.activeAds);\r\n        }\r\n        if(sc.isFunction(provider.service?.activate)){\r\n            await provider.service.activate();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.SdkHandler = SdkHandler;\r\n","/**\r\n *\r\n * Reldens - ProvidersList\r\n *\r\n */\r\n\r\nconst { CrazyGames } = require('./providers/crazy-games');\r\nconst { GameMonetize } = require('./providers/game-monetize');\r\nconst { GoogleAdSense } = require('./providers/google-ad-sense');\r\n\r\nmodule.exports.ProvidersList = {\r\n    crazyGames: CrazyGames,\r\n    gameMonetize: GameMonetize,\r\n    googleAdSense: GoogleAdSense\r\n};\r\n","/**\r\n *\r\n * Reldens - CrazyGames\r\n *\r\n * SDK documentation: https://docs.crazygames.com/sdk/html5-v2/#request-banner\r\n *\r\n */\r\n\r\nconst { BannersHandler } = require('./crazy-games/banners-handler');\r\nconst { VideosHandler } = require('./crazy-games/videos-handler');\r\nconst { AdsProvider } = require('../ads-provider');\r\nconst { AdsConst } = require('../../constants');\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass CrazyGames\r\n{\r\n\r\n    constructor(providerModel, gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.gameDom = gameManager?.gameDom;\r\n        this.events = gameManager?.events;\r\n        this.window = gameManager?.gameDom?.getWindow();\r\n        this.metaData = providerModel;\r\n        this.sdk = this.window?.CrazyGames?.SDK;\r\n        this.retry = 0;\r\n        this.environment = AdsConst.ENVIRONMENTS.DISABLED;\r\n        if(!this.metaData.sdkRetryTime){\r\n            this.metaData.sdkRetryTime = 500;\r\n        }\r\n        if(!this.metaData.sdkMaxRetries){\r\n            this.metaData.sdkMaxRetries = 10;\r\n        }\r\n        if(!this.metaData.sdkBannerRefreshTime){\r\n            this.metaData.sdkBannerRefreshTime = 60000; // 60s by documentation\r\n        }\r\n        this.activeAds = this.fetchActiveAds(providerModel);\r\n        let handlersProps = {\r\n            gameManager,\r\n            metaData: providerModel,\r\n            sdk: this.sdk,\r\n            hasAdblock: this.hasAdblock,\r\n            isEnabled: this.isEnabled\r\n        };\r\n        this.bannersHandler = new BannersHandler(handlersProps);\r\n        this.videosHandler = new VideosHandler(handlersProps);\r\n    }\r\n\r\n    fetchActiveAds(providerModel)\r\n    {\r\n        if(!this.gameManager?.config){\r\n            return {};\r\n        }\r\n        return AdsProvider.fetchActiveAdsByProviderId(\r\n            providerModel.id,\r\n            this.validAdsTypes(),\r\n            this.gameManager.config.get('client/ads/collection', {})\r\n        );\r\n    }\r\n\r\n    validAdsTypes()\r\n    {\r\n        return [AdsConst.ADS_TYPES.BANNER, AdsConst.ADS_TYPES.EVENT_VIDEO];\r\n    }\r\n\r\n    async activate()\r\n    {\r\n        if(!this.sdk){\r\n            if(this.retry === this.metaData.sdkMaxRetries){\r\n                Logger.critical('CrazyGames required object.');\r\n                return false;\r\n            }\r\n            if(this.retry < this.metaData.sdkMaxRetries){\r\n                setTimeout(() => {\r\n                    this.retry++;\r\n                    Logger.info('CrazyGames required object, retry #'+this.retry+'.');\r\n                    this.sdk = this.window?.CrazyGames?.SDK;\r\n                    if(this.sdk){\r\n                        Logger.info('CrazyGames object found.');\r\n                    }\r\n                    this.activate();\r\n                }, this.metaData.sdkRetryTime);\r\n            }\r\n            return false;\r\n        }\r\n        this.environment = await this.sdk.getEnvironment();\r\n        this.bannersHandler.sdk = this.sdk;\r\n        this.videosHandler.sdk = this.sdk;\r\n        if(await this.hasAdblock()){\r\n            return false;\r\n        }\r\n        await this.activateAds();\r\n    }\r\n\r\n    async hasAdblock()\r\n    {\r\n        try {\r\n            let result = await this.sdk.ad.hasAdblock();\r\n            if(result){\r\n                Logger.critical('Adblock detected, please disable.');\r\n            }\r\n            return result;\r\n        } catch (error) {\r\n            Logger.info('SDK detected error.', error);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async isEnabled()\r\n    {\r\n        return AdsConst.ENVIRONMENTS.DISABLED !== await this.sdk.getEnvironment();\r\n    }\r\n\r\n    async activateAds()\r\n    {\r\n        let activeKeys = Object.keys(this.activeAds);\r\n        if(0 === activeKeys.length){\r\n            return false;\r\n        }\r\n        for(let i of activeKeys){\r\n            let activeAd = this.activeAds[i];\r\n            if(AdsConst.ADS_TYPES.BANNER === activeAd.type.key){\r\n                await this.bannersHandler.activateAdBanner(activeAd);\r\n            }\r\n            if(AdsConst.ADS_TYPES.EVENT_VIDEO === activeAd.type.key){\r\n                await this.videosHandler.activateAdVideo(activeAd);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.CrazyGames = CrazyGames;\r\n","/**\r\n *\r\n * Reldens - BannersHandler\r\n *\r\n */\r\n\r\nconst { Validator } = require('./validator');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass BannersHandler\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        this.metaData = sc.get(props, 'metaData', {});\r\n        this.gameDom = this.gameManager?.gameDom;\r\n        this.events = this.gameManager?.events;\r\n        this.sdk = sc.get(props, 'sdk', false);\r\n        this.hasAdblock = sc.get(props, 'hasAdblock', false);\r\n        this.isEnabled = sc.get(props, 'isEnabled', false);\r\n        this.activeBanners = {};\r\n        this.validator = new Validator();\r\n    }\r\n\r\n    availableBanners()\r\n    {\r\n        return [\r\n            '728x90',\r\n            '300x250',\r\n            '320x50',\r\n            '468x60',\r\n            '320x100'\r\n        ];\r\n    }\r\n\r\n    availableResponsiveBanners()\r\n    {\r\n        return [\r\n            '970x90',\r\n            '320x50',\r\n            '160x600',\r\n            '336x280',\r\n            '728x90',\r\n            '300x600',\r\n            '468x60',\r\n            '970x250',\r\n            '300x250',\r\n            '250x250',\r\n            '120x600'\r\n        ];\r\n    }\r\n\r\n    validBannerSize(size)\r\n    {\r\n        return -1 !== this.availableBanners().indexOf(size);\r\n    }\r\n\r\n    validResponsiveBannerSize(size)\r\n    {\r\n        return -1 !== this.availableResponsiveBanners().indexOf(size);\r\n    }\r\n\r\n    async activateAdBanner(activeAd)\r\n    {\r\n        if(!activeAd){\r\n            Logger.info('Missing activate ad.', activeAd);\r\n            return false;\r\n        }\r\n        if(!this.validator.validate(this)){\r\n            Logger.info('Invalid banner.');\r\n            return false;\r\n        }\r\n        let bannerData = activeAd.bannerData;\r\n        if(!bannerData){\r\n            Logger.info('No banner data.');\r\n            return false;\r\n        }\r\n        let isFullTimeBanner = sc.get(bannerData, 'fullTime', false);\r\n        let isResponsive = sc.get(bannerData, 'responsive', false);\r\n        if(isFullTimeBanner){\r\n            return await this.handleBannerType(isResponsive, activeAd);\r\n        }\r\n        let uiReferenceIds = sc.get(bannerData, 'uiReferenceIds', []);\r\n        if(0 === uiReferenceIds.length){\r\n            Logger.warning('Missing banner reference ID.');\r\n            return false;\r\n        }\r\n        this.events.on('reldens.openUI', async (event) => {\r\n            if(-1 !== uiReferenceIds.indexOf('ANY') || -1 !== uiReferenceIds.indexOf(event.openButton.id)){\r\n                let bannerLocalStorageKey = activeAd.id+'-'+event.openButton.id;\r\n                let createdAt = (new Date()).getTime();\r\n                let activeBanner = sc.get(this.activeBanners, bannerLocalStorageKey, false);\r\n                if(activeBanner && createdAt < ( // create time is bigger than the previous created banner + 60s?\r\n                    activeBanner.createdAt + this.metaData.sdkBannerRefreshTime\r\n                )){\r\n                    activeBanner.banner.classList.remove('hidden');\r\n                    return;\r\n                }\r\n                if(activeBanner){\r\n                    activeBanner.banner.remove();\r\n                }\r\n                let banner = await this.handleBannerType(isResponsive, activeAd, bannerLocalStorageKey);\r\n                this.activeBanners[bannerLocalStorageKey] = {createdAt, banner};\r\n            }\r\n        });\r\n        this.events.on('reldens.closeUI', async (event) => {\r\n            let bannerLocalStorageKey = activeAd.id+'-'+event.openButton.id;\r\n            let activeBanner = sc.get(this.activeBanners, bannerLocalStorageKey, false);\r\n            if(activeBanner){\r\n                activeBanner.banner.classList.add('hidden');\r\n            }\r\n        });\r\n    }\r\n\r\n    async handleBannerType(isResponsive, activeAd, bannerLocalStorageKey)\r\n    {\r\n        if(isResponsive){\r\n            return this.createResponsiveBanner(activeAd, bannerLocalStorageKey);\r\n        }\r\n        return await this.createBanner(activeAd, bannerLocalStorageKey);\r\n    }\r\n\r\n    async createBanner(activeAd, bannerLocalStorageKey)\r\n    {\r\n        if(!this.validator.validate(this) || !await this.validator.canBeActivated(this)){\r\n            return false;\r\n        }\r\n        if(!this.isEnabled()){\r\n            Logger.info('SDK not enabled.');\r\n            return false;\r\n        }\r\n        try {\r\n            let width = sc.get(activeAd.styles, 'width', '300');\r\n            let height = sc.get(activeAd.styles, 'height', '250');\r\n            if(!this.validBannerSize(width+'x'+height)){\r\n                Logger.info('CrazyGames - Invalid Banner size.');\r\n                return false;\r\n            }\r\n            let containerId = bannerLocalStorageKey || activeAd.id;\r\n            if(!containerId){\r\n                Logger.info('CrazyGames - Missing container ID.', activeAd, bannerLocalStorageKey);\r\n                return false;\r\n            }\r\n            let div = this.gameDom.createElement('div', 'banner-container-'+containerId);\r\n            this.gameDom.getElement('body')?.append(div);\r\n            if(await this.isEnabled()){\r\n                await this.sdk.banner.requestBanner({\r\n                    id: div.id,\r\n                    width: width,\r\n                    height: height,\r\n                });\r\n            }\r\n            let styles = this.mapStylesWithValues(Object.assign({width, height}, activeAd));\r\n            this.gameDom.setElementStyles(div, styles);\r\n            div.classList.add('ads-banner-container');\r\n            return div;\r\n        } catch (error) {\r\n            Logger.critical('CrazyGames - Error on banner request.', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    mapStylesWithValues(activeAd)\r\n    {\r\n        let styles = {\r\n            'z-index': 200000000,\r\n            width: sc.get(activeAd, 'width', 300),\r\n            height: sc.get(activeAd, 'height', 250),\r\n            position: '' === sc.get(activeAd.styles, 'position', '') ? activeAd.position : 'absolute'\r\n        };\r\n        let top = sc.get(activeAd.styles, 'top', null);\r\n        if(null !== top){\r\n            styles.top = top;\r\n        }\r\n        let bottom = sc.get(activeAd.styles, 'bottom', null);\r\n        if(null !== bottom){\r\n            styles.bottom = bottom;\r\n        }\r\n        let left = sc.get(activeAd.styles, 'left', null);\r\n        if(null !== left){\r\n            styles.left = left;\r\n        }\r\n        let right = sc.get(activeAd.styles, 'right', null);\r\n        if(null !== right){\r\n            styles.right = right;\r\n        }\r\n        return styles;\r\n    }\r\n\r\n    async createResponsiveBanner(activeAd, bannerLocalStorageKey)\r\n    {\r\n        if(!this.validator.validate(this) || !await this.validator.canBeActivated(this)){\r\n            return false;\r\n        }\r\n        if(!this.isEnabled()){\r\n            Logger.info('SDK not enabled.');\r\n            return false;\r\n        }\r\n        /* @NOTE: according to CrazyGames SDK this should be null and provided on the SDK response.\r\n        let width = sc.get(activeAd, 'width', '300');\r\n        let height = sc.get(activeAd, 'height', '250');\r\n        if(!this.validResponsiveBannerSize(width+'x'+height)){\r\n            Logger.info('CrazyGames - Invalid Responsive Banner size.');\r\n            return false;\r\n        }\r\n        */\r\n        try {\r\n            let containerId = bannerLocalStorageKey || activeAd.id;\r\n            if(!containerId){\r\n                Logger.info('CrazyGames - Missing container ID.', activeAd, bannerLocalStorageKey);\r\n                return false;\r\n            }\r\n            let div = this.gameDom.createElement('div', 'responsive-banner-container-'+containerId);\r\n            let styles = this.mapStylesWithValues(activeAd);\r\n            delete styles['width'];\r\n            delete styles['height'];\r\n            this.gameDom.setElementStyles(div, styles);\r\n            this.gameDom.getElement('body').append(div);\r\n            if(await this.isEnabled()){\r\n                await this.sdk.banner.requestResponsiveBanner(div.id);\r\n            }\r\n            div.classList.add('ads-banner-container');\r\n            return div;\r\n        } catch (error) {\r\n            Logger.critical('CrazyGames - Error on banner request.', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.BannersHandler = BannersHandler;\r\n","/**\r\n *\r\n * Reldens - Validator\r\n *\r\n */\r\n\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass Validator\r\n{\r\n\r\n    validate(props)\r\n    {\r\n        if(!props.gameManager){\r\n            Logger.error('Missing Game Manager on Validator.', props);\r\n            return false;\r\n        }\r\n        if(!props.sdk){\r\n            Logger.error('Missing SDK on Validator.', props);\r\n            return false;\r\n        }\r\n        if(!props.hasAdblock || !sc.isFunction(props.hasAdblock)){\r\n            Logger.warning('Missing or invalid hasAdblock function on Validator.', props);\r\n        }\r\n        if(!props.isEnabled || !sc.isFunction(props.isEnabled)){\r\n            Logger.error('Missing or invalid isEnabled function on Validator.', props);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async canBeActivated(props)\r\n    {\r\n        if(!sc.isFunction(props.hasAdblock) || await props.hasAdblock()){\r\n            Logger.info('AdBlocker detected.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.Validator = Validator;\r\n","/**\r\n *\r\n * Reldens - VideosHandler\r\n *\r\n */\r\n\r\nconst { Validator } = require('./validator');\r\nconst { AdsConst } = require('../../../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass VideosHandler\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        this.gameDom = this.gameManager?.gameDom;\r\n        this.events = this.gameManager?.events;\r\n        this.sdk = sc.get(props, 'sdk', false);\r\n        this.hasAdblock = sc.get(props, 'hasAdblock', false);\r\n        this.isEnabled = sc.get(props, 'isEnabled', false);\r\n        this.validator = new Validator();\r\n        this.isPlayingAd = false;\r\n        this.setConfig();\r\n    }\r\n    \r\n    setConfig()\r\n    {\r\n        this.videoMinimumDuration = !this.gameManager\r\n            ? AdsConst.VIDEOS_MINIMUM_DURATION\r\n            : this.gameManager.config.getWithoutLogs(\r\n                'client/ads/general/providers/crazyGames/videoMinimumDuration',\r\n                AdsConst.VIDEOS_MINIMUM_DURATION\r\n            );\r\n        this.awaitAdsTime = !this.gameManager\r\n            ? AdsConst.AWAIT_ADS_TIME\r\n            : this.gameManager.config.getWithoutLogs(\r\n                'client/ads/general/providers/crazyGames/awaitAdsTime',\r\n                AdsConst.AWAIT_ADS_TIME\r\n            );\r\n    }\r\n\r\n    async activateAdVideo(activeAd)\r\n    {\r\n        let eventKey = sc.get(activeAd, 'eventKey', false);\r\n        if(!eventKey){\r\n            Logger.warning('Missing event key.', activeAd);\r\n            return false;\r\n        }\r\n        this.events.on(eventKey, async (event) => {\r\n            if(this.isPlayingAd){\r\n                Logger.info('CrazyGames - Another ad is been played.');\r\n                return false;\r\n            }\r\n            if(!this.validator.validate(this) || !await this.validator.canBeActivated(this)){\r\n                Logger.error('CrazyGames - Ad can not be activated.');\r\n                return false;\r\n            }\r\n            if(!this.isEnabled()){\r\n                Logger.info('CrazyGames - SDK not enabled.');\r\n                return false;\r\n            }\r\n            return await this.tryRePlay(activeAd);\r\n        });\r\n    }\r\n\r\n    async tryRePlay(activeAd)\r\n    {\r\n        let adsPlugin = this.gameManager.getFeature('ads');\r\n        if(null === adsPlugin.playedAds){\r\n            setTimeout(\r\n                () => {\r\n                    this.tryRePlay(activeAd);\r\n                },\r\n                this.awaitAdsTime\r\n            );\r\n            return false;\r\n        }\r\n        let playedAd = sc.get(adsPlugin?.playedAds, activeAd.id, false);\r\n        if(playedAd && !activeAd.replay){\r\n            Logger.info('Ad already played', activeAd);\r\n            return false;\r\n        }\r\n        let adStarted = sc.get(activeAd, 'adStartedCallback', () => {\r\n            this.isPlayingAd = true;\r\n            Logger.info('CrazyGames - Ad-started callback.', (new Date()).getTime());\r\n            this.send({act: AdsConst.ACTIONS.AD_STARTED, ads_id: activeAd.id});\r\n        });\r\n        let adFinished = sc.get(activeAd, 'adFinishedCallback', async () => {\r\n            this.isPlayingAd = false;\r\n            Logger.info('CrazyGames - Ad-finished callback.', (new Date()).getTime());\r\n            this.send({act: AdsConst.ACTIONS.AD_ENDED, ads_id: activeAd.id});\r\n            await this.gameManager.audioManager.changeMuteState(false, false); // unmute and unlock audio\r\n        });\r\n        let adError = sc.get(activeAd, 'adErrorCallback', async (error) => {\r\n            this.isPlayingAd = false;\r\n            Logger.info('CrazyGames - Ad-error callback.', error, (new Date()).getTime());\r\n            this.send({act: AdsConst.ACTIONS.AD_ENDED, ads_id: activeAd.id, error});\r\n            await this.gameManager.audioManager.changeMuteState(false, false); // unmute and unlock audio\r\n        });\r\n        let rewardItemKey = sc.get(activeAd, 'rewardItemKey', false);\r\n        let adType = rewardItemKey ? 'rewarded' : 'midgame';\r\n        await this.gameManager.audioManager.changeMuteState(true, true); // mute and lock audio\r\n        await this.sdk.ad.requestAd(adType, {adStarted, adFinished, adError});\r\n    }\r\n\r\n    send(props)\r\n    {\r\n        let roomEvents = this.gameManager?.activeRoomEvents;\r\n        if(!roomEvents){\r\n            Logger.warning('CrazyGames - RoomEvents undefined to send an Ad Video message.');\r\n            return false;\r\n        }\r\n        return roomEvents?.send(props);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.VideosHandler = VideosHandler;\r\n","/**\r\n *\r\n * Reldens - AdsProvider\r\n *\r\n */\r\n\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass AdsProvider\r\n{\r\n\r\n    static fetchActiveAdsByProviderId(providerId, validAdsTypes, availableAds)\r\n    {\r\n        if(!providerId){\r\n            return {};\r\n        }\r\n        let adsKeys = Object.keys(availableAds);\r\n        if(0 === adsKeys.length){\r\n            return {};\r\n        }\r\n        let adsCollection = {};\r\n        for(let i of adsKeys){\r\n            let ad = availableAds[i];\r\n            if(providerId !== ad.provider.id){\r\n                // Logger.info('Filtered ad by provider ID.', {expectedId: providerId, adProviderId: ad.provider.id});\r\n                continue;\r\n            }\r\n            if(!ad.enabled){\r\n                Logger.info('Ad not enabled.', ad);\r\n                continue;\r\n            }\r\n            if(-1 === validAdsTypes.indexOf(ad.type.key)){\r\n                Logger.info('Invalid ad type.', ad);\r\n                continue;\r\n            }\r\n            adsCollection[i] = ad;\r\n        }\r\n        Logger.info({providerId, activeProviderAds: adsCollection});\r\n        return adsCollection;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.AdsProvider = AdsProvider;\r\n","/**\r\n *\r\n * Reldens - GameMonetize\r\n *\r\n * SDK documentation: https://github.com/MonetizeGame/GameMonetize.com-SDK\r\n *\r\n */\r\n\r\nconst { AdsProvider } = require('../ads-provider');\r\nconst { AdsConst } = require('../../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass GameMonetize\r\n{\r\n\r\n    constructor(providerModel, gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.gameDom = gameManager?.gameDom;\r\n        this.events = gameManager?.events;\r\n        this.window = gameManager?.gameDom?.getWindow();\r\n        this.metaData = providerModel;\r\n        this.setSdkOptions();\r\n        this.sdk = this.window?.sdk;\r\n        this.retry = 0;\r\n        this.isPlayingAd = false;\r\n        this.environment = AdsConst.ENVIRONMENTS.DISABLED;\r\n        if(!this.metaData.sdkRetryTime){\r\n            this.metaData.sdkRetryTime = 500;\r\n        }\r\n        if(!this.metaData.sdkMaxRetries){\r\n            this.metaData.sdkMaxRetries = 10;\r\n        }\r\n        this.activeAds = this.fetchActiveAds(providerModel);\r\n        this.activeAdBeenPlayed = false;\r\n        this.setConfig();\r\n    }\r\n\r\n    fetchActiveAds(providerModel)\r\n    {\r\n        if(!this.gameManager?.config){\r\n            return {};\r\n        }\r\n        return AdsProvider.fetchActiveAdsByProviderId(\r\n            providerModel.id,\r\n            this.validAdsTypes(),\r\n            this.gameManager.config.get('client/ads/collection', {})\r\n        );\r\n    }\r\n\r\n    eventKeys()\r\n    {\r\n        return {\r\n            sdkAdStarted: 'CONTENT_PAUSE_REQUESTED',\r\n            sdkAdEnded: 'SDK_GAME_START',\r\n            // sdkAdEnded: 'CONTENT_RESUME_REQUESTED',\r\n            // adLoadError: 'AD_LOAD_ERROR',\r\n            sdkReady: 'SDK_READY',\r\n        }\r\n    }\r\n\r\n    setSdkOptions()\r\n    {\r\n        if(!this.gameDom){\r\n            return false;\r\n        }\r\n        if(!this.metaData.gameId){\r\n            Logger.error('GameMonetize - Game ID undefined.');\r\n            return false;\r\n        }\r\n        this.gameDom.getWindow().SDK_OPTIONS = {\r\n            gameId: this.metaData.gameId,\r\n            onEvent: async (event) => {\r\n                Logger.info('GameMonetize - SDK event fired: '+event.name);\r\n                switch (event.name) {\r\n                    case this.eventKeys().sdkAdStarted:\r\n                        // pause game logic / mute audio:\r\n                        await this.adStartedCallback(event);\r\n                        break;\r\n                    case this.eventKeys().sdkAdEnded:\r\n                        // advertisement done, resume game logic and unmute audio:\r\n                        await this.adEndedCallback(event);\r\n                        break;\r\n                    case this.eventKeys().sdkReady:\r\n                        // when sdk is ready:\r\n                        await this.sdkReadyCallback(event);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    setConfig()\r\n    {\r\n        this.videoMinimumDuration = !this.gameManager\r\n            ? AdsConst.VIDEOS_MINIMUM_DURATION\r\n            : this.gameManager.config.getWithoutLogs(\r\n                'client/ads/general/providers/gameMonetize/videoMinimumDuration',\r\n                AdsConst.VIDEOS_MINIMUM_DURATION\r\n            );\r\n        this.awaitAdsTime = !this.gameManager\r\n            ? AdsConst.AWAIT_ADS_TIME\r\n            : this.gameManager.config.getWithoutLogs(\r\n                'client/ads/general/providers/gameMonetize/awaitAdsTime',\r\n                AdsConst.AWAIT_ADS_TIME\r\n            );\r\n    }\r\n\r\n    validAdsTypes()\r\n    {\r\n        return [AdsConst.ADS_TYPES.EVENT_VIDEO];\r\n    }\r\n\r\n    async adStartedCallback(event)\r\n    {\r\n        this.isPlayingAd = true;\r\n        await this.gameManager.audioManager.changeMuteState(true, true); // mute and lock audio\r\n        if(!this.activeAdBeenPlayed){\r\n            Logger.info('AdStartedCallback undefined activeAd.', event, this.activeAdBeenPlayed);\r\n            return false;\r\n        }\r\n        Logger.info('GameMonetize - Ad-started callback.', (new Date()).getTime());\r\n        this.send({act: AdsConst.ACTIONS.AD_STARTED, ads_id: this.activeAdBeenPlayed.id});\r\n    }\r\n\r\n    async adEndedCallback(event)\r\n    {\r\n        this.isPlayingAd = false;\r\n        await this.gameManager.audioManager.changeMuteState(false, false); // unmute and unlock audio\r\n        if(!this.activeAdBeenPlayed){\r\n            Logger.info('AdEndedCallback undefined activeAd.', event, this.activeAdBeenPlayed);\r\n            return false;\r\n        }\r\n        Logger.info('GameMonetize - Ad-finished callback.', (new Date()).getTime());\r\n        this.send({act: AdsConst.ACTIONS.AD_ENDED, ads_id: this.activeAdBeenPlayed.id});\r\n    }\r\n\r\n    async sdkReadyCallback(event)\r\n    {\r\n        this.sdk = this.window.sdk;\r\n    }\r\n\r\n    async activate()\r\n    {\r\n        if(!this.sdk){\r\n            if(this.retry === this.metaData.sdkMaxRetries){\r\n                Logger.critical('GameMonetize required object.');\r\n                return false;\r\n            }\r\n            if(this.retry < this.metaData.sdkMaxRetries){\r\n                setTimeout(() => {\r\n                    this.retry++;\r\n                    Logger.info('GameMonetize required object, retry #'+this.retry+'.');\r\n                    this.sdk = this.window?.sdk;\r\n                    if(this.sdk){\r\n                        Logger.info('GameMonetize object found.');\r\n                    }\r\n                    this.activate();\r\n                }, this.metaData.sdkRetryTime);\r\n            }\r\n            return false;\r\n        }\r\n        await this.activateAds();\r\n    }\r\n\r\n    async activateAds()\r\n    {\r\n        let activeKeys = Object.keys(this.activeAds);\r\n        if(0 === activeKeys.length){\r\n            Logger.info('None active ads.');\r\n            return false;\r\n        }\r\n        for(let i of activeKeys){\r\n            let activeAd = this.activeAds[i];\r\n            if(AdsConst.ADS_TYPES.EVENT_VIDEO !== activeAd.type.key){\r\n                continue;\r\n            }\r\n            let eventKey = sc.get(activeAd, 'eventKey', false);\r\n            if(!eventKey){\r\n                Logger.warning('Missing event key.', activeAd);\r\n                return false;\r\n            }\r\n            this.events.on(eventKey, async (event) => {\r\n                Logger.info('GameMonetize - Video event fired, playing ad.', event, activeAd);\r\n                if(this.isPlayingAd){\r\n                    Logger.info('GameMonetize - Ad is been played.');\r\n                    return false;\r\n                }\r\n                return await this.tryRePlay(activeAd);\r\n            });\r\n        }\r\n    }\r\n\r\n    async tryRePlay(activeAd)\r\n    {\r\n        let adsPlugin = this.gameManager.getFeature('ads');\r\n        if(null === adsPlugin.playedAds){\r\n            setTimeout(\r\n                () => {\r\n                    this.tryRePlay(activeAd);\r\n                },\r\n                this.awaitAdsTime\r\n            );\r\n            return false;\r\n        }\r\n        this.activeAdBeenPlayed = activeAd;\r\n        if(!sc.isObjectFunction(this.sdk, 'showBanner')){\r\n            Logger.critical('GameMonetize SDK not ready.');\r\n            return false;\r\n        }\r\n        await this.sdk.showBanner();\r\n    }\r\n\r\n    send(props)\r\n    {\r\n        let roomEvents = this.gameManager?.activeRoomEvents;\r\n        if(!roomEvents){\r\n            Logger.warning('GameMonetize - RoomEvents undefined to send an Ad Video message.');\r\n            return false;\r\n        }\r\n        return roomEvents.send(props);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.GameMonetize = GameMonetize;\r\n","/**\r\n *\r\n * Reldens - GoogleAdSense\r\n *\r\n * Documentation: https://support.google.com/adsense/answer/9183549?sjid=16298855257735669764-EU\r\n *\r\n */\r\n\r\nclass GoogleAdSense\r\n{\r\n    constructor(providerModel, gameManager)\r\n    {\r\n        this.gameManager = gameManager;\r\n        this.gameDom = gameManager?.gameDom;\r\n        this.events = gameManager?.events;\r\n        this.window = gameManager?.gameDom?.getWindow();\r\n        this.metaData = providerModel;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.GoogleAdSense = GoogleAdSense;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    ads: {}\r\n}\r\n","/**\r\n *\r\n * Reldens - World Client Plugin\r\n *\r\n */\r\n\r\nconst { DebugWorldCreator } = require('./debug-world-creator');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass WorldPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        this.events = sc.get(props, 'events', false);\r\n        this.debugWorldCreator = false;\r\n        if(this.validateProperties()){\r\n            this.setupDebugMode();\r\n        }\r\n    }\r\n\r\n    validateProperties()\r\n    {\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in PredictionPlugin.');\r\n            return false;\r\n        }\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in PredictionPlugin.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    setupDebugMode()\r\n    {\r\n        if(!this.gameManager.config.getWithoutLogs('client/world/debug/enabled', false)){\r\n            return false;\r\n        }\r\n        this.debugWorldCreator = new DebugWorldCreator();\r\n        this.events.on('reldens.createEngineSceneDone', async (event) => {\r\n            await this.debugWorldCreator.createSceneWorld(event.currentScene);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.WorldPlugin = WorldPlugin;\r\n","/**\r\n *\r\n * Reldens - DebugWorldCreator\r\n *\r\n */\r\n\r\nconst { Renderer } = require('./renderer');\r\nconst { P2world } = require('../../world/server/p2world');\r\nconst { WorldTimer } = require('../../world/world-timer');\r\nconst { Logger } = require('@reldens/utils');\r\n\r\nclass DebugWorldCreator\r\n{\r\n\r\n    async createSceneWorld(scene)\r\n    {\r\n        let validLayers = this.findValidLayers(scene);\r\n        let mapJson = this.cloneMapJson(scene, validLayers);\r\n        let worldData = {\r\n            sceneName: scene.key,\r\n            roomId: scene.params.roomId,\r\n            roomMap: scene.params.roomName,\r\n            mapJson,\r\n            config: scene.configManager,\r\n            events: scene.eventsManager,\r\n            allowSimultaneous: scene.configManager.get('client/general/controls/allowSimultaneousKeys', true),\r\n            worldConfig: scene.gameManager.activeRoomEvents.roomData?.worldConfig || scene.worldConfig\r\n        };\r\n        scene.debugWorld = this.createWorldInstance(worldData);\r\n        scene.debugWorld.createLimits();\r\n        await scene.debugWorld.createWorldContent({});\r\n        scene.debugWorldTimer = new WorldTimer({\r\n            callbacks: [() => {\r\n                if(!scene.debugWorld){\r\n                    Logger.error('Scene World not longer exists.', scene.roomWorld);\r\n                    return;\r\n                }\r\n                scene.debugWorld.removeBodiesFromWorld();\r\n            }]\r\n        });\r\n        scene.debugWorldTimer.startWorldSteps(scene.debugWorld);\r\n        scene.debugWorldRenderer = new Renderer(scene);\r\n    }\r\n\r\n    cloneMapJson(scene, validLayers)\r\n    {\r\n        // @TODO - BETA - Fix to support multiple tilesets.\r\n        let tileset = scene.tilesets[0];\r\n        if(!tileset){\r\n            return {};\r\n        }\r\n        return Object.assign(\r\n            {},\r\n            (scene.cache?.tilemap?.entries?.entries[tileset.name]?.data || {}),\r\n            {layers: validLayers}\r\n        );\r\n    }\r\n\r\n    findValidLayers(scene)\r\n    {\r\n        let validLayers = [];\r\n        // @TODO - BETA - Fix to support multiple tilesets.\r\n        let tileset = scene.tilesets[0];\r\n        if(!tileset){\r\n            return validLayers;\r\n        }\r\n        for(let layer of scene.cache.tilemap.entries.entries[tileset.name].data.layers){\r\n            if(-1 !== layer.name.indexOf('collision')){\r\n                validLayers.push(layer);\r\n            }\r\n        }\r\n        return validLayers;\r\n    }\r\n\r\n    createWorldInstance(worldData)\r\n    {\r\n        return new P2world(worldData);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.DebugWorldCreator = DebugWorldCreator;\r\n","/**\r\n *\r\n * Reldens - Renderer\r\n *\r\n */\r\n\r\nconst { Box } = require('p2');\r\n\r\nclass Renderer\r\n{\r\n\r\n    constructor(scene)\r\n    {\r\n        // @TODO - BETA - Refactor this entire class.\r\n        this.scene = scene;\r\n        this.gameDom = scene.gameManager.gameDom;\r\n        this.world = scene.debugWorld;\r\n        this.canvasElement = false;\r\n        this.canvasContext = false;\r\n    }\r\n\r\n    fetchCanvasContext()\r\n    {\r\n        this.canvasContext = this.canvasElement.getContext('2d');\r\n    }\r\n\r\n    createCanvas(width, height)\r\n    {\r\n        this.canvasElement = this.gameDom.createElement('canvas');\r\n        this.canvasElement.width = width;\r\n        this.canvasElement.height = height;\r\n        this.canvasElement.id = 'physicsCanvas';\r\n        this.gameDom.getDocument().body.appendChild(this.canvasElement);\r\n        this.fetchCanvasContext();\r\n    }\r\n\r\n    renderLoop()\r\n    {\r\n        // @TODO - BETA - Finish implementation to render all the objects movement.\r\n        this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\r\n        this.renderP2World();\r\n        this.gameDom.getWindow().requestAnimationFrame(this.renderLoop.bind(this));\r\n    }\r\n\r\n    renderP2World()\r\n    {\r\n        let context = this.canvasContext;\r\n        for(let i = 0; i < this.world.bodies.length; i++){\r\n            let body = this.world.bodies[i];\r\n            if(!body.isWall){\r\n                continue;\r\n            }\r\n            let shape = body.shapes[0];\r\n            context.fillStyle = '#2f7dde';\r\n            context.strokeStyle = '#333333';\r\n            if(shape instanceof Box){\r\n                let x = body.position[0];\r\n                let y = body.position[1];\r\n                let width = shape.width;\r\n                let height = shape.height;\r\n                context.save();\r\n                context.translate(x, y);\r\n                context.rotate(body.angle);\r\n                context.beginPath();\r\n                context.rect(-width / 2, -height / 2, width, height);\r\n                context.closePath();\r\n                context.fill();\r\n                context.stroke();\r\n                context.restore();\r\n            }\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n        }\r\n        let textIndex = 0;\r\n        for(let i = 0; i < this.world.bodies.length; i++){\r\n            let body = this.world.bodies[i];\r\n            if(!body.isWall){\r\n                continue;\r\n            }\r\n            let shape = body.shapes[0];\r\n            if(shape instanceof Box){\r\n                let tileIndex = body.firstTileIndex || 0;\r\n                context.fillStyle = '#000000';\r\n                context.font = '9px Arial';\r\n                let fullText = tileIndex.toString()+' / '+shape.width + ' / '+body.position[0];\r\n                let x = body.position[0];\r\n                let y = body.position[1];\r\n                let textX = x - context.measureText(fullText).width / 2;\r\n                let textY = y;\r\n                context.textAlign = 'left';\r\n                context.textBaseline = 'middle';\r\n                context.fillText(fullText, textX, textY);\r\n                textIndex++;\r\n            }\r\n        }\r\n    }\r\n\r\n    debugWorld()\r\n    {\r\n        this.gameDom.getElement('.wrapper').style.display = 'none';\r\n        this.createCanvas(\r\n            this.scene.map.width * this.scene.map.tileWidth,\r\n            this.scene.map.height * this.scene.map.tileHeight\r\n        );\r\n        this.renderP2World();\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.Renderer = Renderer;\r\n","/**\r\n *\r\n * Reldens - Scores Client Plugin\r\n *\r\n */\r\n\r\nconst { PreloaderHandler } = require('./preloader-handler');\r\nconst { ScoresMessageListener } = require('./scores-message-listener');\r\nconst { MessageProcessor } = require('./messages-processor');\r\nconst { ScoresConst } = require('../constants');\r\nconst Translations = require('./snippets/en_US');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ScoresPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        this.events = sc.get(props, 'events', false);\r\n        this.preloaderHandler = new PreloaderHandler();\r\n        this.scoresMessageListener = new ScoresMessageListener();\r\n        if(this.validateProperties()){\r\n            this.setTranslations();\r\n            this.listenEvents();\r\n            this.listenMessages();\r\n            //Logger.debug('Plugin READY: Scores');\r\n        }\r\n    }\r\n\r\n    validateProperties()\r\n    {\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in ScoresPlugin.');\r\n            return false;\r\n        }\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in ScoresPlugin.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    setTranslations()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations, ScoresConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in ScoresPlugin for \"listenEvents\".');\r\n            return;\r\n        }\r\n        this.events.on('reldens.preloadUiScene', (preloadScene) => {\r\n            this.preloaderHandler.loadContents(preloadScene);\r\n        });\r\n        this.events.on('reldens.createEngineSceneDone', (event) => {\r\n            let roomEvents = event?.roomEvents;\r\n            if(!roomEvents){\r\n                Logger.critical('RoomEvents undefined for process Scores messages queue on ScoresPlugin.', event);\r\n                return false;\r\n            }\r\n            MessageProcessor.processScoresMessagesQueue(roomEvents, this.scoresMessageListener);\r\n        });\r\n    }\r\n\r\n    listenMessages()\r\n    {\r\n        if(!this.gameManager || !this.events){\r\n            Logger.error('Game Manager or EventsManager undefined in ScoresPlugin for \"listenMessages\".');\r\n            return;\r\n        }\r\n        this.gameManager.config.client.message.listeners[ScoresConst.KEY] = this.scoresMessageListener;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ScoresPlugin = ScoresPlugin;\r\n","/**\r\n *\r\n * Reldens - PreloaderHandler\r\n *\r\n */\r\n\r\nconst { ScoresConst } = require('../constants');\r\n\r\nclass PreloaderHandler\r\n{\r\n\r\n    loadContents(uiScene)\r\n    {\r\n        let scoresTemplatePath = '/assets/features/scores/templates/';\r\n        uiScene.load.html(ScoresConst.KEY, scoresTemplatePath+'ui-scores.html');\r\n        uiScene.load.html(ScoresConst.TEMPLATES.SCORES_TABLE, scoresTemplatePath+'ui-scores-table.html');\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PreloaderHandler = PreloaderHandler;\r\n","/**\r\n *\r\n * Reldens - ScoresConst\r\n *\r\n */\r\n\r\nlet prefix = 'sco';\r\nlet snippetsPrefix = 'scores.';\r\n\r\nmodule.exports.ScoresConst = {\r\n    KEY: 'scores',\r\n    PREFIX: prefix,\r\n    ACTIONS: {\r\n        UPDATE: prefix+'Up',\r\n        TOP_SCORES_UPDATE: prefix+'Tops'\r\n    },\r\n    TEMPLATES: {\r\n        SCORES_TABLE: 'scoresTable'\r\n    },\r\n    MESSAGE: {\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'scores'\r\n        }\r\n    },\r\n    SNIPPETS: {\r\n        PREFIX: snippetsPrefix,\r\n        TITLE: snippetsPrefix+'scoresTitle',\r\n        CONTENT: snippetsPrefix+'scoresContent',\r\n        MY_SCORE: snippetsPrefix+'myScore'\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - ScoresMessageListener\r\n *\r\n */\r\n\r\nconst { ScoresMessageHandler } = require('./scores-message-handler');\r\nconst { ScoresConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ScoresMessageListener\r\n{\r\n\r\n    async executeClientMessageActions(props)\r\n    {\r\n        let message = sc.get(props, 'message', false);\r\n        if(!message){\r\n            Logger.error('Missing message data on ScoresMessageListener.', props);\r\n            return false;\r\n        }\r\n        let roomEvents = sc.get(props, 'roomEvents', false);\r\n        if(!roomEvents){\r\n            Logger.error('Missing RoomEvents on ScoresMessageListener.', props);\r\n            return false;\r\n        }\r\n        let scoresMessageHandler = new ScoresMessageHandler({roomEvents, message});\r\n        if(!scoresMessageHandler.validate()){\r\n            if(this.isScoresMessage(message)){\r\n                if(!roomEvents.scoresMessagesQueue){\r\n                    roomEvents.scoresMessagesQueue = [];\r\n                }\r\n                roomEvents.scoresMessagesQueue.push(message);\r\n                return true;\r\n            }\r\n            Logger.error('Invalid ScoresMessageHandler', scoresMessageHandler);\r\n            return false;\r\n        }\r\n        if(!this.isScoresMessage(message)){\r\n            return false;\r\n        }\r\n        return this.handleScoresMessage(message, scoresMessageHandler);\r\n    }\r\n\r\n    handleScoresMessage(message, scoresMessageHandler)\r\n    {\r\n        if(ScoresConst.ACTIONS.UPDATE === message.act){\r\n            return scoresMessageHandler.updatePlayerScore();\r\n        }\r\n        if(ScoresConst.ACTIONS.TOP_SCORES_UPDATE === message.act){\r\n            return scoresMessageHandler.updateScoresBox();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isScoresMessage(message)\r\n    {\r\n        return 0 === message.act?.indexOf(ScoresConst.PREFIX);\r\n    }\r\n}\r\n\r\nmodule.exports.ScoresMessageListener = ScoresMessageListener;\r\n","/**\r\n *\r\n * Reldens - ScoresMessageHandler\r\n *\r\n */\r\n\r\nconst { UserInterface } = require('../../game/client/user-interface');\r\nconst { ScoresConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ScoresMessageHandler\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.roomEvents = sc.get(props, 'roomEvents', false);\r\n        this.message = sc.get(props, 'message', false);\r\n        this.gameManager = this.roomEvents?.gameManager;\r\n        this.gameDom = this.gameManager?.gameDom;\r\n        this.uiScene = this.gameManager?.gameEngine?.uiScene;\r\n    }\r\n\r\n    validate()\r\n    {\r\n        if(!this.roomEvents){\r\n            Logger.info('Missing RoomEvents on ScoresMessageHandler.');\r\n            return false;\r\n        }\r\n        if(!this.message){\r\n            Logger.info('Missing message on ScoresMessageHandler.');\r\n            return false;\r\n        }\r\n        if(!this.gameManager){\r\n            Logger.info('Missing GameManager on ScoresMessageHandler.');\r\n            return false;\r\n        }\r\n        // @NOTE: the message could arrive before the uiScene gets ready.\r\n        // if(!this.uiScene){\r\n        //     Logger.info('Missing UI Scene on ScoresMessageHandler.');\r\n        // }\r\n        return this.uiScene;\r\n    }\r\n\r\n    createScoresUi()\r\n    {\r\n        let scoresUi = sc.get(this.uiScene.userInterfaces, ScoresConst.KEY);\r\n        if(scoresUi){\r\n            return scoresUi;\r\n        }\r\n        if(!this.uiScene.userInterfaces){\r\n            this.uiScene.userInterfaces = {};\r\n        }\r\n        let uiScores = new UserInterface(\r\n            this.gameManager,\r\n            {id: ScoresConst.KEY, type: ScoresConst.KEY, defaultOpen: true, defaultClose: true},\r\n            '/assets/features/scores/templates/ui-scores.html',\r\n            ScoresConst.KEY\r\n        );\r\n        uiScores.createUiElement(this.uiScene, ScoresConst.KEY);\r\n        // @TODO - BETA - Check if this can be moved inside the createUiElement.\r\n        let uiBox = this.uiScene.elementsUi[ScoresConst.KEY];\r\n        if(!uiBox){\r\n            Logger.error('Scores UI box not found.', {uiScores, uiBox});\r\n            return false;\r\n        }\r\n        let title = this.gameManager.services.translator.t(\r\n            this.gameManager.config.getWithoutLogs('client/scores/labels/title', ScoresConst.SNIPPETS.TITLE)\r\n        );\r\n        let content = this.gameManager.services.translator.t(\r\n            this.gameManager.config.getWithoutLogs('client/scores/labels/content', ScoresConst.SNIPPETS.CONTENT)\r\n        );\r\n        this.roomEvents.uiSetTitleAndContent(uiBox, {title, content}, this.uiScene);\r\n        this.uiScene.userInterfaces[ScoresConst.KEY] = uiScores;\r\n        return this.uiScene.userInterfaces[ScoresConst.KEY];\r\n    }\r\n\r\n    updatePlayerScore()\r\n    {\r\n        this.createScoresUi(ScoresConst.KEY);\r\n        let currentPlayerScore = sc.get(this.message, 'newTotalScore', false);\r\n        if(!currentPlayerScore){\r\n            Logger.debug('Missing new total score on update message.');\r\n            return;\r\n        }\r\n        this.uiScene.currentPlayerScore = currentPlayerScore;\r\n        this.roomEvents.uiSetContent(\r\n            this.uiScene.elementsUi[ScoresConst.KEY],\r\n            {content: this.createContentsUpdate()},\r\n            this.uiScene\r\n        );\r\n    }\r\n\r\n    updateScoresBox()\r\n    {\r\n        this.createScoresUi(ScoresConst.KEY);\r\n        let scores = sc.get(this.message, 'scores', false);\r\n        if(!scores){\r\n            Logger.debug('Missing scores data on message.');\r\n            return;\r\n        }\r\n        this.uiScene.scores = scores;\r\n        this.roomEvents.uiSetContent(\r\n            this.uiScene.elementsUi[ScoresConst.KEY],\r\n            {content: this.createContentsUpdate()},\r\n            this.uiScene\r\n        );\r\n    }\r\n\r\n    createContentsUpdate()\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let templateContent = this.uiScene.cache.html.get(ScoresConst.TEMPLATES.SCORES_TABLE);\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"' + ScoresConst.TEMPLATES.SCORES_TABLE + '\".');\r\n            return '';\r\n        }\r\n        let templateParams = {\r\n            scores: this.uiScene.scores,\r\n            showCurrentPlayer: true,\r\n            currentPlayerScore: this.gameManager.services.translator.t(\r\n                this.gameManager.config.getWithoutLogs('client/scores/labels/myScore', ScoresConst.SNIPPETS.MY_SCORE),\r\n                {myScore: this.uiScene.currentPlayerScore || '0'}\r\n            )\r\n        };\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, templateParams);\r\n    }\r\n}\r\n\r\nmodule.exports.ScoresMessageHandler = ScoresMessageHandler;\r\n","/**\r\n *\r\n * Reldens - MessagesProcessor\r\n *\r\n */\r\n\r\nconst { ScoresMessageHandler } = require('./scores-message-handler');\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass MessagesProcessor\r\n{\r\n\r\n    static processScoresMessagesQueue(roomEvents, scoresMessageListener)\r\n    {\r\n        if(!sc.isArray(roomEvents.scoresMessagesQueue)){\r\n            return;\r\n        }\r\n        if(0 === roomEvents.scoresMessagesQueue.length){\r\n            return;\r\n        }\r\n        for(let message of roomEvents.scoresMessagesQueue){\r\n            scoresMessageListener.handleScoresMessage(message, new ScoresMessageHandler({roomEvents, message}));\r\n        }\r\n        roomEvents.scoresMessagesQueue = [];\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MessageProcessor = MessagesProcessor;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    scores: {\r\n        scoresTitle: 'Top Players Scores',\r\n        scoresContent: 'No scores available.',\r\n        myScore: 'My score: %myScore'\r\n    }\r\n}\r\n","/**\r\n *\r\n * Reldens - Rewards Client Plugin\r\n *\r\n */\r\n\r\nconst { PreloaderHandler } = require('./preloader-handler');\r\nconst { MessageListener } = require('./message-listener');\r\nconst { MessageProcessor } = require('./messages-processor');\r\nconst { RewardsConst } = require('../constants');\r\nconst Translations = require('./snippets/en_US');\r\nconst { TranslationsMapper } = require('../../snippets/client/translations-mapper');\r\nconst { PluginInterface } = require('../../features/plugin-interface');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass RewardsPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.gameManager = sc.get(props, 'gameManager', false);\r\n        this.events = sc.get(props, 'events', false);\r\n        this.preloaderHandler = new PreloaderHandler();\r\n        this.messageListener = new MessageListener();\r\n        if(this.validateProperties()){\r\n            this.setTranslations();\r\n            this.listenEvents();\r\n            this.listenMessages();\r\n            Logger.debug('Plugin READY: Rewards');\r\n        }\r\n    }\r\n\r\n    validateProperties()\r\n    {\r\n        if(!this.gameManager){\r\n            Logger.error('Game Manager undefined in RewardsPlugin.');\r\n            return false;\r\n        }\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in RewardsPlugin.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    setTranslations()\r\n    {\r\n        if(!this.gameManager){\r\n            return false;\r\n        }\r\n        TranslationsMapper.forConfig(this.gameManager.config.client, Translations, RewardsConst.MESSAGE.DATA_VALUES);\r\n    }\r\n\r\n    listenEvents()\r\n    {\r\n        if(!this.events){\r\n            Logger.error('EventsManager undefined in RewardsPlugin for \"listenEvents\".');\r\n            return;\r\n        }\r\n        this.events.on('reldens.preloadUiScene', (preloadScene) => {\r\n            this.preloaderHandler.loadContents(preloadScene);\r\n        });\r\n        this.events.on('reldens.createEngineSceneDone', (event) => {\r\n            MessageProcessor.processRewardsMessagesQueue(event, this);\r\n        });\r\n    }\r\n\r\n    listenMessages()\r\n    {\r\n        if(!this.gameManager || !this.events){\r\n            Logger.error('Game Manager or EventsManager undefined in RewardsPlugin for \"listenMessages\".');\r\n            return;\r\n        }\r\n        this.gameManager.config.client.message.listeners[RewardsConst.KEY] = this.messageListener;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.RewardsPlugin = RewardsPlugin;\r\n","/**\r\n *\r\n * Reldens - PreloaderHandler\r\n *\r\n */\r\n\r\nconst { RewardsConst } = require('../constants');\r\n\r\nclass PreloaderHandler\r\n{\r\n\r\n    loadContents(uiScene)\r\n    {\r\n        let rewardsTemplatePath = '/assets/features/rewards/templates/';\r\n        uiScene.load.html(RewardsConst.KEY, rewardsTemplatePath+'ui-rewards.html');\r\n        uiScene.load.html(RewardsConst.TEMPLATES.REWARDS_LIST, rewardsTemplatePath+'ui-rewards-list.html');\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.PreloaderHandler = PreloaderHandler;\r\n","/**\r\n *\r\n * Reldens - RewardsConst\r\n *\r\n */\r\n\r\nlet prefix = 'rwd';\r\nlet snippetsPrefix = 'rewards.';\r\n\r\nmodule.exports.RewardsConst = {\r\n    KEY: 'rewards',\r\n    PREFIX: prefix,\r\n    ACTIONS: {\r\n        INITIALIZE: prefix+'Ini',\r\n        UPDATE: prefix+'Up',\r\n        ACCEPT_REWARD: prefix+'Acpt',\r\n        ACCEPTED_REWARD: prefix+'Acpted'\r\n    },\r\n    SPLIT_EXPERIENCE: {\r\n        ALL: 0,\r\n        PROPORTIONAL_BY_LEVEL: 1\r\n    },\r\n    SPLIT_MODIFIER: {\r\n        ALL: 0,\r\n        RANDOM: 1\r\n    },\r\n    SPLIT_ITEMS: {\r\n        DROP_KEEPS: 0,\r\n        RANDOM: 1\r\n    },\r\n    MESSAGE: {\r\n        DATA: {\r\n            LABEL: 'rlbl',\r\n            DESCRIPTION: 'rdes',\r\n            POSITION: 'rpos',\r\n            SHOW_REWARD_IMAGE: 'srimg',\r\n            REWARD_IMAGE: 'rimg',\r\n            REWARD_IMAGE_PATH: 'rimgp',\r\n            EVENT_DATA: 'redt',\r\n            STATE_DATA: 'resd',\r\n            ITEMS_DATA: 'rmid',\r\n            ITEM_KEY: 'rikey',\r\n            ITEM_LABEL: 'rilbl',\r\n            ITEM_DESCRIPTION: 'rides',\r\n            ITEM_QUANTITY: 'riqty'\r\n        },\r\n        DATA_VALUES: {\r\n            NAMESPACE: 'rewards'\r\n        }\r\n    },\r\n    TEMPLATES: {\r\n        REWARDS_LIST: 'rewardsList'\r\n    },\r\n    SNIPPETS: {\r\n        PREFIX: snippetsPrefix,\r\n        TITLE: snippetsPrefix+'title',\r\n        ACCEPTED_REWARD: snippetsPrefix+'acceptedReward'\r\n    }\r\n};\r\n","/**\r\n *\r\n * Reldens - MessageListener\r\n *\r\n */\r\n\r\nconst { MessageHandler } = require('./message-handler');\r\nconst { RewardsConst } = require('../constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass MessageListener\r\n{\r\n\r\n    async executeClientMessageActions(props)\r\n    {\r\n        let message = sc.get(props, 'message', false);\r\n        if(!message){\r\n            Logger.error('Missing message data on RewardsMessageListener.', props);\r\n            return false;\r\n        }\r\n        let roomEvents = sc.get(props, 'roomEvents', false);\r\n        if(!roomEvents){\r\n            Logger.error('Missing RoomEvents on RewardsMessageListener.', props);\r\n            return false;\r\n        }\r\n        if(!this.isRewardsMessage(message)){\r\n            return false;\r\n        }\r\n        let messageHandler = new MessageHandler({roomEvents, message});\r\n        if(!messageHandler.validate()){\r\n            if(!roomEvents.rewardsMessagesQueue){\r\n                roomEvents.rewardsMessagesQueue = [];\r\n            }\r\n            roomEvents.rewardsMessagesQueue.push(message);\r\n            return true;\r\n        }\r\n        return this.handleRewardsMessage(message, messageHandler);\r\n    }\r\n\r\n    handleRewardsMessage(message, messageHandler)\r\n    {\r\n        if(RewardsConst.ACTIONS.UPDATE === message.act){\r\n            return messageHandler.updateRewardsBox();\r\n        }\r\n        if(RewardsConst.ACTIONS.ACCEPTED_REWARD === message.act){\r\n            return messageHandler.showAcceptedReward();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isRewardsMessage(message)\r\n    {\r\n        return 0 === message.act?.indexOf(RewardsConst.PREFIX);\r\n    }\r\n}\r\n\r\nmodule.exports.MessageListener = MessageListener;\r\n","/**\r\n *\r\n * Reldens - MessageHandler\r\n *\r\n */\r\n\r\nconst { UserInterface } = require('../../game/client/user-interface');\r\nconst { RewardsConst } = require('../constants');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass MessageHandler\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        this.roomEvents = sc.get(props, 'roomEvents', false);\r\n        this.message = sc.get(props, 'message', false);\r\n        this.gameManager = this.roomEvents?.gameManager;\r\n        this.gameDom = this.gameManager?.gameDom;\r\n        this.config = this.gameManager?.config;\r\n        /** @type {?Translator} */\r\n        this.translator = this.gameManager?.services?.translator;\r\n        this.uiScene = this.gameManager?.gameEngine?.uiScene;\r\n    }\r\n\r\n    validate()\r\n    {\r\n        if(!this.roomEvents){\r\n            Logger.info('Missing RoomEvents on RewardsMessageHandler.');\r\n            return false;\r\n        }\r\n        if(!this.message){\r\n            Logger.info('Missing message on RewardsMessageHandler.');\r\n            return false;\r\n        }\r\n        if(!this.gameManager){\r\n            Logger.info('Missing GameManager on RewardsMessageHandler.');\r\n            return false;\r\n        }\r\n        // @NOTE: the message could arrive before the uiScene gets ready.\r\n        // if(!this.uiScene){\r\n        //     Logger.info('Missing UI Scene on MessageHandler.');\r\n        // }\r\n        return this.uiScene;\r\n    }\r\n\r\n    createRewardsUi(createUiWithKey)\r\n    {\r\n        let rewardsUi = sc.get(this.uiScene.userInterfaces, createUiWithKey);\r\n        if(rewardsUi){\r\n            return rewardsUi;\r\n        }\r\n        if(!this.uiScene.userInterfaces){\r\n            this.uiScene.userInterfaces = {};\r\n        }\r\n        let uiRewards = new UserInterface(\r\n            this.gameManager,\r\n            {id: createUiWithKey, type: createUiWithKey, defaultOpen: true, defaultClose: true},\r\n            '/assets/features/rewards/templates/ui-rewards.html',\r\n            createUiWithKey\r\n        );\r\n        uiRewards.createUiElement(this.uiScene, createUiWithKey);\r\n        uiRewards.closeButton.addEventListener('click', () => {\r\n            this.gameDom.emptyElement('.accepted-reward');\r\n        });\r\n        // @TODO - BETA - Check if this can be moved inside the createUiElement.\r\n        let uiBox = this.uiScene.elementsUi[createUiWithKey];\r\n        if(!uiBox){\r\n            Logger.error('Scores UI box not found.', {uiRewards, uiBox});\r\n            return false;\r\n        }\r\n        let title = this.translator.t(\r\n            this.config.getWithoutLogs('client/rewards/labels/title', RewardsConst.SNIPPETS.TITLE)\r\n        );\r\n        this.roomEvents.uiSetTitleAndContent(uiBox, {title}, this.uiScene);\r\n        this.uiScene.userInterfaces[createUiWithKey] = uiRewards;\r\n        return this.uiScene.userInterfaces[createUiWithKey];\r\n    }\r\n\r\n    updateRewardsBox()\r\n    {\r\n        this.createRewardsUi(RewardsConst.KEY);\r\n        let rewards = sc.get(this.message, 'rewards', false);\r\n        if(!rewards){\r\n            Logger.debug('Missing rewards data on message.');\r\n            return;\r\n        }\r\n        this.enrichForDisplay(rewards);\r\n        this.uiScene.rewards = rewards;\r\n        this.roomEvents.uiSetContent(\r\n            this.uiScene.elementsUi[RewardsConst.KEY],\r\n            {content: this.createUpdateContent()},\r\n            this.uiScene\r\n        );\r\n        this.showRewardsNotificationBalloon();\r\n        this.activateRewardsAction();\r\n    }\r\n\r\n    showAcceptedReward()\r\n    {\r\n        this.createRewardsUi(RewardsConst.KEY);\r\n        let acceptedReward = sc.get(this.message, 'acceptedReward', false);\r\n        if(!acceptedReward){\r\n            Logger.debug('Missing rewards on update message.');\r\n            return;\r\n        }\r\n        this.enrichForDisplay([acceptedReward]);\r\n        this.uiScene.acceptedReward = acceptedReward;\r\n        this.roomEvents.uiSetContent(\r\n            this.uiScene.elementsUi[RewardsConst.KEY],\r\n            {content: this.createUpdateContent()},\r\n            this.uiScene\r\n        );\r\n    }\r\n\r\n    createUpdateContent()\r\n    {\r\n        // @TODO - BETA - Move the template load from cache as part of the engine driver.\r\n        let templateContent = this.uiScene.cache.html.get(RewardsConst.TEMPLATES.REWARDS_LIST);\r\n        if(!templateContent){\r\n            Logger.error('Missing template \"' + RewardsConst.TEMPLATES.REWARDS_LIST + '\".');\r\n            return '';\r\n        }\r\n        let acceptedReward = this.uiScene.acceptedReward;\r\n        let acceptedRewardMessage = acceptedReward\r\n            ? this.translator.t(\r\n                this.config.getWithoutLogs(\r\n                    'client/rewards/labels/acceptedReward',\r\n                    RewardsConst.SNIPPETS.ACCEPTED_REWARD\r\n                ),\r\n                {rewardLabel: acceptedReward.translated.label}\r\n            )\r\n            : '';\r\n        let templateParams = {rewards: this.uiScene.rewards, acceptedReward, acceptedRewardMessage};\r\n        return this.gameManager.gameEngine.parseTemplate(templateContent, templateParams);\r\n    }\r\n\r\n    enrichForDisplay(rewards)\r\n    {\r\n        for(let reward of rewards){\r\n            let description = this.translator.t(\r\n                reward[RewardsConst.MESSAGE.DATA.DESCRIPTION] || '',\r\n                {loginCount: (reward[RewardsConst.MESSAGE.DATA.EVENT_DATA]?.days || '')}\r\n            );\r\n            if(this.config.getWithoutLogs('client/rewards/labels/includeItemsDescription', true)){\r\n                description += this.mapItemsText(reward);\r\n            }\r\n            let label = this.translator.t(\r\n                reward[RewardsConst.MESSAGE.DATA.LABEL] || '',\r\n                {loginCount: (reward[RewardsConst.MESSAGE.DATA.EVENT_DATA]?.days || '')}\r\n            );\r\n            reward.translated = {label, description};\r\n            let rewardStateData = reward[RewardsConst.MESSAGE.DATA.STATE_DATA];\r\n            reward.activeClass = rewardStateData?.ready && !rewardStateData?.complete ? 'active' : 'inactive';\r\n            reward.showRewardImage = reward[RewardsConst.MESSAGE.DATA.SHOW_REWARD_IMAGE] || '';\r\n            reward.rewardImage = reward[RewardsConst.MESSAGE.DATA.REWARD_IMAGE] || '';\r\n            reward.rewardImagePath = reward[RewardsConst.MESSAGE.DATA.REWARD_IMAGE_PATH] || '';\r\n        }\r\n        return rewards;\r\n    }\r\n\r\n    mapItemsText(reward)\r\n    {\r\n        // @TODO - BETA - Add items template to show icons and description.\r\n        let itemsSeparator = this.config.getWithoutLogs('client/rewards/labels/itemsSeparator', '<br/>');\r\n        let itemsTemplate = this.config.getWithoutLogs('client/rewards/labels/itemsTemplate', '%label (%quantity)');\r\n        return itemsSeparator + reward[RewardsConst.MESSAGE.DATA.ITEMS_DATA]?.map(\r\n            (item) => {\r\n                itemsTemplate = itemsTemplate.replace('%label', item[RewardsConst.MESSAGE.DATA.ITEM_LABEL]);\r\n                itemsTemplate = itemsTemplate.replace('%quantity', item[RewardsConst.MESSAGE.DATA.ITEM_QUANTITY]);\r\n                return itemsTemplate;\r\n            }\r\n        ).join(itemsSeparator);\r\n    }\r\n\r\n    showRewardsNotificationBalloon()\r\n    {\r\n        let balloon = this.gameDom.getElement('#rewards-notification-balloon');\r\n        let activeRewards = this.gameDom.getElements('.reward-active');\r\n        if(balloon && activeRewards && 0 < activeRewards.label){\r\n            balloon.classList.remove('hidden');\r\n            return;\r\n        }\r\n        balloon.classList.add('hidden');\r\n    }\r\n\r\n    activateRewardsAction()\r\n    {\r\n        let rewardsElements = this.gameDom.getElements('.reward-active');\r\n        for(let rewardElement of rewardsElements){\r\n            rewardElement.addEventListener('click', () => {\r\n                this.gameManager.activeRoomEvents.send({\r\n                    [GameConst.ACTION_KEY]: RewardsConst.ACTIONS.ACCEPT_REWARD,\r\n                    id: rewardElement.dataset.rewardId\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MessageHandler = MessageHandler;\r\n","/**\r\n *\r\n * Reldens - MessagesProcessor\r\n *\r\n */\r\n\r\nconst { MessageHandler } = require('./message-handler');\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass MessagesProcessor\r\n{\r\n\r\n    static processRewardsMessagesQueue(event, rewardsPlugin)\r\n    {\r\n        let roomEvents = event?.roomEvents;\r\n        if(!roomEvents){\r\n            Logger.critical('RoomEvents undefined for process Rewards messages queue on RewardsPlugin.', event);\r\n            return false;\r\n        }\r\n        if(!sc.isArray(roomEvents.rewardsMessagesQueue)){\r\n            return;\r\n        }\r\n        if(0 === roomEvents.rewardsMessagesQueue.length){\r\n            return;\r\n        }\r\n        for(let message of roomEvents.rewardsMessagesQueue){\r\n            rewardsPlugin.messageListener?.handleRewardsMessage(message, new MessageHandler({roomEvents, message}));\r\n        }\r\n        roomEvents.rewardsMessagesQueue = [];\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.MessageProcessor = MessagesProcessor;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    rewards: {\r\n        title: 'Rewards',\r\n        dailyLogin: 'Daily Login',\r\n        dailyDescription: 'Login every day and claim your reward',\r\n        straightDaysLogin: '%loginCount Days Login',\r\n        straightDaysDescription: 'Login every day for %loginCount days and claim your reward',\r\n        acceptedReward: 'You accepted the \"%rewardLabel\" reward!'\r\n    }\r\n}\r\n","/**\r\n *\r\n * Reldens - FirebaseConnector\r\n *\r\n */\r\n\r\nconst FirebaseApp = require('firebase/compat/app').default;\r\nconst FirebaseAnalytics = require('firebase/compat/analytics');\r\nconst FirebaseAuth = require('firebase/auth');\r\nconst FirebaseUi = require('firebaseui');\r\nconst { ErrorsBlockHandler } = require('../../game/client/handlers/errors-block-handler');\r\nconst { GameConst } = require('../../game/constants');\r\nconst { ErrorManager, Logger, sc } = require('@reldens/utils');\r\n\r\nclass FirebaseConnector\r\n{\r\n\r\n    constructor(gameManager)\r\n    {\r\n        if(!gameManager){\r\n            ErrorManager.error('FirebaseConnector - Missing game manager.');\r\n        }\r\n        this.gameManager = gameManager;\r\n        this.gameDom = this.gameManager.gameDom;\r\n        this.analytics = FirebaseAnalytics;\r\n        this.app = FirebaseApp;\r\n        this.firebaseAuth = FirebaseAuth;\r\n        this.ui = FirebaseUi;\r\n        this.authUi = false;\r\n        this.isActive = false;\r\n        this.containerId = '#firebaseui-auth-container';\r\n        this.uiConfig = {\r\n            signInOptions: [\r\n                // uncomment, add or remove options as you need:\r\n                // {provider: this.auth.EmailAuthProvider.PROVIDER_ID}\r\n                {provider: this.firebaseAuth.GoogleAuthProvider.PROVIDER_ID},\r\n                {provider: this.firebaseAuth.FacebookAuthProvider.PROVIDER_ID},\r\n                // {provider: this.auth.TwitterAuthProvider.PROVIDER_ID},\r\n                {provider: this.firebaseAuth.GithubAuthProvider.PROVIDER_ID}\r\n            ],\r\n            // this is to avoid the redirect in the game window:\r\n            signInFlow: 'popup'\r\n        };\r\n        this.gameManager.events.on('reldens.beforeJoinGame', (props) => {\r\n            if(props.formData['formId'] === 'firebase-login'){\r\n                props.gameManager.userData.isFirebaseLogin = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    startFirebase()\r\n    {\r\n        // @TODO - BETA - Refactor in multiple functions.\r\n        let firebaseUrl = this.gameManager.appServerUrl+GameConst.ROUTE_PATHS.FIREBASE;\r\n        this.gameDom.getJSON(firebaseUrl, (err, response) => {\r\n            if(err){\r\n                Logger.error('FirebaseConnector - Failed to load firebase config.', err);\r\n                return false;\r\n            }\r\n            if(!response || !response.enabled){\r\n                return false;\r\n            }\r\n            let firebaseConfig = response.firebaseConfig;\r\n            this.initAuth(firebaseConfig, this.uiConfig);\r\n            // logout on refresh:\r\n            this.gameDom.getWindow().addEventListener('beforeunload', () => {\r\n                if(this.isActive){\r\n                    this.app.auth().signOut();\r\n                }\r\n            });\r\n            // check the current auth state:\r\n            this.app.auth().onAuthStateChanged((user) => {\r\n                user ? this.setActiveUser(user) : this.startAuthUi();\r\n                return false;\r\n            });\r\n            let firebaseLogin = this.gameDom.getElement('#firebase-login');\r\n            if(firebaseLogin){\r\n                this.activateLoginBehavior(firebaseLogin);\r\n            }\r\n        });\r\n    }\r\n\r\n    activateLoginBehavior(firebaseLogin)\r\n    {\r\n        firebaseLogin.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            if(!firebaseLogin.checkValidity()){\r\n                return false;\r\n            }\r\n            this.gameDom.getElement('.firebase-row-container').classList.remove('hidden');\r\n        });\r\n        let firebaseUser = this.gameDom.getElement('#firebase-username');\r\n        if(!firebaseUser){\r\n            return false;\r\n        }\r\n        this.gameDom.getElement('.firebase-row-container').classList.remove('hidden');\r\n        firebaseUser.addEventListener('change', () => {\r\n            ErrorsBlockHandler.reset(firebaseLogin);\r\n        });\r\n        firebaseUser.addEventListener('focus', () => {\r\n            ErrorsBlockHandler.reset(firebaseLogin);\r\n        });\r\n    }\r\n\r\n    startAuthUi()\r\n    {\r\n        // if not logged then start the auth ui:\r\n        this.isActive = false;\r\n        if(this.gameDom.getElement(this.containerId)){\r\n            this.gameDom.getElement(this.containerId).innerHTML = '';\r\n        }\r\n        this.authUi.start(this.containerId, this.uiConfig);\r\n    }\r\n\r\n    setActiveUser(user)\r\n    {\r\n        this.isActive = true;\r\n        let formData = {\r\n            formId: 'firebase-login',\r\n            email: user.email,\r\n            username: this.gameDom.getElement('#firebase-username').value,\r\n            password: user.uid\r\n        };\r\n        this.gameManager.startGame(formData, true);\r\n    }\r\n\r\n    initAuth(firebaseConfig, uiConfig)\r\n    {\r\n        if(!firebaseConfig || !uiConfig){\r\n            Logger.error('Missing firebase configuration.');\r\n            return false;\r\n        }\r\n        this.firebaseConfig = firebaseConfig;\r\n        this.uiConfig = uiConfig;\r\n        this.app.initializeApp(this.firebaseConfig);\r\n        if(sc.hasOwn(this.firebaseConfig, 'measurementId')){\r\n            this.app.analytics();\r\n        }\r\n        this.authUi = new this.ui.auth.AuthUI(this.app.auth());\r\n        // if callbacks or sign-in success result was not customized then we will use a return false for our default:\r\n        if(!sc.hasOwn(this.uiConfig, 'callbacks')){\r\n            this.uiConfig.callbacks = {};\r\n        }\r\n        // our signInSuccessWithAuthResult default callback is to avoid any missing redirect warnings we don't use:\r\n        if(!sc.hasOwn(this.uiConfig.callbacks, 'signInSuccessWithAuthResult')){\r\n            this.uiConfig.callbacks.signInSuccessWithAuthResult = () => {\r\n                // avoid redirect:\r\n                return false;\r\n            };\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.FirebaseConnector = FirebaseConnector;\r\n","/**\r\n *\r\n * Reldens - ConfigManager\r\n *\r\n */\r\n\r\nconst { ConfigProcessor } = require('../processor');\r\n\r\nclass ConfigManager extends ConfigProcessor\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.client = {\r\n            general: {\r\n                users: {\r\n                    allowRegistration: true,\r\n                    allowGuest: true,\r\n                    allowGuestUserName: true\r\n                }\r\n            },\r\n            customClasses: {\r\n                message: {\r\n                    listeners: {}\r\n                }\r\n            },\r\n            message: {\r\n                listeners: {}\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ConfigManager = ConfigManager;\r\n","/**\r\n *\r\n * Reldens - ConfigProcessor\r\n *\r\n */\r\n\r\nconst { Logger, sc } = require('@reldens/utils');\r\n\r\nclass ConfigProcessor\r\n{\r\n\r\n    constructor()\r\n    {\r\n        this.avoidLog = false;\r\n    }\r\n\r\n    get(path, defaultValue)\r\n    {\r\n        let defaultReturn = 'undefined' !== typeof defaultValue ? defaultValue : false;\r\n        let pathArray = path.split('/');\r\n        if(2 > pathArray.length){\r\n            if(!this.avoidLog){\r\n                Logger.error('Path level is too low:', path);\r\n            }\r\n            return defaultReturn;\r\n        }\r\n        let levelCheck = (this[pathArray[0]] || {});\r\n        for(let i = 1; i < pathArray.length; i++){\r\n            if(!sc.hasOwn(levelCheck, pathArray[i])){\r\n                if(!this.avoidLog){\r\n                    Logger.error('Configuration level '+i+' > \"'+pathArray[i]+'\" not defined: '+path);\r\n                }\r\n                levelCheck = defaultReturn;\r\n                break;\r\n            }\r\n            levelCheck = levelCheck[pathArray[i]];\r\n        }\r\n        return levelCheck;\r\n    }\r\n\r\n    getWithoutLogs(path, defaultValue = false)\r\n    {\r\n        this.avoidLog = true;\r\n        let result = this.get(path, defaultValue);\r\n        this.avoidLog = false;\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ConfigProcessor = ConfigProcessor;\r\n","/**\r\n *\r\n * Reldens - Translations - en_US\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    game: {\r\n        passwordConfirmationNotMatch: 'Password and confirmation does not match.',\r\n        pleaseReadTermsAndConditions: 'Please read and accept the terms and conditions and continue.',\r\n        sessionEnded: 'Your session ended, please login again.',\r\n        errors: {\r\n            missingClasses: 'None configured classes available.',\r\n            missingPlayerData: 'Missing player data.',\r\n            joiningRoom: 'There was an error while joining the room \"%joinRoomName\", please try again later.',\r\n            joiningFeatureRoom: 'There was an error while joining the feature room \"%joinRoomName\".',\r\n            reconnectClient: 'Reconnect Game Client error.',\r\n            sessionEnded: 'Your session ended, please login again.',\r\n            connectionLost: 'Connection lost, please login again.',\r\n            serverDown: 'Server is offline.'\r\n        },\r\n        pleaseSelectScene: 'Please select a Scene'\r\n    }\r\n}\r\n","/**\r\n *\r\n * Reldens - GameDom\r\n *\r\n */\r\n\r\nconst { sc } = require('@reldens/utils');\r\n\r\nclass GameDom\r\n{\r\n\r\n    constructor()\r\n    {\r\n        // @TODO - BETA - Change all hardcoded values, and make GameDom a full driver for all the game elements.\r\n        this.styleSuffix = {\r\n            width: 'px',\r\n            height: 'px',\r\n            top: 'px',\r\n            bottom: 'px',\r\n            left: 'px',\r\n            right: 'px'\r\n        };\r\n    }\r\n\r\n    getWindow()\r\n    {\r\n        return window;\r\n    }\r\n\r\n    getDocument()\r\n    {\r\n        return window.document;\r\n    }\r\n\r\n    getElement(querySelector, container = false)\r\n    {\r\n        return (container || document).querySelector(querySelector);\r\n    }\r\n\r\n    getElements(querySelector, container)\r\n    {\r\n        return (container || document).querySelectorAll(querySelector);\r\n    }\r\n\r\n    emptyElement(querySelector, container = false)\r\n    {\r\n        let element = this.getElement(querySelector, container);\r\n        if(element){\r\n            element.innerHTML = '';\r\n        }\r\n    }\r\n\r\n    appendToElement(querySelector, newContent)\r\n    {\r\n        let element = this.getElement(querySelector);\r\n        if(!element || !newContent){\r\n            return false;\r\n        }\r\n        let template = document.createElement('template');\r\n        template.innerHTML = newContent;\r\n        for(let i=0; i < template.content.childNodes.length; i++){\r\n            element.appendChild(template.content.childNodes[i]);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    updateContent(querySelector, newContent)\r\n    {\r\n        let element = this.getElement(querySelector);\r\n        if(!element){\r\n            return false;\r\n        }\r\n        element.innerHTML = newContent;\r\n        return element;\r\n    }\r\n\r\n    removeElement(querySelector)\r\n    {\r\n        this.getElement(querySelector)?.remove();\r\n    }\r\n\r\n    createElement(type, id = '', classNamesList)\r\n    {\r\n        let element = document.createElement(type);\r\n        if('' !== id){\r\n            element.id = id;\r\n        }\r\n        if(sc.isArray(classNamesList)){\r\n            for(let className of classNamesList){\r\n                element.classList.add(className);\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n\r\n    setElementStyles(element, styles)\r\n    {\r\n        if(!element || !styles){\r\n            return false;\r\n        }\r\n        let stylesKeys = Object.keys(styles);\r\n        for(let i of stylesKeys){\r\n            let styleValue = styles[i];\r\n            let suffix = sc.get(this.styleSuffix, i, '');\r\n            if('' !== suffix){\r\n                styleValue += suffix;\r\n            }\r\n            element.style[i] = styleValue;\r\n        }\r\n    }\r\n\r\n    createElementWithStyles(type, id = '', styles = {})\r\n    {\r\n        let element = this.createElement(type, id);\r\n        this.setElementStyles(element, styles);\r\n        return element;\r\n    }\r\n\r\n    activeElement()\r\n    {\r\n        return document.activeElement;\r\n    }\r\n\r\n    insideInput()\r\n    {\r\n        return 'input' === this.activeElement().tagName.toLowerCase();\r\n    }\r\n\r\n    getJSON(url, callback)\r\n    {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.onload = () => {\r\n            let status = xhr.status;\r\n            200 === status ? callback(null, xhr.response) : callback(status);\r\n        };\r\n        xhr.send();\r\n    }\r\n\r\n    alertReload(message)\r\n    {\r\n        alert(message);\r\n        this.getWindow().location.reload();\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.GameDom = new GameDom();\r\n","{\r\n    \"name\": \"reldens\",\r\n    \"version\": \"4.0.0-beta.38.3\",\r\n    \"description\": \"Reldens - MMORPG Platform\",\r\n    \"author\": \"Damian A. Pastorini\",\r\n    \"license\": \"MIT\",\r\n    \"homepage\": \"https://www.reldens.com/\",\r\n    \"repository\": {\r\n        \"type\": \"git\",\r\n        \"url\": \"https://github.com/damian-pastorini/reldens.git\"\r\n    },\r\n    \"keywords\": [\r\n        \"reldens\",\r\n        \"game\",\r\n        \"mmorpg\",\r\n        \"rpg\",\r\n        \"dwd\",\r\n        \"colyseus\",\r\n        \"phaser\",\r\n        \"parcel\",\r\n        \"nodejs\",\r\n        \"mmo\",\r\n        \"multiplayer\",\r\n        \"rol\",\r\n        \"platform\",\r\n        \"framework\",\r\n        \"javascript\",\r\n        \"js\",\r\n        \"script\"\r\n    ],\r\n    \"bugs\": {\r\n        \"url\": \"https://github.com/damian-pastorini/reldens/issues\"\r\n    },\r\n    \"engines\": {\r\n        \"node\": \">=18.0.0\",\r\n        \"npm\": \">=8.0.0\"\r\n    },\r\n    \"bin\": {\r\n        \"reldens\": \"bin/reldens-commands.js\",\r\n        \"reldens-generate\": \"bin/generate.js\",\r\n        \"reldens-import\": \"bin/import.js\"\r\n    },\r\n    \"dependencies\": {\r\n        \"@colyseus/core\": \"0.15.55\",\r\n        \"@colyseus/monitor\": \"0.15.8\",\r\n        \"@colyseus/schema\": \"2.0.36\",\r\n        \"@colyseus/ws-transport\": \"0.15.3\",\r\n        \"@parcel/bundler-default\": \"2.13.3\",\r\n        \"@parcel/compressor-raw\": \"2.13.3\",\r\n        \"@parcel/core\": \"2.13.3\",\r\n        \"@parcel/namer-default\": \"2.13.3\",\r\n        \"@parcel/optimizer-css\": \"2.13.3\",\r\n        \"@parcel/optimizer-data-url\": \"2.13.3\",\r\n        \"@parcel/optimizer-htmlnano\": \"2.13.3\",\r\n        \"@parcel/optimizer-image\": \"2.13.3\",\r\n        \"@parcel/optimizer-swc\": \"2.13.3\",\r\n        \"@parcel/packager-css\": \"2.13.3\",\r\n        \"@parcel/packager-html\": \"2.13.3\",\r\n        \"@parcel/packager-js\": \"2.13.3\",\r\n        \"@parcel/packager-raw\": \"2.13.3\",\r\n        \"@parcel/packager-raw-url\": \"2.13.3\",\r\n        \"@parcel/packager-svg\": \"2.13.3\",\r\n        \"@parcel/packager-ts\": \"2.13.3\",\r\n        \"@parcel/packager-wasm\": \"2.13.3\",\r\n        \"@parcel/packager-xml\": \"2.13.3\",\r\n        \"@parcel/reporter-dev-server\": \"2.13.3\",\r\n        \"@parcel/resolver-default\": \"2.13.3\",\r\n        \"@parcel/runtime-browser-hmr\": \"2.13.3\",\r\n        \"@parcel/runtime-js\": \"2.13.3\",\r\n        \"@parcel/runtime-react-refresh\": \"2.13.3\",\r\n        \"@parcel/runtime-service-worker\": \"2.13.3\",\r\n        \"@parcel/transformer-babel\": \"2.13.3\",\r\n        \"@parcel/transformer-coffeescript\": \"2.13.3\",\r\n        \"@parcel/transformer-css\": \"2.13.3\",\r\n        \"@parcel/transformer-glsl\": \"2.13.3\",\r\n        \"@parcel/transformer-graphql\": \"2.13.3\",\r\n        \"@parcel/transformer-html\": \"2.13.3\",\r\n        \"@parcel/transformer-image\": \"2.13.3\",\r\n        \"@parcel/transformer-inline-string\": \"2.13.3\",\r\n        \"@parcel/transformer-js\": \"2.13.3\",\r\n        \"@parcel/transformer-json\": \"2.13.3\",\r\n        \"@parcel/transformer-jsonld\": \"2.13.3\",\r\n        \"@parcel/transformer-less\": \"2.13.3\",\r\n        \"@parcel/transformer-postcss\": \"2.13.3\",\r\n        \"@parcel/transformer-posthtml\": \"2.13.3\",\r\n        \"@parcel/transformer-pug\": \"2.13.3\",\r\n        \"@parcel/transformer-raw\": \"2.13.3\",\r\n        \"@parcel/transformer-react-refresh-wrap\": \"2.13.3\",\r\n        \"@parcel/transformer-sass\": \"2.13.3\",\r\n        \"@parcel/transformer-stylus\": \"2.13.3\",\r\n        \"@parcel/transformer-sugarss\": \"2.13.3\",\r\n        \"@parcel/transformer-svg\": \"2.13.3\",\r\n        \"@parcel/transformer-toml\": \"2.13.3\",\r\n        \"@parcel/transformer-typescript-types\": \"2.13.3\",\r\n        \"@parcel/transformer-vue\": \"2.13.3\",\r\n        \"@parcel/transformer-webmanifest\": \"2.13.3\",\r\n        \"@parcel/transformer-worklet\": \"2.13.3\",\r\n        \"@parcel/transformer-xml\": \"2.13.3\",\r\n        \"@parcel/transformer-yaml\": \"2.13.3\",\r\n        \"@reldens/game-data-generator\": \"^0.9.0\",\r\n        \"@reldens/items-system\": \"^0.34.0\",\r\n        \"@reldens/modifiers\": \"^0.26.0\",\r\n        \"@reldens/skills\": \"^0.34.0\",\r\n        \"@reldens/storage\": \"^0.31.0\",\r\n        \"@reldens/tile-map-generator\": \"^0.16.0\",\r\n        \"@reldens/utils\": \"^0.39.0\",\r\n        \"@sendgrid/mail\": \"8.1.4\",\r\n        \"bcrypt\": \"5.1.1\",\r\n        \"body-parser\": \"1.20.3\",\r\n        \"colyseus.js\": \"0.15.26\",\r\n        \"core-js\": \"3.39.0\",\r\n        \"cors\": \"2.8.5\",\r\n        \"crypto-browserify\": \"^3.12.1\",\r\n        \"dotenv\": \"16.4.5\",\r\n        \"ethers\": \"^6.15.0\",\r\n        \"events\": \"^3.3.0\",\r\n        \"express\": \"4.21.1\",\r\n        \"express-basic-auth\": \"1.2.1\",\r\n        \"express-formidable\": \"1.2.0\",\r\n        \"express-rate-limit\": \"7.4.1\",\r\n        \"express-session\": \"1.18.1\",\r\n        \"firebase\": \"10.14.1\",\r\n        \"firebaseui\": \"6.1.0\",\r\n        \"jimp\": \"1.6.0\",\r\n        \"mime-types\": \"2.1.35\",\r\n        \"multer\": \"^1.4.5-lts.1\",\r\n        \"mustache\": \"4.2.0\",\r\n        \"nodemailer\": \"6.9.16\",\r\n        \"p2\": \"0.7.1\",\r\n        \"pathfinding\": \"0.4.18\",\r\n        \"phaser\": \"3.87.0\",\r\n        \"react\": \"^18.3.1\",\r\n        \"react-dom\": \"^18.3.1\",\r\n        \"react-router-dom\": \"^6.26.2\",\r\n        \"regenerator-runtime\": \"0.14.1\",\r\n        \"stream-browserify\": \"^3.0.0\",\r\n        \"tslib\": \"2.8.1\"\r\n    },\r\n    \"alias\": {\r\n        \"reldens\": \"./\",\r\n        \"crypto\": \"crypto-browserify\",\r\n        \"stream\": \"stream-browserify\",\r\n        \"events\": \"events\",\r\n        \"process\": \"process/browser\",\r\n        \"colyseus.js\": \"colyseus.js/dist/colyseus.js\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"@babel/preset-react\": \"^7.27.1\",\r\n        \"parcel\": \"2.13.3\",\r\n        \"process\": \"^0.11.10\",\r\n        \"svgo\": \"^3.3.2\"\r\n    },\r\n    \"scripts\": {\r\n        \"start\": \"node index.js\",\r\n        \"build\": \"parcel build theme/default/index.html --dist-dir dist --public-url ./\"\r\n    }\r\n}\r\n","/**\r\n *\r\n * Reldens - Theme - Client Plugin\r\n *\r\n */\r\n\r\nconst { PluginInterface } = require('../../lib/features/plugin-interface');\r\nconst { Npc1 } = require('./objects/client/npc1');\r\n\r\nclass ClientPlugin extends PluginInterface\r\n{\r\n\r\n    setup(props)\r\n    {\r\n        this.events = props.events;\r\n        this.events.on('reldens.beforeJoinGame', (props) => {\r\n            this.defineCustomClasses(props);\r\n        });\r\n    }\r\n\r\n    defineCustomClasses(props)\r\n    {\r\n        // example on how to define a custom class with a plugin:\r\n        let customClasses = props.gameManager.config.client.customClasses;\r\n        if(!customClasses['objects']){\r\n            customClasses.objects = {};\r\n        }\r\n        customClasses.objects['people_town_1'] = Npc1;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ClientPlugin = ClientPlugin;\r\n","/**\r\n *\r\n * Reldens - Npc1\r\n *\r\n * Custom animation object sample.\r\n *\r\n */\r\n\r\nconst { AnimationEngine } = require('../../../../lib/objects/client/animation-engine');\r\n\r\nclass Npc1 extends AnimationEngine\r\n{\r\n\r\n    constructor(gameManager, props, currentPreloader)\r\n    {\r\n        // @TODO - BETA - This is an example of client side customizations.\r\n        super(gameManager, props, currentPreloader);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.Npc1 = Npc1;\r\n"],"names":[],"version":3,"file":"index.903fc3b4.js.map","sourceRoot":"../"}